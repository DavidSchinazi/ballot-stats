{
  "all_ballots": {
    "Adam Roach": [
      {
        "ad": "Adam Roach",
        "end": "2018-04-17 00:21:20-07:00",
        "end_reason": "new_position",
        "start": "2018-02-26 13:12:40-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Adam Roach",
        "end": "2018-06-18 14:41:57-07:00",
        "end_reason": "evaluation_closed",
        "start": "2018-04-17 00:21:20-07:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Alexey Melnikov": [
      {
        "ad": "Alexey Melnikov",
        "end": "2018-04-16 05:25:35-07:00",
        "end_reason": "new_position",
        "start": "2018-02-26 13:12:40-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alexey Melnikov",
        "end": "2018-06-18 14:41:57-07:00",
        "end_reason": "evaluation_closed",
        "start": "2018-04-16 05:25:35-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Alia Atlas": [
      {
        "ad": "Alia Atlas",
        "end": "2018-03-23 00:00:00+00:00",
        "end_reason": "ad_term_ended",
        "start": "2018-02-26 13:12:40-08:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Alissa Cooper": [
      {
        "ad": "Alissa Cooper",
        "end": "2018-04-18 18:29:20-07:00",
        "end_reason": "new_position",
        "start": "2018-02-26 13:12:40-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alissa Cooper",
        "end": "2018-06-18 14:41:57-07:00",
        "end_reason": "evaluation_closed",
        "start": "2018-04-18 18:29:20-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Alvaro Retana": [
      {
        "ad": "Alvaro Retana",
        "end": "2018-04-18 19:50:24-07:00",
        "end_reason": "new_position",
        "start": "2018-02-26 13:12:40-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alvaro Retana",
        "end": "2018-06-18 14:41:57-07:00",
        "end_reason": "evaluation_closed",
        "start": "2018-04-18 19:50:24-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Ben Campbell": [
      {
        "ad": "Ben Campbell",
        "end": "2018-02-26 13:12:40-08:00",
        "end_reason": "new_position",
        "start": "2018-02-26 13:12:40-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Ben Campbell",
        "end": "2018-06-18 14:41:57-07:00",
        "end_reason": "evaluation_closed",
        "start": "2018-02-26 13:12:40-08:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Benjamin Kaduk": [
      {
        "ad": "Benjamin Kaduk",
        "end": "2018-06-18 14:41:57-07:00",
        "end_reason": "evaluation_closed",
        "start": "2018-04-13 13:46:15-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Benoit Claise": [
      {
        "ad": "Benoit Claise",
        "end": "2018-03-23 00:00:00+00:00",
        "end_reason": "ad_term_ended",
        "start": "2018-02-26 13:12:40-08:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Deborah Brungard": [
      {
        "ad": "Deborah Brungard",
        "end": "2018-04-18 13:00:32-07:00",
        "end_reason": "new_position",
        "start": "2018-02-26 13:12:40-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Deborah Brungard",
        "end": "2018-06-18 14:41:57-07:00",
        "end_reason": "evaluation_closed",
        "start": "2018-04-18 13:00:32-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Eric Rescorla": [
      {
        "ad": "Eric Rescorla",
        "end": "2018-04-16 10:38:17-07:00",
        "end_reason": "new_position",
        "start": "2018-02-26 13:12:40-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Eric Rescorla",
        "end": "2018-04-16 12:57:36-07:00",
        "end_reason": "discuss_updated",
        "start": "2018-04-16 10:38:17-07:00",
        "text": "Rich version of this review at: https://mozphab-ietf.devsvcdev.mozaws.net/D3382 DETAIL >\u00a0 \u00a0 \u00a0 When an offerer generates an offer, in which it wants to add a new >\u00a0 \u00a0 \u00a0 bundled \"m=\" section, the offerer MUST: >\u00a0   >\u00a0 \u00a0 \u00a0 o\u00a0 Assign the offerer BUNDLE address:port (previously selected >\u00a0 \u00a0 \u00a0 \u00a0  [Section 8.3.1] or newly suggested [Section 8.5.1]) to the added >\u00a0 \u00a0 \u00a0 \u00a0  \"m=\" section; or IMPORTANT: This doesn't sound right. You can't use the existing address:port, because if the peer rejects BUNDLE but accepts the m= section then it's broken. >\u00a0 \u00a0 \u00a0 o\u00a0 When the BUNDLE transport has been established, ICE connectivity >\u00a0 \u00a0 \u00a0 \u00a0  checks and keep-alives only need to be performed for the BUNDLE >\u00a0 \u00a0 \u00a0 \u00a0  transport, instead of per individual \"m=\" section within the >\u00a0 \u00a0 \u00a0 \u00a0  BUNDLE group. >\u00a0   >\u00a0 \u00a0 \u00a0 o\u00a0 In an offer, if the offer assigns a unique address:port to one or IMPORTANT: This does not define how to interact with trickle ICE.",
        "type": "Discuss"
      },
      {
        "ad": "Eric Rescorla",
        "end": "2018-05-19 13:18:20-07:00",
        "end_reason": "position_updated",
        "start": "2018-04-16 12:57:36-07:00",
        "text": "Rich version of this review at: https://mozphab-ietf.devsvcdev.mozaws.net/D3382 DETAIL >\u00a0 \u00a0 \u00a0 When an offerer generates an offer, in which it wants to add a new >\u00a0 \u00a0 \u00a0 bundled \"m=\" section, the offerer MUST: >\u00a0   >\u00a0 \u00a0 \u00a0 o\u00a0 Assign the offerer BUNDLE address:port (previously selected >\u00a0 \u00a0 \u00a0 \u00a0  [Section 8.3.1] or newly suggested [Section 8.5.1]) to the added >\u00a0 \u00a0 \u00a0 \u00a0  \"m=\" section; or IMPORTANT: This doesn't sound right. You can't use the existing address:port, because if the peer rejects BUNDLE but accepts the m= section then it's broken. >\u00a0 \u00a0 \u00a0 o\u00a0 When the BUNDLE transport has been established, ICE connectivity >\u00a0 \u00a0 \u00a0 \u00a0  checks and keep-alives only need to be performed for the BUNDLE >\u00a0 \u00a0 \u00a0 \u00a0  transport, instead of per individual \"m=\" section within the >\u00a0 \u00a0 \u00a0 \u00a0  BUNDLE group. >\u00a0   >\u00a0 \u00a0 \u00a0 o\u00a0 In an offer, if the offer assigns a unique address:port to one or IMPORTANT: This does not define how to interact with trickle ICE.",
        "type": "Discuss"
      },
      {
        "ad": "Eric Rescorla",
        "end": "2018-06-18 14:41:57-07:00",
        "end_reason": "evaluation_closed",
        "start": "2018-05-19 13:18:20-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Ignas Bagdonas": [
      {
        "ad": "Ignas Bagdonas",
        "end": "2018-06-18 14:41:57-07:00",
        "end_reason": "evaluation_closed",
        "start": "2018-04-19 07:03:53-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Kathleen Moriarty": [
      {
        "ad": "Kathleen Moriarty",
        "end": "2018-03-23 00:00:00+00:00",
        "end_reason": "ad_term_ended",
        "start": "2018-02-26 13:12:40-08:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Martin Vigoureux": [
      {
        "ad": "Martin Vigoureux",
        "end": "2018-06-18 14:41:57-07:00",
        "end_reason": "evaluation_closed",
        "start": "2018-04-19 07:00:39-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Mirja Kuhlewind": [
      {
        "ad": "Mirja Kuhlewind",
        "end": "2018-04-18 05:34:40-07:00",
        "end_reason": "new_position",
        "start": "2018-02-26 13:12:40-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Mirja Kuhlewind",
        "end": "2018-06-18 14:41:57-07:00",
        "end_reason": "evaluation_closed",
        "start": "2018-04-18 05:34:40-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Spencer Dawkins": [
      {
        "ad": "Spencer Dawkins",
        "end": "2018-04-16 07:43:18-07:00",
        "end_reason": "new_position",
        "start": "2018-02-26 13:12:40-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Spencer Dawkins",
        "end": "2018-06-18 14:41:57-07:00",
        "end_reason": "evaluation_closed",
        "start": "2018-04-16 07:43:18-07:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Suresh Krishnan": [
      {
        "ad": "Suresh Krishnan",
        "end": "2018-04-17 19:32:41-07:00",
        "end_reason": "new_position",
        "start": "2018-02-26 13:12:40-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Suresh Krishnan",
        "end": "2018-06-18 14:41:57-07:00",
        "end_reason": "evaluation_closed",
        "start": "2018-04-17 19:32:41-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Terry Manderson": [
      {
        "ad": "Terry Manderson",
        "end": "2018-06-18 14:41:57-07:00",
        "end_reason": "evaluation_closed",
        "start": "2018-02-26 13:12:40-08:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Warren Kumari": [
      {
        "ad": "Warren Kumari",
        "end": "2018-04-18 12:50:31-07:00",
        "end_reason": "new_position",
        "start": "2018-02-26 13:12:40-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Warren Kumari",
        "end": "2018-06-18 14:41:57-07:00",
        "end_reason": "evaluation_closed",
        "start": "2018-04-18 12:50:31-07:00",
        "text": null,
        "type": "No Objection"
      }
    ]
  },
  "doc_name": "rfc8843",
  "evaluation_end": "2018-06-18 14:41:57-07:00",
  "evaluation_start": "2018-02-26 13:12:40-08:00"
}