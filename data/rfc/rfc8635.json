{
  "all_ballots": {
    "Adam Roach": [
      {
        "ad": "Adam Roach",
        "end": "2019-01-22 20:09:26-08:00",
        "end_reason": "new_position",
        "start": "2019-01-17 12:14:42-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Adam Roach",
        "end": "2019-05-16 14:51:16-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-01-22 20:09:26-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Alexey Melnikov": [
      {
        "ad": "Alexey Melnikov",
        "end": "2019-01-22 06:01:54-08:00",
        "end_reason": "new_position",
        "start": "2019-01-17 12:14:42-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alexey Melnikov",
        "end": "2019-05-16 14:51:16-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-01-22 06:01:54-08:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Alissa Cooper": [
      {
        "ad": "Alissa Cooper",
        "end": "2019-01-23 11:52:31-08:00",
        "end_reason": "new_position",
        "start": "2019-01-17 12:14:42-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alissa Cooper",
        "end": "2019-03-05 06:21:51-08:00",
        "end_reason": "position_updated",
        "start": "2019-01-23 11:52:31-08:00",
        "text": "s this is a BCP, I don't understand why transport encryption of the private key is not normatively required. Could you explain?",
        "type": "Discuss"
      },
      {
        "ad": "Alissa Cooper",
        "end": "2019-05-16 14:51:16-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-03-05 06:21:51-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Alvaro Retana": [
      {
        "ad": "Alvaro Retana",
        "end": "2019-01-23 09:46:28-08:00",
        "end_reason": "new_position",
        "start": "2019-01-17 12:14:42-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alvaro Retana",
        "end": "2019-05-16 14:51:16-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-01-23 09:46:28-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Ben Campbell": [
      {
        "ad": "Ben Campbell",
        "end": "2019-01-22 19:26:19-08:00",
        "end_reason": "new_position",
        "start": "2019-01-17 12:14:42-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Ben Campbell",
        "end": "2019-03-29 00:00:00+00:00",
        "end_reason": "ad_term_ended",
        "start": "2019-01-22 19:26:19-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Benjamin Kaduk": [
      {
        "ad": "Benjamin Kaduk",
        "end": "2019-01-21 09:27:48-08:00",
        "end_reason": "new_position",
        "start": "2019-01-17 12:14:42-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Benjamin Kaduk",
        "end": "2019-05-16 14:51:16-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-01-21 09:27:48-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Deborah Brungard": [
      {
        "ad": "Deborah Brungard",
        "end": "2019-01-23 12:09:07-08:00",
        "end_reason": "new_position",
        "start": "2019-01-17 12:14:42-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Deborah Brungard",
        "end": "2019-05-16 14:51:16-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-01-23 12:09:07-08:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Eric Rescorla": [
      {
        "ad": "Eric Rescorla",
        "end": "2019-01-23 20:57:42-08:00",
        "end_reason": "new_position",
        "start": "2019-01-17 12:14:42-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Eric Rescorla",
        "end": "2019-03-29 00:00:00+00:00",
        "end_reason": "ad_term_ended",
        "start": "2019-01-23 20:57:42-08:00",
        "text": "Rich version of this review at: https://mozphab-ietf.devsvcdev.mozaws.net/D13996 DETAIL S 2. >\u00a0   >\u00a0 \u00a0 \u00a0 Operators are free to use either the router-driven or operator-driven >\u00a0 \u00a0 \u00a0 method as supported by the platform.\u00a0 Regardless of the method >\u00a0 \u00a0 \u00a0 chosen, operators first establish a protected channel between the >\u00a0 \u00a0 \u00a0 management system and the router.\u00a0 How this protected channel is >\u00a0 \u00a0 \u00a0 established is router-specific and is beyond scope of this document. This seems rather under-specified. Given that we know that people are not careful about this, I think you need to specify some sort of minimum requirements for this channel. That need not be a particular protocol, but it needs to specify the security properties it provides. I see you have some SHOULD-level language later, but I think you need MUST level, and as noted below, I think the guidance is wrong. S 5.2. >\u00a0 \u00a0 \u00a0 the BGP Identifier when it sends the CSR to the CA. >\u00a0   >\u00a0 \u00a0 \u00a0 Even if the operator cannot extract the private key from the router, >\u00a0 \u00a0 \u00a0 this signature still provides a linkage between a private key and a >\u00a0 \u00a0 \u00a0 router.\u00a0 That is, the operator can verify the proof of possession >\u00a0 \u00a0 \u00a0 (POP), as required by [ RFC6484 ]. It's not clear to me what is being claimed in terms of PoP here. As I understand it, the certificate is a binding between the AS number/BGP identifier pair and the public key, but if neither of those is in the PKCS#10 request, then they're not signed over by the private key, and so PoP isn't really operative. The relevant question is whether if I obtain the PKCS#10 request I can obtain a certificate for an identity other than the intended one. S 5.2.1. >\u00a0 \u00a0 \u00a0 ensure the returned private key did in fact come from the operator, >\u00a0 \u00a0 \u00a0 but this requires that the operator also provision via the CLI or >\u00a0 \u00a0 \u00a0 include in the SignedData the RPKI CA certificate and relevant >\u00a0 \u00a0 \u00a0 operator's EE certificate(s).\u00a0 The router should inform the operator >\u00a0 \u00a0 \u00a0 whether or not the signature validates to a trust anchor; this >\u00a0 \u00a0 \u00a0 notification mechanism is out of scope. I don't understand what security this is intended to provide. As I understand it, the way this works is that the operator signs the PKCS#8 package and then sends it to the router, which verifies the signature. This verification is performed based on a key configured by the operator, right? But in that case, if someone obtains operator access to the router, they can just configure their own key, thus bypassing the signature check. Secondarily, I don't understand how this works if the RPKI CA certificate is included in the SignedData, because then how do I validate it against a trust anchor. Finally, how does the router know which of the large number of EEs signed by the RPKI CA it should accept signed PKCS#8 messages from. S 6. >\u00a0 \u00a0 \u00a0 private key it holds corresponds to the returned public key.\u00a0 If the >\u00a0 \u00a0 \u00a0 operator saved the PKCS#10 it can check this correspondence by >\u00a0 \u00a0 \u00a0 comparing the public key in the CSR to the public key in the returned >\u00a0 \u00a0 \u00a0 certificate.\u00a0 If the operator has not saved the PKCS#10, it can check >\u00a0 \u00a0 \u00a0 this correspondence by generating a signature on any data and then >\u00a0 \u00a0 \u00a0 verifying the signature using the returned certificate. It is not clear to me that this is correct. You seem to be assuming that it given a key pair (K_priv, K_pub), it is not possible to generate a new key K_pub' that will validate signatures made with K_priv. This isn't ordinarily an assumption we make of digital signature systems. S 8. >\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 the CA prior to operator initiating the router's CSR.\u00a0 CAs use >\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 authentication material to determine whether the router is >\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 eligible to receive a certificate. Authentication material at a >\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 minimum includes the router's AS number and BGP Identifier as >\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 well as the router's key material, but can also include >\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 additional information. Authentication material can be Surely it also includes some information that allows the router to prove it is entitled to a key with that AS and BGP identifier, but I'm not seeing this here. S 12.1. >\u00a0 \u00a0 \u00a0 CSR you sent; the certificate will include the subject name, serial >\u00a0 \u00a0 \u00a0 number, public key, and other fields as well as being signed by the >\u00a0 \u00a0 \u00a0 CA.\u00a0 After the CA issues the certificate, the CA returns the >\u00a0 \u00a0 \u00a0 certificate, and posts the certificate to the RPKI repository.\u00a0 Check >\u00a0 \u00a0 \u00a0 that the certificate corresponds to the private key by verifying the >\u00a0 \u00a0 \u00a0 signature on the CSR sent to the CA; this is just a check to make This is not the right check. The CSR contains the public key. If you want to check, make sure it is identical to the one in the cert.",
        "type": "Discuss"
      }
    ],
    "Ignas Bagdonas": [
      {
        "ad": "Ignas Bagdonas",
        "end": "2019-01-24 05:02:20-08:00",
        "end_reason": "new_position",
        "start": "2019-01-17 12:14:42-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Ignas Bagdonas",
        "end": "2019-05-16 14:51:16-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-01-24 05:02:20-08:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Martin Vigoureux": [
      {
        "ad": "Martin Vigoureux",
        "end": "2019-01-24 05:16:21-08:00",
        "end_reason": "new_position",
        "start": "2019-01-17 12:14:42-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Martin Vigoureux",
        "end": "2019-05-16 14:51:16-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-01-24 05:16:21-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Mirja Kuhlewind": [
      {
        "ad": "Mirja Kuhlewind",
        "end": "2019-01-21 03:45:58-08:00",
        "end_reason": "new_position",
        "start": "2019-01-17 12:14:42-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Mirja Kuhlewind",
        "end": "2019-05-16 14:51:16-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-01-21 03:45:58-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Roman Danyliw": [
      {
        "ad": "Roman Danyliw",
        "end": "2019-05-16 14:51:16-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-05-06 13:09:33-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Spencer Dawkins": [
      {
        "ad": "Spencer Dawkins",
        "end": "2019-01-22 16:10:49-08:00",
        "end_reason": "new_position",
        "start": "2019-01-17 12:14:42-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Spencer Dawkins",
        "end": "2019-03-29 00:00:00+00:00",
        "end_reason": "ad_term_ended",
        "start": "2019-01-22 16:10:49-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Suresh Krishnan": [
      {
        "ad": "Suresh Krishnan",
        "end": "2019-01-24 04:51:09-08:00",
        "end_reason": "new_position",
        "start": "2019-01-17 12:14:42-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Suresh Krishnan",
        "end": "2019-05-16 14:51:16-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-01-24 04:51:09-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Terry Manderson": [
      {
        "ad": "Terry Manderson",
        "end": "2019-01-23 21:16:53-08:00",
        "end_reason": "new_position",
        "start": "2019-01-17 12:14:42-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Terry Manderson",
        "end": "2019-03-29 00:00:00+00:00",
        "end_reason": "ad_term_ended",
        "start": "2019-01-23 21:16:53-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Warren Kumari": [
      {
        "ad": "Warren Kumari",
        "end": "2019-01-17 12:14:42-08:00",
        "end_reason": "new_position",
        "start": "2019-01-17 12:14:42-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Warren Kumari",
        "end": "2019-05-16 14:51:16-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-01-17 12:14:42-08:00",
        "text": null,
        "type": "Yes"
      }
    ]
  },
  "doc_name": "rfc8635",
  "evaluation_end": "2019-05-16 14:51:16-07:00",
  "evaluation_start": "2019-01-17 12:14:42-08:00"
}