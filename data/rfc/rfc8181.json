{
  "all_ballots": {
    "Alexey Melnikov": [
      {
        "ad": "Alexey Melnikov",
        "end": "2017-01-14 10:56:11-08:00",
        "end_reason": "new_position",
        "start": "2017-01-11 11:27:38-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alexey Melnikov",
        "end": "2017-01-18 02:14:57-08:00",
        "end_reason": "discuss_updated",
        "start": "2017-01-14 10:56:11-08:00",
        "text": "I find the document to be a bit short on normative references and some implementation details. Other than that the document looks fine. My specific questions and concern are as follows: 1) Please add a normative reference for HTTP, URI and RelaxNG on first use. 2) Base64 needs a normative reference (including the section number, as there are 2 variants). 3) Section 2 says that all payloads use CMS. None of your examples show CMS. Can you please elaborate on how CMS is used. 4) How can URI of the service be discovered?",
        "type": "Discuss"
      },
      {
        "ad": "Alexey Melnikov",
        "end": "2017-02-26 06:43:49-08:00",
        "end_reason": "position_updated",
        "start": "2017-01-18 02:14:57-08:00",
        "text": "I support Alissa's DISCUSS point on versioning. I find the document to be a bit short on normative references and some implementation details. Other than that the document looks fine. My specific questions and concern are as follows: 1) Please add a normative reference for HTTP, URI and RelaxNG on first use. 2) Base64 needs a normative reference (including the section number, as there are 2 variants). 3) Section 2 says that all payloads use CMS. None of your examples show CMS. Can you please elaborate on how CMS is used? 4) How can URI of the service be discovered?",
        "type": "Discuss"
      },
      {
        "ad": "Alexey Melnikov",
        "end": "2017-03-30 12:21:48-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-02-26 06:43:49-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Alia Atlas": [
      {
        "ad": "Alia Atlas",
        "end": "2017-01-17 18:41:09-08:00",
        "end_reason": "new_position",
        "start": "2017-01-11 11:27:38-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alia Atlas",
        "end": "2017-03-30 12:21:48-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-01-17 18:41:09-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Alissa Cooper": [
      {
        "ad": "Alissa Cooper",
        "end": "2017-01-17 07:39:29-08:00",
        "end_reason": "new_position",
        "start": "2017-01-11 11:27:38-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alissa Cooper",
        "end": "2017-02-22 11:22:30-08:00",
        "end_reason": "position_updated",
        "start": "2017-01-17 07:39:29-08:00",
        "text": "What is the upgrade path for the future when new versions of this protocol get published? How are clients and servers meant to agree on which version to use?",
        "type": "Discuss"
      },
      {
        "ad": "Alissa Cooper",
        "end": "2017-03-30 12:21:48-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-02-22 11:22:30-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Alvaro Retana": [
      {
        "ad": "Alvaro Retana",
        "end": "2017-01-11 11:27:39-08:00",
        "end_reason": "new_position",
        "start": "2017-01-11 11:27:38-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alvaro Retana",
        "end": "2017-03-30 12:21:48-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-01-11 11:27:39-08:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Ben Campbell": [
      {
        "ad": "Ben Campbell",
        "end": "2017-01-18 12:59:46-08:00",
        "end_reason": "new_position",
        "start": "2017-01-11 11:27:38-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Ben Campbell",
        "end": "2017-03-30 12:21:48-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-01-18 12:59:46-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Benoit Claise": [
      {
        "ad": "Benoit Claise",
        "end": "2017-01-19 05:36:12-08:00",
        "end_reason": "new_position",
        "start": "2017-01-11 11:27:38-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Benoit Claise",
        "end": "2017-03-30 12:21:48-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-01-19 05:36:12-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Deborah Brungard": [
      {
        "ad": "Deborah Brungard",
        "end": "2017-01-18 11:35:06-08:00",
        "end_reason": "new_position",
        "start": "2017-01-11 11:27:38-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Deborah Brungard",
        "end": "2017-03-30 12:21:48-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-01-18 11:35:06-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Jari Arkko": [
      {
        "ad": "Jari Arkko",
        "end": "2017-01-18 13:15:31-08:00",
        "end_reason": "new_position",
        "start": "2017-01-11 11:27:38-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Jari Arkko",
        "end": "2017-03-30 12:21:48-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-01-18 13:15:31-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Joel Jaeggli": [
      {
        "ad": "Joel Jaeggli",
        "end": "2017-01-18 22:26:51-08:00",
        "end_reason": "new_position",
        "start": "2017-01-11 11:27:38-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Joel Jaeggli",
        "end": "2017-03-30 12:21:48-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-01-18 22:26:51-08:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Kathleen Moriarty": [
      {
        "ad": "Kathleen Moriarty",
        "end": "2017-01-18 10:16:44-08:00",
        "end_reason": "new_position",
        "start": "2017-01-11 11:27:38-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Kathleen Moriarty",
        "end": "2017-03-30 12:21:48-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-01-18 10:16:44-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Mirja Kuhlewind": [
      {
        "ad": "Mirja Kuhlewind",
        "end": "2017-01-16 05:29:35-08:00",
        "end_reason": "new_position",
        "start": "2017-01-11 11:27:38-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Mirja Kuhlewind",
        "end": "2017-03-30 12:21:48-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-01-16 05:29:35-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Spencer Dawkins": [
      {
        "ad": "Spencer Dawkins",
        "end": "2017-01-16 16:53:41-08:00",
        "end_reason": "new_position",
        "start": "2017-01-11 11:27:38-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Spencer Dawkins",
        "end": "2017-03-30 12:21:48-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-01-16 16:53:41-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Stephen Farrell": [
      {
        "ad": "Stephen Farrell",
        "end": "2017-01-18 16:08:19-08:00",
        "end_reason": "new_position",
        "start": "2017-01-11 11:27:38-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Stephen Farrell",
        "end": "2017-02-22 16:11:52-08:00",
        "end_reason": "position_updated",
        "start": "2017-01-18 16:08:19-08:00",
        "text": "Why is sha-256 hardcoded? You could easily include a hash alg-id even as an option and in that way get algorithm agility, as called for by  BCP201 .\u00a0 (Or you could use something like ni URIs but that's a bit of a self-serving suggestion;-) Anyway, what's the plan for replacing sha-256 here? (This is a bit of a subset of Alissa's discuss with which I agree.) One possible way to handle this here is to identify sha-256 as the default hash algorithm but to re-define the ABNF for hash to allow an alg-id of some sort to be included there. Or have some generic versioning text somewhere that calls for a version bump if sha-256 is not to be used. (If the authors want to include this as a part of the discussion of Alissa's discuss, I'm fine with that and with clearing this discuss and letting the disucsion happen on that thread. But since the solutions could differ, I wanted to at least start a separate discussion on alg. agility.)",
        "type": "Discuss"
      },
      {
        "ad": "Stephen Farrell",
        "end": "2017-03-30 12:21:48-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-02-22 16:11:52-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Suresh Krishnan": [
      {
        "ad": "Suresh Krishnan",
        "end": "2017-01-18 20:30:17-08:00",
        "end_reason": "new_position",
        "start": "2017-01-11 11:27:38-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Suresh Krishnan",
        "end": "2017-03-30 12:21:48-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-01-18 20:30:17-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Terry Manderson": [
      {
        "ad": "Terry Manderson",
        "end": "2017-01-17 22:17:09-08:00",
        "end_reason": "new_position",
        "start": "2017-01-11 11:27:38-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Terry Manderson",
        "end": "2017-01-17 22:29:47-08:00",
        "end_reason": "discuss_updated",
        "start": "2017-01-17 22:17:09-08:00",
        "text": "Thanks for finally bringing this protocol forward. I support Alissa's and Alexey's concerns. I only have one discuss for this draft. Looking at section 4, operational considerations I was expecting to see a review of any considerations as to how this protocol works, the interaction between the layers of HTTP, CMS, and XML and any implementation differences/difficulties that exist between the 2 known implementations. Instead there is a discussion on laying out the repository structure under the mandatory to implement _retrieval_ mechanism (RSYNC) and the nuances of RSYNC itself. This appears to be misplaced as the protocol (HTTP/CMS/XML) interactions here are simply about publication from a certificate authority operator to a repository operator, and in that space surely the publication protocol (this doc) is agnostic to the exact repo structure. In both a database world (not a file based one) and where multiple RPKI fetch mechanisms (rsync, http, torrent, etc ...) are used, how is the exact URI meaningful for sidr-publication? There might be a deeper problem here regarding any potential collisions and negotiation of the URI space between the certificate authority operator and the publication repository operator. (sure, in a situation where Alice does both, no problem.) So you may wish to address issues like that in the operational considerations section as opposed to dealing with RSYNC (in)efficiencies.",
        "type": "Discuss"
      },
      {
        "ad": "Terry Manderson",
        "end": "2017-03-26 06:42:14-07:00",
        "end_reason": "position_updated",
        "start": "2017-01-17 22:29:47-08:00",
        "text": "Updating after reading sidr-oob-setup-06. I see that the publisher wins as per Section 5.2.4  My original discuss us below, so you may omit the concern about negotiating the URI. The remainder stands. Thanks T. =-=-=-=-=-=-=-=- Thanks for finally bringing this protocol forward. I support Alissa's and Alexey's concerns. I only have one discuss for this draft. Looking at section 4, operational considerations I was expecting to see a review of any considerations as to how this protocol works, the interaction between the layers of HTTP, CMS, and XML and any implementation differences/difficulties that exist between the 2 known implementations. Instead there is a discussion on laying out the repository structure under the mandatory to implement _retrieval_ mechanism (RSYNC) and the nuances of RSYNC itself. This appears to be misplaced as the protocol (HTTP/CMS/XML) interactions here are simply about publication from a certificate authority operator to a repository operator, and in that space surely the publication protocol (this doc) is agnostic to the exact repo structure. In both a database world (not a file based one) and where multiple RPKI fetch mechanisms (rsync, http, torrent, etc ...) are used, how is the exact URI meaningful for sidr-publication? There might be a deeper problem here regarding any potential collisions and negotiation of the URI space between the certificate authority operator and the publication repository operator. (sure, in a situation where Alice does both, no problem.) So you may wish to address issues like that in the operational considerations section as opposed to dealing with RSYNC (in)efficiencies.",
        "type": "Discuss"
      },
      {
        "ad": "Terry Manderson",
        "end": "2017-03-30 12:21:48-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-03-26 06:42:14-07:00",
        "text": null,
        "type": "No Objection"
      }
    ]
  },
  "doc_name": "rfc8181",
  "evaluation_end": "2017-03-30 12:21:48-07:00",
  "evaluation_start": "2017-01-11 11:27:38-08:00"
}