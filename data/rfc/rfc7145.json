{
  "all_ballots": {
    "Adrian Farrel": [
      {
        "ad": "Adrian Farrel",
        "end": "2013-06-27 07:34:32-07:00",
        "end_reason": "new_position",
        "start": "2013-06-17 06:51:18-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Adrian Farrel",
        "end": "2013-07-10 07:46:45-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-06-27 07:34:32-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Barry Leiba": [
      {
        "ad": "Barry Leiba",
        "end": "2013-06-26 16:31:13-07:00",
        "end_reason": "new_position",
        "start": "2013-06-17 06:51:18-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Barry Leiba",
        "end": "2013-07-10 07:46:45-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-06-26 16:31:13-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Benoit Claise": [
      {
        "ad": "Benoit Claise",
        "end": "2013-06-27 06:54:36-07:00",
        "end_reason": "new_position",
        "start": "2013-06-17 06:51:18-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Benoit Claise",
        "end": "2013-07-10 07:46:45-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-06-27 06:54:36-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Brian Haberman": [
      {
        "ad": "Brian Haberman",
        "end": "2013-07-10 07:46:45-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-06-17 06:51:18-07:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Gonzalo Camarillo": [
      {
        "ad": "Gonzalo Camarillo",
        "end": "2013-06-27 05:00:03-07:00",
        "end_reason": "new_position",
        "start": "2013-06-17 06:51:18-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Gonzalo Camarillo",
        "end": "2013-07-10 07:46:45-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-06-27 05:00:03-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Jari Arkko": [
      {
        "ad": "Jari Arkko",
        "end": "2013-06-27 04:24:51-07:00",
        "end_reason": "new_position",
        "start": "2013-06-17 06:51:18-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Jari Arkko",
        "end": "2013-07-10 07:46:45-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-06-27 04:24:51-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Joel Jaeggli": [
      {
        "ad": "Joel Jaeggli",
        "end": "2013-06-22 14:41:51-07:00",
        "end_reason": "new_position",
        "start": "2013-06-17 06:51:18-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Joel Jaeggli",
        "end": "2013-07-10 07:46:45-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-06-22 14:41:51-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Martin Stiemerling": [
      {
        "ad": "Martin Stiemerling",
        "end": "2013-06-17 06:51:19-07:00",
        "end_reason": "new_position",
        "start": "2013-06-17 06:51:18-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Martin Stiemerling",
        "end": "2013-07-10 07:46:45-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-06-17 06:51:19-07:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Pete Resnick": [
      {
        "ad": "Pete Resnick",
        "end": "2013-06-26 13:20:58-07:00",
        "end_reason": "new_position",
        "start": "2013-06-17 06:51:18-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Pete Resnick",
        "end": "2013-07-10 07:46:45-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-06-26 13:20:58-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Richard Barnes": [
      {
        "ad": "Richard Barnes",
        "end": "2013-06-26 18:01:28-07:00",
        "end_reason": "new_position",
        "start": "2013-06-17 06:51:18-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Richard Barnes",
        "end": "2013-07-10 07:46:45-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-06-26 18:01:28-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Sean Turner": [
      {
        "ad": "Sean Turner",
        "end": "2013-06-26 17:40:36-07:00",
        "end_reason": "new_position",
        "start": "2013-06-17 06:51:18-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Sean Turner",
        "end": "2013-07-10 07:46:45-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-06-26 17:40:36-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Spencer Dawkins": [
      {
        "ad": "Spencer Dawkins",
        "end": "2013-06-20 21:32:13-07:00",
        "end_reason": "new_position",
        "start": "2013-06-17 06:51:18-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Spencer Dawkins",
        "end": "2013-06-20 21:38:10-07:00",
        "end_reason": "discuss_updated",
        "start": "2013-06-20 21:32:13-07:00",
        "text": "I'm a soft DISCUSS here, and this should be easy to resolve. This specification is mostly crisp, using MUSTs, but in 2.5.2\u00a0 Send, there are a lot of SHOULDs. Some are OK, some, I'm wondering whether they ought to be MUSTs, and some, I'm not sure are 2119 SHOULDs. Please catch me up? \u00a0  For interoperability, iSER implementations SHOULD accept and \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ^  I'm not sure I understand why this SHOULD is needed (I'm not sure why this statement is needed at all). \u00a0  correctly process SendSE and SendInvSE messages.\u00a0 However, SendSE \u00a0  and SendInvSE messages are to be regarded as optimizations or \u00a0  enhancements to the basic Send message, and their support may vary \u00a0  by RCaP protocol and specific implementation.\u00a0 In general, these \u00a0  messages SHOULD NOT be used, unless the RCaP requires support for \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ^  I'm OK with this SHOULD NOT \u00a0  them in all implementations.\u00a0 If these messages are used, the \u00a0  implementation SHOULD be capable of reverting to use of Send in \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  ^  I'm OK with this SHOULD \u00a0  order to work with a receiver that does not support these message. \u00a0  Attempted use of these messages with a peer that does not support \u00a0  them may result in a fatal error that closes the RCaP connection. \u00a0  For example, these messages SHOULD NOT be used with the InfiniBand \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  ^  I'm not sure why this is needed, but doesn't need to be a MUST NOT.  \u00a0  RCaP because InfiniBand does not require support for them in all \u00a0  cases.\u00a0 New iSER implementations SHOULD use Send (and not SendSE or \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ^ I would feel better about this SHOULD if you gave an example of a compelling reason for doing otherwise. \u00a0  SendInvSE) unless there are compelling reasons for doing otherwise. \u00a0  Similarly, iSER implementations SHOULD NOT rely on events triggered \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ^  Obviously, I'm not an expert here, but is it obvious how you recover if you DO rely on these events and they aren't supported? If this was a MUST, I wouldn't be asking :-) -- In the same way, in 10.2.1 PDU Recovery \u00a0  The iSCSI Layer at the initiator SHOULD disable iSCSI timeout-driven \u00a0  PDU retransmissions. I'm wondering if this is a 2119 SHOULD. Is there a good reason not to disable iSCSI PDU retransmissions? If you don't disable them, is there anything you need to do differently because you're also seeing these retransmissions? \u00a0  by SendSE and SendInvSE, as these messages may not be used.",
        "type": "Discuss"
      },
      {
        "ad": "Spencer Dawkins",
        "end": "2013-06-20 21:41:16-07:00",
        "end_reason": "discuss_updated",
        "start": "2013-06-20 21:38:10-07:00",
        "text": "I'm a soft DISCUSS here, and this should be easy to resolve. This specification is mostly crisp, using MUSTs, but in 2.5.2\u00a0 Send, there are a lot of SHOULDs. Some are OK, some, I'm wondering whether they ought to be MUSTs, and some, I'm not sure are 2119 SHOULDs. Please catch me up? \u00a0  For interoperability, iSER implementations SHOULD accept and \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ^  I'm not sure I understand why this SHOULD is needed. \u00a0  correctly process SendSE and SendInvSE messages.\u00a0 However, SendSE \u00a0  and SendInvSE messages are to be regarded as optimizations or \u00a0  enhancements to the basic Send message, and their support may vary \u00a0  by RCaP protocol and specific implementation.\u00a0 In general, these \u00a0  messages SHOULD NOT be used, unless the RCaP requires support for \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ^  I'm OK with this SHOULD NOT \u00a0  them in all implementations.\u00a0 If these messages are used, the \u00a0  implementation SHOULD be capable of reverting to use of Send in \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ^  I'm OK with this SHOULD \u00a0  order to work with a receiver that does not support these message. \u00a0  Attempted use of these messages with a peer that does not support \u00a0  them may result in a fatal error that closes the RCaP connection. \u00a0  For example, these messages SHOULD NOT be used with the InfiniBand \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  ^  I'm not sure why this is needed, but not a MUST NOT.  \u00a0  RCaP because InfiniBand does not require support for them in all \u00a0  cases.\u00a0 New iSER implementations SHOULD use Send (and not SendSE or \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ^ I would feel better about this SHOULD if you gave an example of a compelling reason for doing otherwise. \u00a0  SendInvSE) unless there are compelling reasons for doing otherwise. \u00a0  Similarly, iSER implementations SHOULD NOT rely on events triggered \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  ^  Obviously, I'm not an expert here, but is it obvious how you recover if you DO rely on these events and they aren't supported? \u00a0  by SendSE and SendInvSE, as these messages may not be used. -- In the same way, in 10.2.1 PDU Recovery \u00a0  The iSCSI Layer at the initiator SHOULD disable iSCSI timeout-driven \u00a0  PDU retransmissions. I'm wondering if this is a 2119 SHOULD. Is there a good reason not to disable iSCSI PDU retransmissions? If you don't disable them, is there anything you need to do differently because you're also seeing these retransmissions? \u00a0  by SendSE and SendInvSE, as these messages may not be used.",
        "type": "Discuss"
      },
      {
        "ad": "Spencer Dawkins",
        "end": "2013-06-25 04:56:22-07:00",
        "end_reason": "position_updated",
        "start": "2013-06-20 21:41:16-07:00",
        "text": "I'm a soft DISCUSS here, and this should be easy to resolve. This specification is mostly crisp, using MUSTs, but in 2.5.2\u00a0 Send, there are a lot of SHOULDs. Some are OK, some, I'm wondering whether they ought to be MUSTs, and some, I'm not sure are 2119 SHOULDs. Please catch me up? \u00a0  For interoperability, iSER implementations SHOULD accept and \u00a0  correctly process SendSE and SendInvSE messages.\u00a0 However, SendSE \u00a0  and SendInvSE messages are to be regarded as optimizations or \u00a0  enhancements to the basic Send message, and their support may vary \u00a0  by RCaP protocol and specific implementation.\u00a0 In general, these \u00a0  messages SHOULD NOT be used, unless the RCaP requires support for \u00a0  them in all implementations.\u00a0 If these messages are used, the \u00a0  implementation SHOULD be capable of reverting to use of Send in \u00a0  order to work with a receiver that does not support these message. \u00a0  Attempted use of these messages with a peer that does not support \u00a0  them may result in a fatal error that closes the RCaP connection. \u00a0  For example, these messages SHOULD NOT be used with the InfiniBand \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  ^  I'm not understanding why this statement is needed, but not a MUST NOT.  \u00a0  RCaP because InfiniBand does not require support for them in all \u00a0  cases.\u00a0 New iSER implementations SHOULD use Send (and not SendSE or \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ^ I would feel better about this SHOULD if you gave an example of a compelling reason for doing otherwise. \u00a0  SendInvSE) unless there are compelling reasons for doing otherwise. \u00a0  Similarly, iSER implementations SHOULD NOT rely on events triggered \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  ^  Obviously, I'm not an expert here, but is it obvious how you recover if you DO rely on these events and they aren't supported? \u00a0  by SendSE and SendInvSE, as these messages may not be used. -- In the same way, in 10.2.1 PDU Recovery \u00a0  The iSCSI Layer at the initiator SHOULD disable iSCSI timeout-driven \u00a0  PDU retransmissions. I'm wondering if this is a 2119 SHOULD. Is there a good reason not to disable iSCSI PDU retransmissions? If you don't disable them, is there anything you need to do differently because you're also seeing these retransmissions? \u00a0  by SendSE and SendInvSE, as these messages may not be used.",
        "type": "Discuss"
      },
      {
        "ad": "Spencer Dawkins",
        "end": "2013-07-10 07:46:45-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-06-25 04:56:22-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Stephen Farrell": [
      {
        "ad": "Stephen Farrell",
        "end": "2013-06-27 05:45:00-07:00",
        "end_reason": "new_position",
        "start": "2013-06-17 06:51:18-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Stephen Farrell",
        "end": "2013-07-10 07:46:45-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-06-27 05:45:00-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Stewart Bryant": [
      {
        "ad": "Stewart Bryant",
        "end": "2013-06-24 10:20:16-07:00",
        "end_reason": "new_position",
        "start": "2013-06-17 06:51:18-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Stewart Bryant",
        "end": "2013-07-10 07:46:45-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-06-24 10:20:16-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Ted Lemon": [
      {
        "ad": "Ted Lemon",
        "end": "2013-06-26 13:45:03-07:00",
        "end_reason": "new_position",
        "start": "2013-06-17 06:51:18-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Ted Lemon",
        "end": "2013-07-10 07:46:45-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-06-26 13:45:03-07:00",
        "text": null,
        "type": "No Objection"
      }
    ]
  },
  "doc_name": "rfc7145",
  "evaluation_end": "2013-07-10 07:46:45-07:00",
  "evaluation_start": "2013-06-17 06:51:18-07:00"
}