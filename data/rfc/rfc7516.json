{
  "all_ballots": {
    "Adrian Farrel": [
      {
        "ad": "Adrian Farrel",
        "end": "2014-09-28 12:11:22-07:00",
        "end_reason": "new_position",
        "start": "2014-09-25 06:21:16-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Adrian Farrel",
        "end": "2015-01-15 10:35:18-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-09-28 12:11:22-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Alia Atlas": [
      {
        "ad": "Alia Atlas",
        "end": "2015-01-15 10:35:18-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-09-25 06:21:16-07:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Alissa Cooper": [
      {
        "ad": "Alissa Cooper",
        "end": "2014-09-28 19:23:14-07:00",
        "end_reason": "new_position",
        "start": "2014-09-25 06:21:16-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alissa Cooper",
        "end": "2015-01-15 10:35:18-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-09-28 19:23:14-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Barry Leiba": [
      {
        "ad": "Barry Leiba",
        "end": "2014-09-25 08:23:36-07:00",
        "end_reason": "new_position",
        "start": "2014-09-25 06:21:16-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Barry Leiba",
        "end": "2015-01-15 10:35:18-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-09-25 08:23:36-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Benoit Claise": [
      {
        "ad": "Benoit Claise",
        "end": "2015-01-15 10:35:18-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-09-25 06:21:16-07:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Brian Haberman": [
      {
        "ad": "Brian Haberman",
        "end": "2014-09-29 16:56:08-07:00",
        "end_reason": "new_position",
        "start": "2014-09-25 06:21:16-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Brian Haberman",
        "end": "2014-10-01 07:53:31-07:00",
        "end_reason": "position_updated",
        "start": "2014-09-29 16:56:08-07:00",
        "text": null,
        "type": "No Objection"
      },
      {
        "ad": "Brian Haberman",
        "end": "2014-10-02 04:48:21-07:00",
        "end_reason": "position_updated",
        "start": "2014-10-01 07:53:31-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Brian Haberman",
        "end": "2015-01-15 10:35:18-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-10-02 04:48:21-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Jari Arkko": [
      {
        "ad": "Jari Arkko",
        "end": "2014-10-02 08:34:57-07:00",
        "end_reason": "new_position",
        "start": "2014-09-25 06:21:16-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Jari Arkko",
        "end": "2015-01-15 10:35:18-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-10-02 08:34:57-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Joel Jaeggli": [
      {
        "ad": "Joel Jaeggli",
        "end": "2014-10-01 22:42:12-07:00",
        "end_reason": "new_position",
        "start": "2014-09-25 06:21:16-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Joel Jaeggli",
        "end": "2015-01-15 10:35:18-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-10-01 22:42:12-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Kathleen Moriarty": [
      {
        "ad": "Kathleen Moriarty",
        "end": "2014-09-25 06:21:16-07:00",
        "end_reason": "new_position",
        "start": "2014-09-25 06:21:16-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Kathleen Moriarty",
        "end": "2015-01-15 10:35:18-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-09-25 06:21:16-07:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Martin Stiemerling": [
      {
        "ad": "Martin Stiemerling",
        "end": "2014-09-30 13:11:27-07:00",
        "end_reason": "new_position",
        "start": "2014-09-25 06:21:16-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Martin Stiemerling",
        "end": "2015-01-15 10:35:18-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-09-30 13:11:27-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Pete Resnick": [
      {
        "ad": "Pete Resnick",
        "end": "2014-10-02 07:23:45-07:00",
        "end_reason": "new_position",
        "start": "2014-09-25 06:21:16-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Pete Resnick",
        "end": "2014-12-02 20:36:51-08:00",
        "end_reason": "position_updated",
        "start": "2014-10-02 07:23:45-07:00",
        "text": ".1: Like JWS, why can't I have unprotected header in compact serialization. Seems like a serious problem.",
        "type": "Discuss"
      },
      {
        "ad": "Pete Resnick",
        "end": "2015-01-15 10:35:18-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-12-02 20:36:51-08:00",
        "text": "I've got some suggestions for improvements below, but overall I cannot support this document, so I'm entering an ABSTAIN. I don't think this WG has actually fulfilled its charter with regard to this document set. The WG was supposed to produce a \"JSON syntax that can be used by applications to describe secure data objects\". I don't believe it did that. Instead, it produced a compact serialization for a particular purpose and then backed into a JSON syntax. The compact serialization drove the effort and produced IMO a substandard JSON serialization. I don't believe that (reliable) interoperable implementations of the JSON serialization will be possible using this document set. However, there is at least rough consensus that these documents are usable as-is, and I don't think there's anything to be gained by holding them up any further. I hope the WG will adopt some of the remaining comments, but my intention is not to discuss this any further. If you wish to address any of the comments and need clarification, I'm glad to help with that. ------ I really wish you would have factored out what's common between JWS and JWE so you didn't have so much repeated text. 1: Lose the last paragraph. It's not a core goal. Certainly not in the charter. 3.1: Failure to have an unprotected header in the compact serialization means that these things are not round-trippable. That's very unfortunate and I think a failure of the protocol. 3.2: \u00a0  In the JWE JSON Serialization, a JWE object is represented as the \u00a0  combination of these eight values... That's not true, and potentially confusing. In the JSON Serialization, the JWE object is represented as a JSON object with 8 members: \u00a0 protected, whose value is BASE64URL(UTF8(JWE Protected Header)), \u00a0 unprotected, whose value is JWE Shared Unprotected Header... etc. 3.3: - Add \"If this were part of an Protected Header, it would be encoded as...\" Please show the regular JSON Serialization, not just the compact. The compact is lousy as an overview example. If you want to add the compact after the JSON, that's OK. 4.1.2: Change \"MUST reject\" to \"will be unable to decrypt\". Strike the last sentence of the first paragraph. 5.1: It looks like steps 1, 2, 3, and 6 are actually one big step. They should probably be combined and clarified in some way. 4 and 5 could be reasonably combined. 19 - Delete everything after the first sentence (and optionally point to section 7). 5.2: If these things are steps, start with the verb. See 2 below as an example, but look at the other steps as well. \u00a0  1 - Say what to parse out and refer to section 7. Again, don't privilege \u00a0  compact. \u00a0  4 could be significantly shortened if you didn't separate the \u00a0  serializations. Just make it the union. If some of the members are absent \u00a0  (for whatever reason), that's fine. \u00a0  4 and 5 should be combined. \u00a0  8-11 seem like they could be combined/refactored in some useful way. \u00a0  (I'll also note here that the \"recipient\" construct is still weird to me. \u00a0  It's just a \"key owner\" or something like that, right?) \u00a0  14 and 15 - Ditch the parenthetical. \u00a0  18 is kind of silly. If decryption failed, it failed. No need to \u00a0  additionally \"reject\" (whatever that is supposed to mean). The second and \u00a0  third sentences are just implementation detail. Delete 18. 9: It took me a bit to figure out why this section is here. This is only a problem for the Compact Serialization. The second bullet makes this clear: For the JSON Serialization, the answer is, \"They're different if they're different.\" I suggest rewriting this section to make it clear that you're trying to help folks who need to distinguish between compact serializations. Appendix A: Leaving the JSON Serialization until the end and putting a compact serialization in every example stinks. Let's not make it harder for implementers to figure out how to use the JSON Serialization.",
        "type": "Abstain"
      }
    ],
    "Richard Barnes": [
      {
        "ad": "Richard Barnes",
        "end": "2014-10-01 20:36:53-07:00",
        "end_reason": "new_position",
        "start": "2014-09-25 06:21:16-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Richard Barnes",
        "end": "2014-11-03 19:01:36-08:00",
        "end_reason": "position_updated",
        "start": "2014-10-01 20:36:53-07:00",
        "text": "Overall, this document is in much more solid shape than when it began.\u00a0 Thanks to the WG for a lot of hard work.\u00a0 I only have one remaining concern, that should hopefully be easy to address. Section 7.2. I've had several implementors trying to use JWE in the JSON serialization ask why it was necessary to include a \"recipients\" array in cases where there's only one recipient.\u00a0 It seems like this is going to be a major barrier to deployment and re-use, so I would propose including the following text: \"\"\" In cases where the JWE is encrypted for only one recipient, the \"recipients\" array will contain a single object.\u00a0 In such cases, the elements of the \"recipients\" array MAY be included at the top level of the JWE object.\u00a0 If the generator of a JWE chooses to use this representation then all unprotected header parameters MUST be carried in the \"header\" field, and the \"unprotected\" field MUST be absent.\u00a0 A JSON-formatted JWE that contains a \"recipients\" field MUST NOT contain a \"header\" or \"encrypted_key\" field, and vice versa.  \"\"\" This may also require some other changes where \"recipients\" is relied on, e.g., in Section 9.",
        "type": "Discuss"
      },
      {
        "ad": "Richard Barnes",
        "end": "2015-01-15 10:35:18-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-11-03 19:01:36-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Spencer Dawkins": [
      {
        "ad": "Spencer Dawkins",
        "end": "2014-10-02 08:03:18-07:00",
        "end_reason": "new_position",
        "start": "2014-09-25 06:21:16-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Spencer Dawkins",
        "end": "2015-01-15 10:35:18-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-10-02 08:03:18-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Stephen Farrell": [
      {
        "ad": "Stephen Farrell",
        "end": "2014-10-02 03:55:50-07:00",
        "end_reason": "new_position",
        "start": "2014-09-25 06:21:16-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Stephen Farrell",
        "end": "2015-01-15 10:35:18-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-10-02 03:55:50-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Ted Lemon": [
      {
        "ad": "Ted Lemon",
        "end": "2014-10-02 04:13:48-07:00",
        "end_reason": "new_position",
        "start": "2014-09-25 06:21:16-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Ted Lemon",
        "end": "2015-01-15 10:35:18-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-10-02 04:13:48-07:00",
        "text": null,
        "type": "No Objection"
      }
    ]
  },
  "doc_name": "rfc7516",
  "evaluation_end": "2015-01-15 10:35:18-08:00",
  "evaluation_start": "2014-09-25 06:21:16-07:00"
}