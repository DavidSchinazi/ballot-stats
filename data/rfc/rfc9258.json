{
  "all_ballots": {
    "Alissa Cooper": [
      {
        "ad": "Alissa Cooper",
        "end": "2021-01-05 10:09:35-08:00",
        "end_reason": "new_position",
        "start": "2020-12-11 04:45:24-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alissa Cooper",
        "end": "2021-03-12 00:00:00+00:00",
        "end_reason": "ad_term_ended",
        "start": "2021-01-05 10:09:35-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Alvaro Retana": [
      {
        "ad": "Alvaro Retana",
        "end": "2021-01-05 10:48:03-08:00",
        "end_reason": "new_position",
        "start": "2020-12-11 04:45:24-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alvaro Retana",
        "end": "2022-05-05 12:08:07-07:00",
        "end_reason": "evaluation_closed",
        "start": "2021-01-05 10:48:03-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Andrew Alston": [
      {
        "ad": "Andrew Alston",
        "end": "2022-05-05 12:08:07-07:00",
        "end_reason": "evaluation_closed",
        "start": "2022-04-07 00:36:41-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Barry Leiba": [
      {
        "ad": "Barry Leiba",
        "end": "2021-01-03 06:15:20-08:00",
        "end_reason": "new_position",
        "start": "2020-12-11 04:45:24-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Barry Leiba",
        "end": "2021-03-12 00:00:00+00:00",
        "end_reason": "ad_term_ended",
        "start": "2021-01-03 06:15:20-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Benjamin Kaduk": [
      {
        "ad": "Benjamin Kaduk",
        "end": "2020-12-31 11:12:32-08:00",
        "end_reason": "new_position",
        "start": "2020-12-11 04:45:24-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Benjamin Kaduk",
        "end": "2022-03-25 00:00:00+00:00",
        "end_reason": "ad_term_ended",
        "start": "2020-12-31 11:12:32-08:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Deborah Brungard": [
      {
        "ad": "Deborah Brungard",
        "end": "2021-01-04 09:58:55-08:00",
        "end_reason": "new_position",
        "start": "2020-12-11 04:45:24-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Deborah Brungard",
        "end": "2021-03-12 00:00:00+00:00",
        "end_reason": "ad_term_ended",
        "start": "2021-01-04 09:58:55-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Eric Vyncke": [
      {
        "ad": "Eric Vyncke",
        "end": "2021-01-07 00:47:49-08:00",
        "end_reason": "new_position",
        "start": "2020-12-11 04:45:24-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Eric Vyncke",
        "end": "2022-05-05 12:08:07-07:00",
        "end_reason": "evaluation_closed",
        "start": "2021-01-07 00:47:49-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Erik Kline": [
      {
        "ad": "Erik Kline",
        "end": "2020-12-28 22:50:12-08:00",
        "end_reason": "new_position",
        "start": "2020-12-11 04:45:24-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Erik Kline",
        "end": "2022-05-05 12:08:07-07:00",
        "end_reason": "evaluation_closed",
        "start": "2020-12-28 22:50:12-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Francesca Palombini": [
      {
        "ad": "Francesca Palombini",
        "end": "2022-05-05 12:08:07-07:00",
        "end_reason": "evaluation_closed",
        "start": "2022-04-05 07:42:54-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "John Scudder": [
      {
        "ad": "John Scudder",
        "end": "2022-05-05 12:08:07-07:00",
        "end_reason": "evaluation_closed",
        "start": "2022-04-05 12:55:52-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Lars Eggert": [
      {
        "ad": "Lars Eggert",
        "end": "2022-05-05 12:08:07-07:00",
        "end_reason": "evaluation_closed",
        "start": "2022-04-05 06:18:20-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Magnus Westerlund": [
      {
        "ad": "Magnus Westerlund",
        "end": "2020-12-21 08:17:13-08:00",
        "end_reason": "new_position",
        "start": "2020-12-11 04:45:24-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Magnus Westerlund",
        "end": "2021-03-12 00:00:00+00:00",
        "end_reason": "ad_term_ended",
        "start": "2020-12-21 08:17:13-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Martin Duke": [
      {
        "ad": "Martin Duke",
        "end": "2021-01-04 15:40:30-08:00",
        "end_reason": "new_position",
        "start": "2020-12-11 04:45:24-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Martin Duke",
        "end": "2021-02-23 16:34:15-08:00",
        "end_reason": "position_updated",
        "start": "2021-01-04 15:40:30-08:00",
        "text": "This is probably just my own ignorance, but I see two potential problems in Sec 4.1. - 'The identity of \"ipskx\" as sent on the wire is ImportedIdentity, i.e., the serialized content of ImportedIdentity is used as the\u00a0 content of PskIdentity.identity in the PSK extension.' IIUC ImportedIdentity has a maximum length of 2^17 + 2. But the Identity field in the PSK option has a maximum length of 2^16-1. I presume this never actually happens, but the spec should handle the boundary condition, perhaps by limiting the first two fields of Imported Identity to sum to 2^16-5 bytes or something. - It says 'Endpoints SHOULD generate a compatible \"ipskx\" for each target ciphersuite they offer.' but then the example shows two ciphers that equire only one derived key. Do you mean \"hash algorithm\" instead of \"ciphersuite\"? TLS_AES_128_GCM_SHA256 and TLS_CHACHA20_POLY1305_SHA256 are different ciphersuites according to  RFC 8446 .",
        "type": "Discuss"
      },
      {
        "ad": "Martin Duke",
        "end": "2022-05-05 12:08:07-07:00",
        "end_reason": "evaluation_closed",
        "start": "2021-02-23 16:34:15-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Martin Vigoureux": [
      {
        "ad": "Martin Vigoureux",
        "end": "2022-03-25 00:00:00+00:00",
        "end_reason": "ad_term_ended",
        "start": "2020-12-11 04:45:24-08:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Murray Kucherawy": [
      {
        "ad": "Murray Kucherawy",
        "end": "2021-01-05 23:03:18-08:00",
        "end_reason": "new_position",
        "start": "2020-12-11 04:45:24-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Murray Kucherawy",
        "end": "2022-05-05 12:08:07-07:00",
        "end_reason": "evaluation_closed",
        "start": "2021-01-05 23:03:18-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Paul Wouters": [
      {
        "ad": "Paul Wouters",
        "end": "2022-05-05 12:08:07-07:00",
        "end_reason": "evaluation_closed",
        "start": "2022-04-06 13:20:59-07:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Robert Wilton": [
      {
        "ad": "Robert Wilton",
        "end": "2021-01-04 05:11:04-08:00",
        "end_reason": "new_position",
        "start": "2020-12-11 04:45:24-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Robert Wilton",
        "end": "2022-05-05 12:08:07-07:00",
        "end_reason": "evaluation_closed",
        "start": "2021-01-04 05:11:04-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Roman Danyliw": [
      {
        "ad": "Roman Danyliw",
        "end": "2020-12-11 04:45:25-08:00",
        "end_reason": "new_position",
        "start": "2020-12-11 04:45:24-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Roman Danyliw",
        "end": "2022-05-05 12:08:07-07:00",
        "end_reason": "evaluation_closed",
        "start": "2020-12-11 04:45:25-08:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Warren Kumari": [
      {
        "ad": "Warren Kumari",
        "end": "2022-04-06 14:28:44-07:00",
        "end_reason": "new_position",
        "start": "2020-12-11 04:45:24-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Warren Kumari",
        "end": "2022-05-05 12:08:07-07:00",
        "end_reason": "evaluation_closed",
        "start": "2022-04-06 14:28:44-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Zaheduzzaman Sarker": [
      {
        "ad": "Zaheduzzaman Sarker",
        "end": "2022-05-05 12:08:07-07:00",
        "end_reason": "evaluation_closed",
        "start": "2022-04-04 03:43:10-07:00",
        "text": null,
        "type": "No Objection"
      }
    ]
  },
  "doc_name": "rfc9258",
  "evaluation_end": "2022-05-05 12:08:07-07:00",
  "evaluation_start": "2020-12-11 04:45:24-08:00"
}