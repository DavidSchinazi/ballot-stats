{
  "all_ballots": {
    "Adam Roach": [
      {
        "ad": "Adam Roach",
        "end": "2019-08-06 13:55:28-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-02-07 11:45:23-08:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Alexey Melnikov": [
      {
        "ad": "Alexey Melnikov",
        "end": "2019-02-21 03:06:20-08:00",
        "end_reason": "new_position",
        "start": "2019-02-07 11:45:23-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alexey Melnikov",
        "end": "2019-08-06 13:55:28-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-02-21 03:06:20-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Alissa Cooper": [
      {
        "ad": "Alissa Cooper",
        "end": "2019-02-21 06:01:01-08:00",
        "end_reason": "new_position",
        "start": "2019-02-07 11:45:23-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alissa Cooper",
        "end": "2019-07-12 07:46:59-07:00",
        "end_reason": "position_updated",
        "start": "2019-02-21 06:01:01-08:00",
        "text": "(1) There are a bunch of places in this document that place normative requirements on \"the IP stack\" or \"IP stacks.\" This seems too broad to me -- aren't these meant to apply to IP stacks that implement the new API? It seems like  RFC 5014  was more careful in its use of normative language and I think that care is warranted here as well. (2)  RFC 7721  defines a bunch of address types that are somewhat overlapping with the definitions here.  RFC 4941  and  RFC 8064  provide recommendations for configuration of different address types. How do the address types and recommendations in this document intersect with the address types and recommendations in those documents?",
        "type": "Discuss"
      },
      {
        "ad": "Alissa Cooper",
        "end": "2019-08-06 13:55:28-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-07-12 07:46:59-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Alvaro Retana": [
      {
        "ad": "Alvaro Retana",
        "end": "2019-02-20 09:41:41-08:00",
        "end_reason": "new_position",
        "start": "2019-02-07 11:45:23-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alvaro Retana",
        "end": "2019-08-06 13:55:28-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-02-20 09:41:41-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Ben Campbell": [
      {
        "ad": "Ben Campbell",
        "end": "2019-02-20 18:26:41-08:00",
        "end_reason": "new_position",
        "start": "2019-02-07 11:45:23-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Ben Campbell",
        "end": "2019-03-29 00:00:00+00:00",
        "end_reason": "ad_term_ended",
        "start": "2019-02-20 18:26:41-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Benjamin Kaduk": [
      {
        "ad": "Benjamin Kaduk",
        "end": "2019-08-06 13:55:28-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-02-07 11:45:23-08:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Deborah Brungard": [
      {
        "ad": "Deborah Brungard",
        "end": "2019-02-20 15:48:14-08:00",
        "end_reason": "new_position",
        "start": "2019-02-07 11:45:23-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Deborah Brungard",
        "end": "2019-08-06 13:55:28-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-02-20 15:48:14-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Eric Rescorla": [
      {
        "ad": "Eric Rescorla",
        "end": "2019-03-29 00:00:00+00:00",
        "end_reason": "ad_term_ended",
        "start": "2019-02-07 11:45:23-08:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Ignas Bagdonas": [
      {
        "ad": "Ignas Bagdonas",
        "end": "2019-08-06 13:55:28-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-02-07 11:45:23-08:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Martin Vigoureux": [
      {
        "ad": "Martin Vigoureux",
        "end": "2019-08-06 13:55:28-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-02-07 11:45:23-08:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Mirja Kuhlewind": [
      {
        "ad": "Mirja Kuhlewind",
        "end": "2019-02-20 05:47:16-08:00",
        "end_reason": "new_position",
        "start": "2019-02-07 11:45:23-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Mirja Kuhlewind",
        "end": "2019-08-01 06:02:25-07:00",
        "end_reason": "position_updated",
        "start": "2019-02-20 05:47:16-08:00",
        "text": "As mentioned by the TSV-ART review (Thanks Magnus!) and confirmed by Danny Moses in his response to the TSV-ART review (\"There were several discussions as to whether this draft should specify Socket extensions or provide guidelines for an API provided by the network stack to applications. The decision, eventually, was that since IETF does not specify the Socket API, we should not specify Socket extensions, but rather, provide guidelines for such functionality. \"), I don't think this document should specify an socket API. Further I don't necessarily think the API approach taken is correct. First section 3.3. says:  \u00a0 \"IP address type selection is made on a per-socket granularity. \u00a0  Different parts of the same application may have different needs. \u00a0  For example, the control-plane of an application may require a Fixed \u00a0  IP Address in order to stay reachable, whereas the data-plane of the \u00a0  same application may be satisfied with a Session-lasting IP Address.\" However, Fixed IP Address (as defined in section 3.2) cannot be configured on a per socket-basis as the application needs the same IP address for multiple socket connections. Further, section 3.5. says.  \"Extending this further by adding more flags does not work when a \u00a0  request for an address of a certain type results in requiring the IP \u00a0  stack to wait for the network to provide the desired source IP prefix \u00a0  and hence causing the setsockopt() call to block until the prefix is \u00a0  allocated (or an error indication from the network is received).\" However, later on section 6.1. it says: \u00a0 \"setsc() MAY block the invoking thread if it triggers the TCP/IP stack \u00a0  to request a new IP prefix from the network to construct the desired \u00a0  source IP address.\" Therefore, I really don't understand why a new flag in setsockopt() can not be used. I propose to remove all socket API specifications from this document and only discuss requirements\u00a0 (as indicated by Danny). That would basically mean to remove sections 3.5, 4.1, and 6.",
        "type": "Discuss"
      },
      {
        "ad": "Mirja Kuhlewind",
        "end": "2019-08-06 13:55:28-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-08-01 06:02:25-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Spencer Dawkins": [
      {
        "ad": "Spencer Dawkins",
        "end": "2019-03-29 00:00:00+00:00",
        "end_reason": "ad_term_ended",
        "start": "2019-02-07 11:45:23-08:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Suresh Krishnan": [
      {
        "ad": "Suresh Krishnan",
        "end": "2019-02-07 11:45:23-08:00",
        "end_reason": "new_position",
        "start": "2019-02-07 11:45:23-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Suresh Krishnan",
        "end": "2019-08-06 13:55:28-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-02-07 11:45:23-08:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Terry Manderson": [
      {
        "ad": "Terry Manderson",
        "end": "2019-03-29 00:00:00+00:00",
        "end_reason": "ad_term_ended",
        "start": "2019-02-07 11:45:23-08:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Warren Kumari": [
      {
        "ad": "Warren Kumari",
        "end": "2019-08-06 13:55:28-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-02-07 11:45:23-08:00",
        "text": null,
        "type": "No Record"
      }
    ]
  },
  "doc_name": "rfc8653",
  "evaluation_end": "2019-08-06 13:55:28-07:00",
  "evaluation_start": "2019-02-07 11:45:23-08:00"
}