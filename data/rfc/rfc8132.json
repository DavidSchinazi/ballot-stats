{
  "all_ballots": {
    "Alexey Melnikov": [
      {
        "ad": "Alexey Melnikov",
        "end": "2016-10-10 02:01:51-07:00",
        "end_reason": "new_position",
        "start": "2016-10-10 02:01:51-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alexey Melnikov",
        "end": "2017-02-06 09:04:25-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-10-10 02:01:51-07:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Alia Atlas": [
      {
        "ad": "Alia Atlas",
        "end": "2016-10-12 20:02:43-07:00",
        "end_reason": "new_position",
        "start": "2016-10-10 02:01:51-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alia Atlas",
        "end": "2017-02-06 09:04:25-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-10-12 20:02:43-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Alissa Cooper": [
      {
        "ad": "Alissa Cooper",
        "end": "2016-10-10 12:44:38-07:00",
        "end_reason": "new_position",
        "start": "2016-10-10 02:01:51-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alissa Cooper",
        "end": "2016-11-30 12:50:58-08:00",
        "end_reason": "position_updated",
        "start": "2016-10-10 12:44:38-07:00",
        "text": "I agree with the comment made by the ops-dir reviewer, and I don't think the parenthetical in 2.2.1 addresses the problem. It seems that FETCH is not a useful operation unless the server is capable of understanding what it is supposed to fetch. So it's not true that \"any\" media type can be used, but rather only those media types for which a definition exists for what the fetch parameters indicate and which part of the resource they are intended to delineate. Shouldn't the use of FETCH be constrained to such media types?",
        "type": "Discuss"
      },
      {
        "ad": "Alissa Cooper",
        "end": "2017-02-06 09:04:25-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-11-30 12:50:58-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Alvaro Retana": [
      {
        "ad": "Alvaro Retana",
        "end": "2017-02-06 09:04:25-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-10-10 02:01:51-07:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Ben Campbell": [
      {
        "ad": "Ben Campbell",
        "end": "2016-10-12 13:06:42-07:00",
        "end_reason": "new_position",
        "start": "2016-10-10 02:01:51-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Ben Campbell",
        "end": "2017-02-06 09:04:25-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-10-12 13:06:42-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Benoit Claise": [
      {
        "ad": "Benoit Claise",
        "end": "2016-10-13 05:18:33-07:00",
        "end_reason": "new_position",
        "start": "2016-10-10 02:01:51-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Benoit Claise",
        "end": "2017-02-06 09:04:25-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-10-13 05:18:33-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Deborah Brungard": [
      {
        "ad": "Deborah Brungard",
        "end": "2016-10-11 14:38:10-07:00",
        "end_reason": "new_position",
        "start": "2016-10-10 02:01:51-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Deborah Brungard",
        "end": "2017-02-06 09:04:25-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-10-11 14:38:10-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Jari Arkko": [
      {
        "ad": "Jari Arkko",
        "end": "2016-10-12 16:15:00-07:00",
        "end_reason": "new_position",
        "start": "2016-10-10 02:01:51-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Jari Arkko",
        "end": "2017-02-06 09:04:25-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-10-12 16:15:00-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Joel Jaeggli": [
      {
        "ad": "Joel Jaeggli",
        "end": "2016-10-11 08:48:50-07:00",
        "end_reason": "new_position",
        "start": "2016-10-10 02:01:51-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Joel Jaeggli",
        "end": "2017-02-06 09:04:25-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-10-11 08:48:50-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Kathleen Moriarty": [
      {
        "ad": "Kathleen Moriarty",
        "end": "2016-10-12 10:33:37-07:00",
        "end_reason": "new_position",
        "start": "2016-10-10 02:01:51-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Kathleen Moriarty",
        "end": "2016-11-13 18:15:35-08:00",
        "end_reason": "position_updated",
        "start": "2016-10-12 10:33:37-07:00",
        "text": "I'd like to see more of the actual requirements for this draft in the security considerations as the pointers include all of the configuration options for DTLS, including the \"nosec\" option.\u00a0 I would think this operation would require authentication to prevent unauthorized access by devices that are clones.\u00a0 This is a real problem in the non-IoT space for firmware updates and will be a problem in this space if it isn't already - knock off hardware that installs the firmware of a popular product.\u00a0 In In section 5 of  RFC5789 , I see this: \u00a0  These \u00a0  include authorizing requests (possibly through access control and/or \u00a0  authentication) and ensuring that data is not corrupted through \u00a0  transport errors or through accidental overwrites.  And would like to see something similar in this section to at least list some of the requirements and reasoning.\u00a0 For patch and fetch, I think the reason outlined above needs to be included as well so it is top of mind for implementers and they are aware of this very real threat.\u00a0 It is important they understand why they need authentication and encryption to prevent attacks against their brand.\u00a0 If someone buys knock-off hardware that is faulty and uses their firmware, they have multiple problems to deal with, not just the loss of sales.",
        "type": "Discuss"
      },
      {
        "ad": "Kathleen Moriarty",
        "end": "2017-02-06 09:04:25-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-11-13 18:15:35-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Mirja Kuhlewind": [
      {
        "ad": "Mirja Kuhlewind",
        "end": "2016-10-13 02:53:53-07:00",
        "end_reason": "new_position",
        "start": "2016-10-10 02:01:51-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Mirja Kuhlewind",
        "end": "2017-02-06 09:04:25-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-10-13 02:53:53-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Spencer Dawkins": [
      {
        "ad": "Spencer Dawkins",
        "end": "2016-10-12 09:00:11-07:00",
        "end_reason": "new_position",
        "start": "2016-10-10 02:01:51-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Spencer Dawkins",
        "end": "2016-11-14 19:54:51-08:00",
        "end_reason": "position_updated",
        "start": "2016-10-12 09:00:11-07:00",
        "text": "I'm following most of your reasoning behind having the twin methods PATCH and iPATCH, but I'm struggling a bit that there's nothing that I saw that prevents a problem when the client implements only PATCH and the server implements only iPATCH.  The only text I saw that provides guidance about which method to implement is \u00a0  A client can mark a request as idempotent by using the iPATCH method \u00a0  instead of the PATCH method.\u00a0 This is the only difference between the \u00a0  two.\u00a0 The indication of idempotence may enable the server to keep \u00a0  less state about the interaction; some constrained servers may only \u00a0  implement the iPATCH variant for this reason. \u00a0   Maybe I missed something?  If not, I saw \u00a0  There is no guarantee that a resource can be modified with PATCH or \u00a0  iPATCH. \u00a0   so, maybe that mismatch isn't going to be a problem in practice, but it seems sad that you might have a patchable resource, that can't be patched because of that mismatch. I'm not asking for \"clients MUST implement iPATCH if you implement PATCH\" (which would accommodate servers that only implement iPATCH), but I wonder if the working group talked about a way to avoid this mismatch?",
        "type": "Discuss"
      },
      {
        "ad": "Spencer Dawkins",
        "end": "2017-02-06 09:04:25-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-11-14 19:54:51-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Stephen Farrell": [
      {
        "ad": "Stephen Farrell",
        "end": "2016-10-13 05:39:35-07:00",
        "end_reason": "new_position",
        "start": "2016-10-10 02:01:51-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Stephen Farrell",
        "end": "2017-02-06 09:04:25-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-10-13 05:39:35-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Suresh Krishnan": [
      {
        "ad": "Suresh Krishnan",
        "end": "2016-10-11 18:21:25-07:00",
        "end_reason": "new_position",
        "start": "2016-10-10 02:01:51-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Suresh Krishnan",
        "end": "2017-02-06 09:04:25-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-10-11 18:21:25-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Terry Manderson": [
      {
        "ad": "Terry Manderson",
        "end": "2017-02-06 09:04:25-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-10-10 02:01:51-07:00",
        "text": null,
        "type": "No Record"
      }
    ]
  },
  "doc_name": "rfc8132",
  "evaluation_end": "2017-02-06 09:04:25-08:00",
  "evaluation_start": "2016-10-10 02:01:51-07:00"
}