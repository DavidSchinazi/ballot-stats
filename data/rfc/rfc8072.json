{
  "all_ballots": {
    "Alexey Melnikov": [
      {
        "ad": "Alexey Melnikov",
        "end": "2016-10-29 12:53:24-07:00",
        "end_reason": "new_position",
        "start": "2016-10-20 01:53:22-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alexey Melnikov",
        "end": "2016-12-02 09:58:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-10-29 12:53:24-07:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Alia Atlas": [
      {
        "ad": "Alia Atlas",
        "end": "2016-11-02 17:29:26-07:00",
        "end_reason": "new_position",
        "start": "2016-10-20 01:53:22-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alia Atlas",
        "end": "2016-12-02 09:58:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-11-02 17:29:26-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Alissa Cooper": [
      {
        "ad": "Alissa Cooper",
        "end": "2016-11-01 07:45:48-07:00",
        "end_reason": "new_position",
        "start": "2016-10-20 01:53:22-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alissa Cooper",
        "end": "2016-12-02 09:58:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-11-01 07:45:48-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Alvaro Retana": [
      {
        "ad": "Alvaro Retana",
        "end": "2016-10-31 08:25:52-07:00",
        "end_reason": "new_position",
        "start": "2016-10-20 01:53:22-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alvaro Retana",
        "end": "2016-12-02 09:58:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-10-31 08:25:52-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Ben Campbell": [
      {
        "ad": "Ben Campbell",
        "end": "2016-11-02 12:15:07-07:00",
        "end_reason": "new_position",
        "start": "2016-10-20 01:53:22-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Ben Campbell",
        "end": "2016-11-03 11:03:48-07:00",
        "end_reason": "position_updated",
        "start": "2016-11-02 12:15:07-07:00",
        "text": "Hopefully this is easy to resolve, and is probably just confusion on my part. But I am confused by whether or not the edits in a single patch are expected to be atomic. I assumed no, since the results can speak to multiple edits, but section 5 mentions atomicity as a RESTCONF requirement. Is atomicity not required by yang-patch in general, but required when using RESTCONF? Section 5 goes on to talk about disruption due to partial processing, which further confuses me if RESTCONF requires atomicity.",
        "type": "Discuss"
      },
      {
        "ad": "Ben Campbell",
        "end": "2016-12-02 09:58:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-11-03 11:03:48-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Benoit Claise": [
      {
        "ad": "Benoit Claise",
        "end": "2016-10-20 01:53:22-07:00",
        "end_reason": "new_position",
        "start": "2016-10-20 01:53:22-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Benoit Claise",
        "end": "2016-12-02 09:58:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-10-20 01:53:22-07:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Deborah Brungard": [
      {
        "ad": "Deborah Brungard",
        "end": "2016-11-02 09:48:43-07:00",
        "end_reason": "new_position",
        "start": "2016-10-20 01:53:22-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Deborah Brungard",
        "end": "2016-12-02 09:58:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-11-02 09:48:43-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Jari Arkko": [
      {
        "ad": "Jari Arkko",
        "end": "2016-11-02 00:29:51-07:00",
        "end_reason": "new_position",
        "start": "2016-10-20 01:53:22-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Jari Arkko",
        "end": "2016-12-02 09:58:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-11-02 00:29:51-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Joel Jaeggli": [
      {
        "ad": "Joel Jaeggli",
        "end": "2016-11-01 09:56:48-07:00",
        "end_reason": "new_position",
        "start": "2016-10-20 01:53:22-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Joel Jaeggli",
        "end": "2016-12-02 09:58:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-11-01 09:56:48-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Kathleen Moriarty": [
      {
        "ad": "Kathleen Moriarty",
        "end": "2016-10-31 08:28:37-07:00",
        "end_reason": "new_position",
        "start": "2016-10-20 01:53:22-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Kathleen Moriarty",
        "end": "2016-12-02 08:04:33-08:00",
        "end_reason": "position_updated",
        "start": "2016-10-31 08:28:37-07:00",
        "text": "This should be easy to resolve through discussion or some text tweaks.\u00a0 In the security considerations section, I see some text that hints at my questions below, but isn't clear enough, so I'd like to discuss it to see if these things are covered, or why they are not, and to see if we can tweak the text a bit. The following text is helpful, is PATCH described in [ I-D.ietf-netconf-restconf ]? \u00a0  This document defines edit processing \u00a0  instructions for a variant of the PATCH method, as used within the \u00a0  RESTCONF protocol. I see section 2.7 discusses error handling and validating the YANG module, but is there a way that the hash (or some other mechanism) of the patch could be validated to ensure the patch was not altered.\u00a0 Is that already described for PATCH? I also see this text in the security considerations section: \u00a0  It is important for RESTCONF server implementations to carefully \u00a0  validate all the edit request parameters in some manner.  Is the source of the patch authenticated?\u00a0 Can the client receiving the patch be authenticated?\u00a0 Is this handled through RESTCONF?\u00a0 Since YANG modules could add in write capabilities, unauthenticated patches could result in opening backdoors or revealing information that was not intended.\u00a0 You are covering it with that statement, but it's not clear if both ends can be authenticated and there are attacks if they are not authenticated.",
        "type": "Discuss"
      },
      {
        "ad": "Kathleen Moriarty",
        "end": "2016-12-02 09:58:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-12-02 08:04:33-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Mirja Kuhlewind": [
      {
        "ad": "Mirja Kuhlewind",
        "end": "2016-10-31 09:30:53-07:00",
        "end_reason": "new_position",
        "start": "2016-10-20 01:53:22-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Mirja Kuhlewind",
        "end": "2016-12-02 09:58:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-10-31 09:30:53-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Spencer Dawkins": [
      {
        "ad": "Spencer Dawkins",
        "end": "2016-11-03 05:12:02-07:00",
        "end_reason": "new_position",
        "start": "2016-10-20 01:53:22-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Spencer Dawkins",
        "end": "2016-12-02 09:58:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-11-03 05:12:02-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Stephen Farrell": [
      {
        "ad": "Stephen Farrell",
        "end": "2016-11-03 06:06:31-07:00",
        "end_reason": "new_position",
        "start": "2016-10-20 01:53:22-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Stephen Farrell",
        "end": "2016-12-02 09:58:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-11-03 06:06:31-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Suresh Krishnan": [
      {
        "ad": "Suresh Krishnan",
        "end": "2016-11-02 14:46:01-07:00",
        "end_reason": "new_position",
        "start": "2016-10-20 01:53:22-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Suresh Krishnan",
        "end": "2016-12-02 09:58:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-11-02 14:46:01-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Terry Manderson": [
      {
        "ad": "Terry Manderson",
        "end": "2016-11-01 16:19:01-07:00",
        "end_reason": "new_position",
        "start": "2016-10-20 01:53:22-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Terry Manderson",
        "end": "2016-12-02 09:58:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2016-11-01 16:19:01-07:00",
        "text": null,
        "type": "No Objection"
      }
    ]
  },
  "doc_name": "rfc8072",
  "evaluation_end": "2016-12-02 09:58:30-08:00",
  "evaluation_start": "2016-10-20 01:53:22-07:00"
}