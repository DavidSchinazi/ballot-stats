{
  "all_ballots": {
    "Alvaro Retana": [
      {
        "ad": "Alvaro Retana",
        "end": "2022-10-25 14:27:10-07:00",
        "end_reason": "new_position",
        "start": "2022-10-16 21:04:41-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alvaro Retana",
        "end": "2022-11-02 09:42:20-07:00",
        "end_reason": "evaluation_closed",
        "start": "2022-10-25 14:27:10-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Andrew Alston": [
      {
        "ad": "Andrew Alston",
        "end": "2022-11-02 09:42:20-07:00",
        "end_reason": "evaluation_closed",
        "start": "2022-10-16 21:04:41-07:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Eric Vyncke": [
      {
        "ad": "Eric Vyncke",
        "end": "2022-10-21 02:23:55-07:00",
        "end_reason": "new_position",
        "start": "2022-10-16 21:04:41-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Eric Vyncke",
        "end": "2022-11-02 09:42:20-07:00",
        "end_reason": "evaluation_closed",
        "start": "2022-10-21 02:23:55-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Erik Kline": [
      {
        "ad": "Erik Kline",
        "end": "2022-10-19 00:22:21-07:00",
        "end_reason": "new_position",
        "start": "2022-10-16 21:04:41-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Erik Kline",
        "end": "2022-11-02 09:42:20-07:00",
        "end_reason": "evaluation_closed",
        "start": "2022-10-19 00:22:21-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Francesca Palombini": [
      {
        "ad": "Francesca Palombini",
        "end": "2022-11-02 09:42:20-07:00",
        "end_reason": "evaluation_closed",
        "start": "2022-10-16 21:04:41-07:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "John Scudder": [
      {
        "ad": "John Scudder",
        "end": "2022-10-21 10:20:03-07:00",
        "end_reason": "new_position",
        "start": "2022-10-16 21:04:41-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "John Scudder",
        "end": "2022-11-02 09:42:20-07:00",
        "end_reason": "evaluation_closed",
        "start": "2022-10-21 10:20:03-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Lars Eggert": [
      {
        "ad": "Lars Eggert",
        "end": "2022-10-26 03:10:11-07:00",
        "end_reason": "new_position",
        "start": "2022-10-16 21:04:41-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Lars Eggert",
        "end": "2022-11-02 09:42:20-07:00",
        "end_reason": "evaluation_closed",
        "start": "2022-10-26 03:10:11-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Martin Duke": [
      {
        "ad": "Martin Duke",
        "end": "2022-10-24 16:24:36-07:00",
        "end_reason": "new_position",
        "start": "2022-10-16 21:04:41-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Martin Duke",
        "end": "2022-10-24 18:48:48-07:00",
        "end_reason": "position_updated",
        "start": "2022-10-24 16:24:36-07:00",
        "text": "RFC 3326  doesn't specify what the receiver will do if two reason values have the same protocol value. Are we reasonably sure that existing implementations of SIP won't throw an error if they get this, or does there need to be some sort of negotiation mechanism?",
        "type": "Discuss"
      },
      {
        "ad": "Martin Duke",
        "end": "2022-11-02 09:42:20-07:00",
        "end_reason": "evaluation_closed",
        "start": "2022-10-24 18:48:48-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Murray Kucherawy": [
      {
        "ad": "Murray Kucherawy",
        "end": "2022-10-16 21:04:41-07:00",
        "end_reason": "new_position",
        "start": "2022-10-16 21:04:41-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Murray Kucherawy",
        "end": "2022-11-02 09:42:20-07:00",
        "end_reason": "evaluation_closed",
        "start": "2022-10-16 21:04:41-07:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Paul Wouters": [
      {
        "ad": "Paul Wouters",
        "end": "2022-10-25 14:13:58-07:00",
        "end_reason": "new_position",
        "start": "2022-10-16 21:04:41-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Paul Wouters",
        "end": "2022-10-27 13:38:47-07:00",
        "end_reason": "position_updated",
        "start": "2022-10-25 14:13:58-07:00",
        "text": "I understand the document is changing an existing MUST, and the change itself seems fine. But I do wonder about the operational effect of this. What if a sip stack complying to this new RFC talks to an old sip stack complying to the old RFC. Is it known what the most widely used sip stacks do in the case of receiving a duplicate message for the same protocol? Will it just ignore the duplicate ? If so, should this document specify that the order of these might be important ? Will it fail the entire sip packet? If so, should this document specify to only use this when the other end is known to implement this RFC? Should there be a fallback mechanism that will only sent the 1 most important \"reason\" if it looks the other end is failing on our message with multiple reasons? The WG might have experience or testing that is not obvious to me (or other readers of the document). Perhaps a short Operational Considerations Section would be appropriate ?",
        "type": "Discuss"
      },
      {
        "ad": "Paul Wouters",
        "end": "2022-11-02 09:42:20-07:00",
        "end_reason": "evaluation_closed",
        "start": "2022-10-27 13:38:47-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Robert Wilton": [
      {
        "ad": "Robert Wilton",
        "end": "2022-10-23 06:42:10-07:00",
        "end_reason": "new_position",
        "start": "2022-10-16 21:04:41-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Robert Wilton",
        "end": "2022-11-02 09:42:20-07:00",
        "end_reason": "evaluation_closed",
        "start": "2022-10-23 06:42:10-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Roman Danyliw": [
      {
        "ad": "Roman Danyliw",
        "end": "2022-10-24 05:16:10-07:00",
        "end_reason": "new_position",
        "start": "2022-10-16 21:04:41-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Roman Danyliw",
        "end": "2022-11-02 09:42:20-07:00",
        "end_reason": "evaluation_closed",
        "start": "2022-10-24 05:16:10-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Warren Kumari": [
      {
        "ad": "Warren Kumari",
        "end": "2022-10-26 18:29:38-07:00",
        "end_reason": "new_position",
        "start": "2022-10-16 21:04:41-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Warren Kumari",
        "end": "2022-11-02 09:42:20-07:00",
        "end_reason": "evaluation_closed",
        "start": "2022-10-26 18:29:38-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Zaheduzzaman Sarker": [
      {
        "ad": "Zaheduzzaman Sarker",
        "end": "2022-10-26 06:43:27-07:00",
        "end_reason": "new_position",
        "start": "2022-10-16 21:04:41-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Zaheduzzaman Sarker",
        "end": "2022-11-02 09:42:20-07:00",
        "end_reason": "evaluation_closed",
        "start": "2022-10-26 06:43:27-07:00",
        "text": null,
        "type": "No Objection"
      }
    ]
  },
  "doc_name": "rfc9366",
  "evaluation_end": "2022-11-02 09:42:20-07:00",
  "evaluation_start": "2022-10-16 21:04:41-07:00"
}