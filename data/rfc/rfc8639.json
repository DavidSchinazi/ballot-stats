{
  "all_ballots": {
    "Adam Roach": [
      {
        "ad": "Adam Roach",
        "end": "2019-05-01 22:11:57-07:00",
        "end_reason": "new_position",
        "start": "2019-04-16 03:50:42-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Adam Roach",
        "end": "2019-05-21 07:38:11-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-05-01 22:11:57-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Alexey Melnikov": [
      {
        "ad": "Alexey Melnikov",
        "end": "2019-05-01 10:49:58-07:00",
        "end_reason": "new_position",
        "start": "2019-04-16 03:50:42-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alexey Melnikov",
        "end": "2019-05-02 03:10:47-07:00",
        "end_reason": "position_updated",
        "start": "2019-05-01 10:49:58-07:00",
        "text": "YANG validator reports the following: yanglint 0.14.80: yanglint --verbose -p {rfclib} -p {draftlib} -p {tmplib} {model} -i: err : The leafref leaf is config but refers to a non-config leaf. (/ietf-subscribed-notifications:subscriptions/subscription/target/stream/stream) err : The leafref leaf is config but refers to a non-config leaf. (/ietf-subscribed-notifications:subscriptions/subscription/target/stream/stream) err : Invalid value \"subscription-policy\" of \"uses\". (/ietf-subscribed-notifications:subscriptions/subscription/subscription-policy) err : Copying data from grouping failed. (/ietf-subscribed-notifications:subscriptions/subscription/subscription-policy) err : Module \"ietf-subscribed-notifications\" parsing failed. I would like to understand whether this is a problem with the document or a problem with the validating tool.",
        "type": "Discuss"
      },
      {
        "ad": "Alexey Melnikov",
        "end": "2019-05-21 07:38:11-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-05-02 03:10:47-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Alissa Cooper": [
      {
        "ad": "Alissa Cooper",
        "end": "2019-05-01 11:07:26-07:00",
        "end_reason": "new_position",
        "start": "2019-04-16 03:50:42-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alissa Cooper",
        "end": "2019-05-21 07:38:11-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-05-01 11:07:26-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Alvaro Retana": [
      {
        "ad": "Alvaro Retana",
        "end": "2019-05-01 16:43:37-07:00",
        "end_reason": "new_position",
        "start": "2019-04-16 03:50:42-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alvaro Retana",
        "end": "2019-05-21 07:38:11-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-05-01 16:43:37-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Barry Leiba": [
      {
        "ad": "Barry Leiba",
        "end": "2019-05-01 11:27:48-07:00",
        "end_reason": "new_position",
        "start": "2019-04-16 03:50:42-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Barry Leiba",
        "end": "2019-05-21 07:38:11-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-05-01 11:27:48-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Benjamin Kaduk": [
      {
        "ad": "Benjamin Kaduk",
        "end": "2019-04-29 10:39:30-07:00",
        "end_reason": "new_position",
        "start": "2019-04-16 03:50:42-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Benjamin Kaduk",
        "end": "2019-04-29 13:20:47-07:00",
        "end_reason": "position_updated",
        "start": "2019-04-29 10:39:30-07:00",
        "text": "[putting this out early in the hopes it can be resolved quickly; I'm just starting to review the document.] This document started life as a rfc5277bis, published in July 2008, before  RFC 5378  ( BCP 78 ) was published in November of 2008.\u00a0 If we are using any text from  RFC 5277  and did not gain the additional rights declaration from the authors of that document, this document needs to use a different boilerplate text (the \"pre-2008\" text).\u00a0 I look at the sibling document draft-ietf-netfonf-yang-push of this document, which does use the pre-2008 boilerplate, and am having a hard time understanding why this document does not also have the pre-2008 boilerplate.",
        "type": "Discuss"
      },
      {
        "ad": "Benjamin Kaduk",
        "end": "2019-04-30 14:10:58-07:00",
        "end_reason": "position_updated",
        "start": "2019-04-29 13:20:47-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Benjamin Kaduk",
        "end": "2019-05-03 16:57:23-07:00",
        "end_reason": "discuss_updated",
        "start": "2019-04-30 14:10:58-07:00",
        "text": "Thanks for this document; I just have a few minor \"housekeeping\" points that should get resolved before publication.\u00a0 (Please also note the substantive comments in the COMMENT section as well, particularly those relating to the transport requirements and security considerations.) I'm not sure that we state clearly enough what is required to have a specification for a transport for notifications.\u00a0 Specifically (see COMMENT), in the module we seem to say that the specification must indicate what the default encoding is to be used if not otherwise specified, but that's not enumerated as a requirement on such a specification anywhere I see.\u00a0 I also think that we could probably require (as opposed to \"highly recommend\" in the current security considerations) that the transport provide message confidentiality and integrity protection. I'm also unsure that I properly understand the use of the \"reset\" RPC -- if it has no effect when transit connectivity already exists, then what entity is going to call \"reset\" in the case of publisher timeout when trying to reach a receiver?\u00a0 Surely not the publisher itself, since that would just be publisher-internal functionality with no need for an external-facing RPC. I'm also a little unclear on the mechanics of the list of subscriptions described in Section 3.3.\u00a0 Does it provide a way for a low-privilege client (that can only access one or a handful of the subscriptions) to enumerate all subscriptions that exist, including subscriptions used by high-privilege clients?\u00a0 If so, we may want to think about some security considerations text to that effect; if not, we may want to say that the access-control will limit which leafs are visible to some clients. Finally, we have a few instances of \"leaf filter-failure-hint\" that's of type \"string\", providing \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  \"Information describing where and/or why a provided filter \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 was unsupportable for a subscription.\"; I don't understand why it's a string as opposed to some form of machine-readable data.\u00a0 Is it supposed to be human-readable?\u00a0 Does that bring in any internationalization considerations?",
        "type": "Discuss"
      },
      {
        "ad": "Benjamin Kaduk",
        "end": "2019-05-06 14:52:05-07:00",
        "end_reason": "position_updated",
        "start": "2019-05-03 16:57:23-07:00",
        "text": "t looks like the description of filter-failure-hint inmodify-subscription-stream-error-info needs the same treatment thatestablish-subscription-stream-error-info\u00a0 received.",
        "type": "Discuss"
      },
      {
        "ad": "Benjamin Kaduk",
        "end": "2019-05-21 07:38:11-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-05-06 14:52:05-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Deborah Brungard": [
      {
        "ad": "Deborah Brungard",
        "end": "2019-04-29 10:49:26-07:00",
        "end_reason": "new_position",
        "start": "2019-04-16 03:50:42-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Deborah Brungard",
        "end": "2019-05-21 07:38:11-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-04-29 10:49:26-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Eric Vyncke": [
      {
        "ad": "Eric Vyncke",
        "end": "2019-04-30 12:00:05-07:00",
        "end_reason": "new_position",
        "start": "2019-04-16 03:50:42-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Eric Vyncke",
        "end": "2019-05-21 07:38:11-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-04-30 12:00:05-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Ignas Bagdonas": [
      {
        "ad": "Ignas Bagdonas",
        "end": "2019-04-16 03:50:43-07:00",
        "end_reason": "new_position",
        "start": "2019-04-16 03:50:42-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Ignas Bagdonas",
        "end": "2019-05-21 07:38:11-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-04-16 03:50:43-07:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Magnus Westerlund": [
      {
        "ad": "Magnus Westerlund",
        "end": "2019-05-02 04:55:34-07:00",
        "end_reason": "new_position",
        "start": "2019-04-16 03:50:42-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Magnus Westerlund",
        "end": "2019-05-02 05:24:33-07:00",
        "end_reason": "discuss_updated",
        "start": "2019-05-02 04:55:34-07:00",
        "text": "My focus when reviewing this document was from a perspective of how to handle overload. I have a hard time understanding how this will actually work, especially in a fashion that preservers goodput and ensure what is considered the most important subscriptions are delivered. Not having good undertanding into netconf and restconf don't hesitate to call out likely missunderstanding by me and provide clarification and pointers.  A) The QoS and priority sending mechanism discussed in 2.3 and furhter defined by the YANG model. I do want to raise the usage of the DSCP code point to a discuss. As the DSCP defines different PHB and relative priorities in the router queues a DSCP value does not provide the publisher any information about priority. I get the feeling from the text that this may be intended. If the only intention is to have the transport perform differential treatment in the network between the publisher and the receiver there are still more considerations are needed. First of all I think these sentence needs a total rewrite: \u00a0  If the publisher supports the \"dscp\" feature, then a subscription \u00a0  with a \"dscp\" leaf MUST result in a corresponding [ RFC2474 ] DSCP \u00a0  marking being placed within the IP header of any resulting \u00a0  notification messages and subscription state change notifications. \u00a0  Where TCP is used, a publisher which supports the \"dscp\" feature \u00a0  SHOULD ensure that a subscription's notification messages are \u00a0  returned within a single TCP transport session where all traffic \u00a0  shares the subscription's \"dscp\" leaf value. I think one need to put a requriement on the transport to use a transport that utilize the DSCP marking on its traffic. Which for the current set of connection oriented transport protocols, TCP, SCTP, and QUIC all currently only support using a single DSCP per connection. Implying multiple transport protocol connections using a particular transport to enable this mapping.  A.2 Queuing model of a publisher.  With the DSCP and the Weight and dependency model I think it is important to clarify the model of the queueing in the publisher. So is the intention that several subscriptions with different weights and possibly dependencies have their individual queues that goes into a scheduler? To avoid complex queue interactions on this level I think there need to be seperate scheduler instances per DSCP. I would also note that Dependency mechanism can't ensure that a dependent stream arrive at receiver after the identified dependency if they are on different DSCP. In fact if one would have HTTP/3 (over QUIC) we may not even guarantee it within a single connection and same DSCP due to packet loss impact. To me this model and what relationship one need to consider here need to be clarified. I think  RFC 7540  Section 5.3.1 is an excellent indication of just the importance of considering what is in the same dependency tree and what it means to have different weighting.  B. The unpredictability of the circuit breaker overload mechanism.  My description of the overload handling in this document is that it is a circuit breaker based mechanism that can blow a fuse on subscriptions that it fails to honor in overload situations. What worries me deply is the total unpredictability of this mechanism.  First, is it the intention to derive what subscriptions are least important from the DSCP, weighting and Dependency parameters? If it is, I think that is a misstake as priority on what subscriptions are most important to retain are not necessarily reflected in their QoS parameters.  Secondly, what are the values when a subscription are considered to be to heavy or not be handled accordingly. Are there any parameter sets that actually describe what SLA the subscriber expect that can be converted into timeout timers or buffer depth thresholds to indicate that publisher side isn't delivering these in time?  Third, I hard time to understand if there are any additional back pressure mechanism between the receiver and the publisher than the transport protocols flow control? So a receiver that is not keeping up processing the data it process will not read out the data out of the flow controlled buffers in the receiver and thus prevent the publisher to write to the transport conncetion, thus causing the publisher to eventually trigger a suspension. Is it correct that this is the only mechanism present?  To my understanding the current mechanism places all subscriptions on the same importance and with the same SLA. Thus likely causing short term overload situations to cause subscription suspensions in random subscriptions. Is the WG fine with this type of randomness occuring and expecting that normally there will be such amount of overprovisioning that being able to indicate priority and SLA are overkill?  C. 2.4.5.\u00a0 Killing a Dynamic Subscription \u00a0  The \"kill-subscription\" operation permits an operator to end a \u00a0  dynamic subscription which is not associated with the transport \u00a0  session used for the RPC.\u00a0 A publisher MUST terminate any dynamic \u00a0  subscription identified by the \"id\" parameter in the RPC request, if \u00a0  such a subscription exists. Can someone please clarify the use case for this functionality. To my understanding it allows another receiver given authority to kill the subscription being delivered to another receiver. Based on the otherwise rather strict that all manipulations of dynamic subscriptions happens from the transport session context that established it I want to better understand the use case it appears out place.  D. The Requirements on a transport supporting Configured Subscriptions Reading through Section 2.5 I arrived at a number of questions. I tried to understand what the requirements are for the",
        "type": "Discuss"
      },
      {
        "ad": "Magnus Westerlund",
        "end": "2019-05-10 02:15:01-07:00",
        "end_reason": "position_updated",
        "start": "2019-05-02 05:24:33-07:00",
        "text": "My focus when reviewing this document was from a perspective of how to handle overload. I have a hard time understanding how this will actually work, especially in a fashion that preservers goodput and ensure what is considered the most important subscriptions are delivered. Not having good undertanding into netconf and restconf don't hesitate to call out likely missunderstanding by me and provide clarification and pointers.  A) The QoS and priority sending mechanism discussed in 2.3 and furhter defined by the YANG model. I do want to raise the usage of the DSCP code point to a discuss. As the DSCP defines different PHB and relative priorities in the router queues a DSCP value does not provide the publisher any information about priority. I get the feeling from the text that this may be intended. If the only intention is to have the transport perform differential treatment in the network between the publisher and the receiver there are still more considerations are needed. First of all I think these sentence needs a total rewrite: \u00a0  If the publisher supports the \"dscp\" feature, then a subscription \u00a0  with a \"dscp\" leaf MUST result in a corresponding [ RFC2474 ] DSCP \u00a0  marking being placed within the IP header of any resulting \u00a0  notification messages and subscription state change notifications. \u00a0  Where TCP is used, a publisher which supports the \"dscp\" feature \u00a0  SHOULD ensure that a subscription's notification messages are \u00a0  returned within a single TCP transport session where all traffic \u00a0  shares the subscription's \"dscp\" leaf value. I think one need to put a requriement on the transport to use a transport that utilize the DSCP marking on its traffic. Which for the current set of connection oriented transport protocols, TCP, SCTP, and QUIC all currently only support using a single DSCP per connection. Implying multiple transport protocol connections using a particular transport to enable this mapping.  A.2 Queuing model of a publisher.  With the DSCP and the Weight and dependency model I think it is important to clarify the model of the queueing in the publisher. So is the intention that several subscriptions with different weights and possibly dependencies have their individual queues that goes into a scheduler? To avoid complex queue interactions on this level I think there need to be seperate scheduler instances per DSCP. I would also note that Dependency mechanism can't ensure that a dependent stream arrive at receiver after the identified dependency if they are on different DSCP. In fact if one would have HTTP/3 (over QUIC) we may not even guarantee it within a single connection and same DSCP due to packet loss impact. To me this model and what relationship one need to consider here need to be clarified. I think  RFC 7540  Section 5.3.1 is an excellent indication of just the importance of considering what is in the same dependency tree and what it means to have different weighting. To conclude I think this needs a model description and clearer definition and possibly requirements towards the transport. Espceially if you actually need an in-order delivery requirement? B. The unpredictability of the circuit breaker overload mechanism.  My description of the overload handling in this document is that it is a circuit breaker based mechanism that can blow a fuse on subscriptions that it fails to honor in overload situations. What worries me deply is the total unpredictability of this mechanism.  First, is it the intention to derive what subscriptions are least important from the DSCP, weighting and Dependency parameters? If it is, I think that may be a misstake as priority on what subscriptions are most important to retain are not necessarily reflected in their QoS parameters.  Secondly, what are the values when a subscription are considered to be to heavy or not be handled accordingly. Are there any parameter sets that actually describe what SLA the subscriber expect that can be converted into timeout timers or buffer depth thresholds to indicate that publisher side isn't delivering these in time?  Third, I what I understand there are no any additional back pressure mechanism between the receiver and the publisher than the transport protocols flow control? So a receiver that is not keeping up processing the data it process will not read out the data out of the flow controlled buffers in the receiver and thus prevent the publisher to write to the transport conncetion, thus causing the publisher to eventually trigger a suspension due to its queue build up?\u00a0  To my understanding the current mechanism places all subscriptions on the same importance and with the same SLA. Thus likely causing short term overload situations to cause subscription suspensions in random subscriptions. Is the WG fine with this type of randomness occuring and expecting that normally there will be such amount of overprovisioning that being able to indicate priority and SLA are overkill?  At a minimal a change of this sentence in Section 2.5.1 is needed: \u00a0 This could \u00a0  be for reasons of an unexpected but sustained increase in an event \u00a0  stream's event records, degraded CPU capacity, a more complex \u00a0  referenced filter, or other higher priority subscriptions which have \u00a0  usurped resources.  As it states that subscriptions has priorities without reference to a mechanism that provides that priority.  C. 2.4.5.\u00a0 Killing a Dynamic Subscription \u00a0  The \"kill-subscription\" operation permits an operator to end a \u00a0  dynamic subscription which is not associated with the transport \u00a0  session used for the RPC.\u00a0 A publisher MUST terminate any dynamic \u00a0  subscription identified by the \"id\" parameter in the RPC request, if \u00a0  such a subscription exists. Can someone please clarify the use case for this functionality. To my understanding it allows another receiver given authority to kill the subscription being delivered to another receiver. Based on the otherwise rather strict that all manipulations of dynamic subscriptions happens from the transport session context that established it I want to better understand the use case it appears out place.  D. The Requirements on a transport supporting Configured Subscriptions Reading through Section 2.5 I arrived at a number of questions. I tried to understand what the requirements are for the transport that supports Configured Subscriptions. I did note that neither  draft-ietf-netconf-restconf-notif-13  nor  draft-ietf-netconf-netconf-event-notifications-17  supports configured subscriptions. Thus, there appear no template for a solution either, or does there exist another document that is being worked on defining such a transport?  Questions that arose for me related to Configured Susbription Transport where the following: 1. Can Transport Session be initiated in both direction.  RFC 8071  provides a solution for Publisher to Receiver initiation. It is unclear if all parts are in place to have a receiver to publisher initiated transport to be bound to the subscription.  2. What is \"name\" really? It appears to be defined as an empty container. Despite that it appears to have requirements on being both a security identity as well as network address.  3. In Figure 9, which is stated to be for the receiver. What information does the receiver use to determine the transition (d)? And what does it do in this step. Related to Discuss part B).  4.  RFC 8071  appears to lack any considerations for how often and how many times it attempts to connect to the receiver. So applying that mechanism appears to require some usage guidance to avoid causing overload situations or DoS potential by misconfiguring network devices with this soltution to dial out frequently to a target.  As the transport solution requirements are not detail it is actually hard to determine if there are short comings in the description in Section 2.5 and the corresponding YANG model. Is it an reasonable request to document these requirements?",
        "type": "Discuss"
      },
      {
        "ad": "Magnus Westerlund",
        "end": "2019-05-21 07:38:11-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-05-10 02:15:01-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Martin Vigoureux": [
      {
        "ad": "Martin Vigoureux",
        "end": "2019-05-02 00:40:25-07:00",
        "end_reason": "new_position",
        "start": "2019-04-16 03:50:42-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Martin Vigoureux",
        "end": "2019-05-21 07:38:11-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-05-02 00:40:25-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Mirja Kuhlewind": [
      {
        "ad": "Mirja Kuhlewind",
        "end": "2019-04-29 06:50:50-07:00",
        "end_reason": "new_position",
        "start": "2019-04-16 03:50:42-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Mirja Kuhlewind",
        "end": "2019-05-21 07:38:11-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-04-29 06:50:50-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Roman Danyliw": [
      {
        "ad": "Roman Danyliw",
        "end": "2019-04-30 12:49:28-07:00",
        "end_reason": "new_position",
        "start": "2019-04-16 03:50:42-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Roman Danyliw",
        "end": "2019-05-06 15:08:40-07:00",
        "end_reason": "position_updated",
        "start": "2019-04-30 12:49:28-07:00",
        "text": "Sections 2.4.2.1 and 2.5.6 seems to describe a mechanism (replay) to access historical data that was potentially collected prior to a given subscriber having access to it.\u00a0 This appears to be an explicitly designed feature.\u00a0 No push back on that.\u00a0 However, I believe that explicitly stating this arrangement is warranted.\u00a0 Perhaps something on the order of the following could be added to the Security Considerations -- \u201cThe replay mechanisms described in Sections 2.4.2.1 and 2.5.6 provides access to historical event records.\u00a0 By design, the access control model that protects these records could enable subscribers to view data to which they were not authorized at the time of collection.\u201d",
        "type": "Discuss"
      },
      {
        "ad": "Roman Danyliw",
        "end": "2019-05-21 07:38:11-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-05-06 15:08:40-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Suresh Krishnan": [
      {
        "ad": "Suresh Krishnan",
        "end": "2019-05-01 19:48:21-07:00",
        "end_reason": "new_position",
        "start": "2019-04-16 03:50:42-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Suresh Krishnan",
        "end": "2019-05-21 07:38:11-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-05-01 19:48:21-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Warren Kumari": [
      {
        "ad": "Warren Kumari",
        "end": "2019-04-30 14:13:28-07:00",
        "end_reason": "new_position",
        "start": "2019-04-16 03:50:42-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Warren Kumari",
        "end": "2019-05-21 07:38:11-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-04-30 14:13:28-07:00",
        "text": null,
        "type": "No Objection"
      }
    ]
  },
  "doc_name": "rfc8639",
  "evaluation_end": "2019-05-21 07:38:11-07:00",
  "evaluation_start": "2019-04-16 03:50:42-07:00"
}