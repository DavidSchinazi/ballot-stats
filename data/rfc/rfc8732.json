{
  "all_ballots": {
    "Adam Roach": [
      {
        "ad": "Adam Roach",
        "end": "2019-06-24 20:41:38-07:00",
        "end_reason": "new_position",
        "start": "2019-06-11 16:39:57-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Adam Roach",
        "end": "2019-08-07 08:58:54-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-06-24 20:41:38-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Alexey Melnikov": [
      {
        "ad": "Alexey Melnikov",
        "end": "2019-08-07 08:58:54-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-06-11 16:39:57-07:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Alissa Cooper": [
      {
        "ad": "Alissa Cooper",
        "end": "2019-06-24 13:18:03-07:00",
        "end_reason": "new_position",
        "start": "2019-06-11 16:39:57-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alissa Cooper",
        "end": "2019-08-01 10:20:25-07:00",
        "end_reason": "position_updated",
        "start": "2019-06-24 13:18:03-07:00",
        "text": "\"The IESG is considered to be the owner of all these key exchange \u00a0  methods; this does NOT imply that the IESG is considered to be the \u00a0  owner of the underlying GSS-API mechanism.\" I don't understand this text. What does it mean for the IESG to be the owner of a method?",
        "type": "Discuss"
      },
      {
        "ad": "Alissa Cooper",
        "end": "2019-08-07 08:58:54-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-08-01 10:20:25-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Alvaro Retana": [
      {
        "ad": "Alvaro Retana",
        "end": "2019-06-25 08:12:41-07:00",
        "end_reason": "new_position",
        "start": "2019-06-11 16:39:57-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alvaro Retana",
        "end": "2019-08-07 08:58:54-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-06-25 08:12:41-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Barry Leiba": [
      {
        "ad": "Barry Leiba",
        "end": "2019-06-24 00:57:48-07:00",
        "end_reason": "new_position",
        "start": "2019-06-11 16:39:57-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Barry Leiba",
        "end": "2019-08-07 08:58:54-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-06-24 00:57:48-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Benjamin Kaduk": [
      {
        "ad": "Benjamin Kaduk",
        "end": "2019-06-11 16:39:58-07:00",
        "end_reason": "new_position",
        "start": "2019-06-11 16:39:57-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Benjamin Kaduk",
        "end": "2019-08-07 08:58:54-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-06-11 16:39:58-07:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Deborah Brungard": [
      {
        "ad": "Deborah Brungard",
        "end": "2019-06-25 08:54:07-07:00",
        "end_reason": "new_position",
        "start": "2019-06-11 16:39:57-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Deborah Brungard",
        "end": "2019-08-07 08:58:54-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-06-25 08:54:07-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Eric Vyncke": [
      {
        "ad": "Eric Vyncke",
        "end": "2019-06-27 00:26:21-07:00",
        "end_reason": "new_position",
        "start": "2019-06-11 16:39:57-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Eric Vyncke",
        "end": "2019-08-07 08:58:54-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-06-27 00:26:21-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Ignas Bagdonas": [
      {
        "ad": "Ignas Bagdonas",
        "end": "2019-08-07 08:58:54-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-06-11 16:39:57-07:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Magnus Westerlund": [
      {
        "ad": "Magnus Westerlund",
        "end": "2019-06-26 07:11:11-07:00",
        "end_reason": "new_position",
        "start": "2019-06-11 16:39:57-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Magnus Westerlund",
        "end": "2019-08-07 08:58:54-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-06-26 07:11:11-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Martin Vigoureux": [
      {
        "ad": "Martin Vigoureux",
        "end": "2019-06-26 07:00:08-07:00",
        "end_reason": "new_position",
        "start": "2019-06-11 16:39:57-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Martin Vigoureux",
        "end": "2019-08-07 08:58:54-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-06-26 07:00:08-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Mirja Kuhlewind": [
      {
        "ad": "Mirja Kuhlewind",
        "end": "2019-06-25 05:26:46-07:00",
        "end_reason": "new_position",
        "start": "2019-06-11 16:39:57-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Mirja Kuhlewind",
        "end": "2019-08-07 08:58:54-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-06-25 05:26:46-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Roman Danyliw": [
      {
        "ad": "Roman Danyliw",
        "end": "2019-06-24 07:38:51-07:00",
        "end_reason": "new_position",
        "start": "2019-06-11 16:39:57-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Roman Danyliw",
        "end": "2019-08-07 08:58:54-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-06-24 07:38:51-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Suresh Krishnan": [
      {
        "ad": "Suresh Krishnan",
        "end": "2019-06-24 08:43:49-07:00",
        "end_reason": "new_position",
        "start": "2019-06-11 16:39:57-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Suresh Krishnan",
        "end": "2019-08-07 08:58:54-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-06-24 08:43:49-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Warren Kumari": [
      {
        "ad": "Warren Kumari",
        "end": "2019-06-26 06:57:35-07:00",
        "end_reason": "new_position",
        "start": "2019-06-11 16:39:57-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Warren Kumari",
        "end": "2019-08-07 08:58:54-07:00",
        "end_reason": "evaluation_closed",
        "start": "2019-06-26 06:57:35-07:00",
        "text": null,
        "type": "No Objection"
      }
    ]
  },
  "doc_name": "rfc8732",
  "evaluation_end": "2019-08-07 08:58:54-07:00",
  "evaluation_start": "2019-06-11 16:39:57-07:00"
}