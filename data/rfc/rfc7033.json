{
  "all_ballots": {
    "Adrian Farrel": [
      {
        "ad": "Adrian Farrel",
        "end": "2013-04-10 05:15:34-07:00",
        "end_reason": "new_position",
        "start": "2013-04-04 05:36:26-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Adrian Farrel",
        "end": "2013-08-27 09:50:16-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-04-10 05:15:34-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Barry Leiba": [
      {
        "ad": "Barry Leiba",
        "end": "2013-04-04 05:36:26-07:00",
        "end_reason": "new_position",
        "start": "2013-04-04 05:36:26-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Barry Leiba",
        "end": "2013-08-27 09:50:16-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-04-04 05:36:26-07:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Benoit Claise": [
      {
        "ad": "Benoit Claise",
        "end": "2013-04-09 15:08:29-07:00",
        "end_reason": "new_position",
        "start": "2013-04-04 05:36:26-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Benoit Claise",
        "end": "2013-04-10 05:38:03-07:00",
        "end_reason": "position_updated",
        "start": "2013-04-09 15:08:29-07:00",
        "text": null,
        "type": "No Objection"
      },
      {
        "ad": "Benoit Claise",
        "end": "2013-04-16 23:31:22-07:00",
        "end_reason": "position_updated",
        "start": "2013-04-10 05:38:03-07:00",
        "text": "Replying to a single point below from Adrian's review, which Adrian and I just discussed privately. Thanks to Adrian for opening up my eyes on something I overlooked. > > > I am really uneasy about the inclusion of the example in section 3.4. > Not only is it \"totally fictitious\", but I think it is widening the > scope of WebFinger into dynamic device-level information. That sort of > thing needs, IMHO, a wider discussion within the IETF. > > Since the example is not a real one and is dependent on extensions to > a spec that might not be extended and is out of scope for the IETF, > perhaps we can regard the section as \"marketing\" in support of > WebFinger. Since WebFinger has clearly been accepted as an idea, would > it be possible to delete this section? > > There would also be a small change to the Introduction as well. This comment made me re-read the abstract and the introduction, and triggered some new thoughts. They implicitly mention the query of static information, except for the sentence \" for example, the amount of toner in a printer or the physical location of a server.\". I overlooked the fact that the example in Section 3.4 is actually about status report. The section 3.4 title is \"Retrieving Device Information\", but you really mean \"Retrieving Device Status Information\". And I have an OPS problem (*) with this WebFinger potential applicability to status reporting, because now, WebFinger is comparable to SNMP, polling a MIB OID to get the printer toner level. The solution is to stress that WebFinger is targeting the query of static information (i.e. not reporting)",
        "type": "Discuss"
      },
      {
        "ad": "Benoit Claise",
        "end": "2013-08-27 09:50:16-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-04-16 23:31:22-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Brian Haberman": [
      {
        "ad": "Brian Haberman",
        "end": "2013-04-08 08:09:54-07:00",
        "end_reason": "new_position",
        "start": "2013-04-04 05:36:26-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Brian Haberman",
        "end": "2013-08-27 09:50:16-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-04-08 08:09:54-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Gonzalo Camarillo": [
      {
        "ad": "Gonzalo Camarillo",
        "end": "2013-04-11 03:53:47-07:00",
        "end_reason": "new_position",
        "start": "2013-04-04 05:36:26-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Gonzalo Camarillo",
        "end": "2013-08-27 09:50:16-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-04-11 03:53:47-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Jari Arkko": [
      {
        "ad": "Jari Arkko",
        "end": "2013-04-09 09:00:14-07:00",
        "end_reason": "new_position",
        "start": "2013-04-04 05:36:26-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Jari Arkko",
        "end": "2013-08-27 09:50:16-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-04-09 09:00:14-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Joel Jaeggli": [
      {
        "ad": "Joel Jaeggli",
        "end": "2013-04-09 23:14:45-07:00",
        "end_reason": "new_position",
        "start": "2013-04-04 05:36:26-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Joel Jaeggli",
        "end": "2013-04-18 12:29:25-07:00",
        "end_reason": "position_updated",
        "start": "2013-04-09 23:14:45-07:00",
        "text": "8.2 \u00a0  Further, WebFinger MUST NOT be used to provide any personal data to \u00a0  any party unless explicitly authorized by the person whose \u00a0  information is being shared.  This is a usage guideline not a part of the protocol specification. At a minimum it should use non-normative language. probably it should be replaced with a description of the potential for exposure.  8.3  When discussing abuse potential, the document neglects to think about the potential for clients to reveal information about themselves based on the information that they are asking about. particularly in the context of phishing that might actually be goal of sending someone a webfinger uri. In the context of the automatic retrevial of uri's by agentts as described in 3.1, this is certainly the case.",
        "type": "Discuss"
      },
      {
        "ad": "Joel Jaeggli",
        "end": "2013-08-27 09:50:16-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-04-18 12:29:25-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Martin Stiemerling": [
      {
        "ad": "Martin Stiemerling",
        "end": "2013-04-07 23:12:14-07:00",
        "end_reason": "new_position",
        "start": "2013-04-04 05:36:26-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Martin Stiemerling",
        "end": "2013-08-27 09:50:16-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-04-07 23:12:14-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Pete Resnick": [
      {
        "ad": "Pete Resnick",
        "end": "2013-04-10 08:13:08-07:00",
        "end_reason": "new_position",
        "start": "2013-04-04 05:36:26-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Pete Resnick",
        "end": "2013-04-17 12:19:31-07:00",
        "end_reason": "discuss_updated",
        "start": "2013-04-10 08:13:08-07:00",
        "text": "[All: As I noted earlier to the Webfinger mailing list, I have Cc'ed this to the Webfinger list along with the document authors, the document shepherd, and the rest of the IESG. Also note that I intend to DISCUSS this until Thursday. If I get no further support from the IESG and/or the WG that this is a serious and showstopper problem, I will simply ABSTAIN on both this and on the -acct-uri document (on which I also currently have an open DISCUSS position). But it looks like Richard and I are in some agreement on this.] There appears to be a big giant semantic gap for the client side of this protocol. I can find nothing in the document that indicates to the client how it shall determine what sort of URI to use is the resource part of the query or what the semantics of any given URI are supposed to be. I suspect that the semantics are so underspecified that there could not possibly be interoperable implementations without lots of out-of-band information. The first example provides a mapping from an email address (or perhaps a mailto URI; that's not clear) to an acct URI, but neither the example nor anything in the rest of the document gives any clue why you would choose to query an \"acct\" URI based on the contents of an email message. I think the assumption is that if there is an email address, there must be some sort of \"account\" associated with it, and therefore querying the host on the RHS of the \"@\" for that account will get some interesting information. But I don't see any reason to choose an \"acct\" scheme over \"mailto\" or \"smtp\" or \"email\" or \"foobar\"; as far as I can tell, the choice is semantics-free. Reading the above alongside 3.3 makes me all the more suspicious: In 3.3 (also mentioned in 4.5), a \"mailto\" URI gets you configuration information for all email configuration parameters. Does an \"acct\" URI get you configuration information for email *and* xmpp *and* sip *and* calendaring *and* all other configuration information (since you are no longer asking for a particular protocol, but rather the general account information), or do you only get \"information\" about the person and not their account? (I might also insert privacy and security worries here, but see Stephen's DISCUSS regarding that.) How can the client know what sort of information it can ask for and how to get it? And for that matter, how does the server tell what information to pass back? You'd think there would be a hint about this in 4.3, but \"rel\" only seems to provide for the client to request those things that the client already knows about it. In particular, there appears to be no way to say, \"Give me user provided information, but not config information\" or \"Give me config information, but not blog entries\". I find the semantics for \"device\" in 3.4 all-the-more mysterious. As far as I can tell, this URI scheme simply means, \"Give me all of the information for the entire host.\" Again, the semantics of all of these interactions seem so underspecified that I don't understand how interoperation is supposed to happen. This also leaves me with the question about why the resource query part is a URI at all. It seems to me that the resource you are asking about is not a URI (or URN) at all; it's simply an identifier for an entity that the particular host knows about. Given that, why not pass a simple identifier? (See  http://datatracker.ietf.org/doc/draft-ietf-radext-nai/  for example.) If the scheme is not providing any particular semantics about the response, I see no reason to provide the scheme. If more semantics (beyond rel) are needed, another parameter indicating the type of identifier being used seems much more appropriate than using a URI scheme.",
        "type": "Discuss"
      },
      {
        "ad": "Pete Resnick",
        "end": "2013-08-21 16:03:39-07:00",
        "end_reason": "position_updated",
        "start": "2013-04-17 12:19:31-07:00",
        "text": "There appears to be a big giant semantic gap for the client side of this protocol. I can find nothing in the document that indicates to the client how it shall determine what sort of URI to use is the resource part of the query or what the semantics of any given URI are supposed to be. Indeed, the -13 version of the document adds a paragraph more or less saying that this is intentional: \u00a0  The WebFinger protocol is designed to be used across many \u00a0  applications.\u00a0 Applications that wish to utilize WebFinger will need \u00a0  to specify properties, titles, and link relation types that are \u00a0  appropriate for the application.\u00a0 Further, applications will need to \u00a0  define the appropriate URI scheme to utilize for the query target. I suspect that the semantics are so underspecified that there could not possibly be interoperable implementations without lots of out-of-band information. 1. The first example provides a mapping from an email address (or perhaps a mailto URI; that's not clear) to an acct URI, but neither the example nor anything in the rest of the document gives any clue why you would choose to query an \"acct\" URI based on the contents of an email message. I think the assumption is that if there is an email address, there must be some sort of \"account\" associated with it, and therefore querying the host on the RHS of the \"@\" for that account will get some interesting information. But I don't see any reason to choose an \"acct\" scheme over \"mailto\" or \"smtp\" or \"email\" or \"foobar\"; as far as I can tell, the choice is semantics-free. Reading the above alongside 3.3 makes me all the more suspicious: In 3.3 (also mentioned in 4.5), a \"mailto\" URI gets you configuration information for all email configuration parameters. Does an \"acct\" URI get you configuration information for email *and* xmpp *and* sip *and* calendaring *and* all other configuration information (since you are no longer asking for a particular protocol, but rather the general account information), or do you only get \"information\" about the person and not their account? How can the client know what sort of information it can ask for and how to get it? And for that matter, how does the server tell what information to pass back? You'd think there would be a hint about this in 4.3, but \"rel\" only seems to provide for the client to request those things that the client already knows about it. In particular, there appears to be no way to say, \"Give me user provided information, but not config information\" or \"Give me config information, but not blog entries\". If the intention of the document is to ignore this issue and leave it to other documents or just the implementation to define (as implied by the new paragraph in the intro), I'd say that this protocol is not complete and therefore not interoperable. 2. I disagree with Benoit about the need for Webfinger to return only static info and therefore object to the addition of the text to the intro regarding static vs. dynamic: \u00a0  The information is intended to be static in nature and, as such, \u00a0  WebFinger is not intended to be used to return dynamic information \u00a0  like the temperature of a CPU or the current toner level in a laser \u00a0  printer. Benoit's objection is certainly a design preference, but is not appropriate as a DISCUSS and certainly is not an appropriate change to make without WG consensus, which was not obtained. I think it is perfectly reasonable for Webfinger to return dynamic information (indeed, it certainly will in the case of human account information), and this restriction is inappropriate just to satisfy a particular AD's preferences.",
        "type": "Discuss"
      },
      {
        "ad": "Pete Resnick",
        "end": "2013-08-27 09:50:16-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-08-21 16:03:39-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Richard Barnes": [
      {
        "ad": "Richard Barnes",
        "end": "2013-04-09 20:50:42-07:00",
        "end_reason": "new_position",
        "start": "2013-04-04 05:36:26-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Richard Barnes",
        "end": "2013-04-09 20:51:50-07:00",
        "end_reason": "discuss_updated",
        "start": "2013-04-09 20:50:42-07:00",
        "text": "1. In general, this seems like more of a \"framework\" document than an actual protocol.\u00a0 It concerns me to put something like that on the Standards Track without some plan to add more specificity.\u00a0 As the document stands, it defines a generic system for mapping an octet string to a set of attribute/value pairs.\u00a0 While that level of generality can be useful for building applications, it makes it hard to evaluate the security and privacy implications.\u00a0 I think this is what's at the root of Stephen's DISCUSS points on the examples.\u00a0 If this were part of a working group that were chartered to define details, this would be fine as a first deliverable.\u00a0 But it doesn't really seem to stand on its own. Setting those concerns aside for the moment, I have some concerns about the interoperability of this protocol.\u00a0 While the JSON body returned from a query is well specified, the process of making a query is much less so. 2. Section 4.1. does not actually tell the implementor how to construct a WebFinger URI.\u00a0 A few issues/questions that need to be addressed: 2.1. What are the inputs to this process?\u00a0 An \"acct:\" URI and optional \"rel\" values? 2.2. How does one choose the host part of the WebFinger URI? 2.3. The section as it currently stands allows arbitrary octet strings to be placed in the \"resource\" and \"rel\" fields.\u00a0 Is that really your intention?\u00a0 It seems like these should be constrained to something like the syntax of the \"source\" and \"rel\" fields in the JRD, namely, an ASCII token or URI. 2.4. The scheme and path paragraphs from 4.2. should be moved up to this section. 3. Section 4.2. I couldn't figure out what HTTP methods a client is allowed to use.\u00a0 It seems to me that it would be sensible to allow only GET, unless there is a concrete use case for something else.\u00a0  4. Section 4.5. says \"use of the \"acct\" URI scheme is recommended, since it explicitly identifies an account accessible via WebFinger\".\u00a0 This does not seem compatible with what is in  draft-ietf-appsawg-acct-uri , \"Therefore, any protocol that uses 'acct' URIs, such as the WebFinger protocol [ I-D.ietf-appsawg-webfinger ] or the Simple Web Discovery protocol [ I-D.jones-simple-web-discovery ],\"\u00a0 Suggest removing this text.  5. In general, the use of \"acct\" URIs do not seem all that useful.\u00a0 The only way they are used in the example use cases are (1) as a replacement for a \"mailto\" URI, and (2) as a \"dummy\" URI scheme for a \"user@host\" string lacking other context.\u00a0 In the former case, you might as well have just used the \"mailto\" URI.\u00a0 The latter case is kind of artificial, since the whole example is premised on the use of \"acct\".\u00a0  It might help motivate these URIs if Section 4.1. actually used part of the resource URI to derive part of the WebFinger URI, e.g., using the host part of the URI as\u00a0 the host for the WebFinger URI. 6. In Section 5., the requirement that servers MUST send an Access-Control-Allow-Origin is kind of useless; since the server can put any value it likes in the header, it can put in something bogus, in which case it would be the same as if the header were omitted.\u00a0 So the CORS requirements should either be a SHOULD, or a MUST that also requires \"*\".\u00a0 The latter case might seem a little extreme, but it might not be unreasonable.\u00a0 The server can always filter requests based on the Origin header; the only thing CORS does is push the filtering to the browser, arguably making the server less secure. 7. With regard to Section 8.2., I agree with Stephen that there should be some mechanism specified for users to control what information is accessible about them through WebFinger.\u00a0 What's even more concerning here is that it's not even clear which servers a user should contact to control his information.\u00a0 If my address is \"mailto: rlb@example.com \", do I just need to contact the WebFinger resources at \" example.com \"?\u00a0 Or is it possible that there's some other WebFinger server out there serving information about my address, say \" http://evil.com/.well-known/webfinger?resource=mailto%3Arlb%40example.com \"?\u00a0 This is another area where a tighter specification would help.",
        "type": "Discuss"
      },
      {
        "ad": "Richard Barnes",
        "end": "2013-04-11 13:48:54-07:00",
        "end_reason": "discuss_updated",
        "start": "2013-04-09 20:51:50-07:00",
        "text": "1. In general, this seems like more of a \"framework\" document than an actual protocol.\u00a0 It concerns me to put something like that on the Standards Track without some plan to add more specificity.\u00a0 As the document stands, it defines a generic system for mapping an octet string to a set of attribute/value pairs.\u00a0 While that level of generality can be useful for building applications, it makes it hard to evaluate the security and privacy implications.\u00a0 I think this is what's at the root of Stephen's DISCUSS points on the examples.\u00a0 If this were part of a working group that were chartered to define details, this would be fine as a first deliverable.\u00a0 But it doesn't really seem to stand on its own. Setting those concerns aside for the moment, I have some concerns about the interoperability of this protocol.\u00a0 While the JSON body returned from a query is well specified, the process of making a query is much less so. 2. Section 4.1. does not actually tell the implementor how to construct a WebFinger URI.\u00a0 A few issues/questions that need to be addressed: 2.1. What are the inputs to this process?\u00a0 An \"acct:\" URI and optional \"rel\" values? 2.2. How does one choose the host part of the WebFinger URI? 2.3. The section as it currently stands allows arbitrary octet strings to be placed in the \"resource\" and \"rel\" fields.\u00a0 Is that  really your intention?\u00a0 It seems like these should be constrained to something like the syntax of the \"source\" and \"rel\" fields in the JRD, namely, an ASCII token or URI. 2.4. The scheme and path paragraphs from 4.2. should be moved up to this section. 3. Section 4.2. I couldn't figure out what HTTP methods a client is allowed to use.\u00a0 It seems to me that it would be sensible to allow only GET, unless there is a concrete use case for something else.\u00a0  4. Section 4.5. says \"use of the \"acct\" URI scheme is recommended, since it explicitly identifies an account accessible via WebFinger\".\u00a0 This does not seem compatible with what is in  draft-ietf-appsawg-acct-uri , \"Therefore, any protocol that uses 'acct' URIs, such as the WebFinger protocol [ I-D.ietf-appsawg-webfinger ] or the Simple Web Discovery protocol [ I-D.jones-simple-web-discovery ],\"\u00a0 Suggest removing this text.  5. In general, the use of \"acct\" URIs do not seem all that useful.\u00a0 The only way they are used in the example use cases are (1) as a replacement for a \"mailto\" URI, and (2) as a \"dummy\" URI scheme for a \"user@host\" string lacking other context.\u00a0 In the former case, you might as well have just used the \"mailto\" URI.\u00a0 The latter case is kind of artificial, since the whole example is premised on the use of \"acct\".\u00a0  It might help motivate these URIs if Section 4.1. actually used part of the resource URI to derive part of the WebFinger URI, e.g., using the host part of the URI as\u00a0 the host for the WebFinger URI. 6. In Section 5., the requirement that servers MUST send an Access-Control-Allow-Origin is kind of useless; since the server can put any value it likes in the header, it can put in something bogus, in which case it would be the same as if the header were omitted.\u00a0 So the CORS requirements should either be a SHOULD, or a MUST that also requires \"*\".\u00a0 The latter case might seem a little extreme, but it might not be unreasonable.\u00a0 The server can always filter requests based on the Origin header; the only thing CORS does is push the filtering to the browser, arguably making the server less secure. 7. With regard to Section 8.2., I agree with Stephen that there should be some mechanism specified for users to control what information is accessible about them through WebFinger.\u00a0 What's even more concerning here is that it's not even clear which servers a user should contact to control his information.\u00a0 If my address is \"mailto: rlb@example.com \", do I just need to contact the WebFinger resources at \" example.com \"?\u00a0 Or is it possible that there's some other WebFinger server out there serving information about my address, say \" http://evil.com/.well-known/webfinger?resource=mailto%3Arlb%40example.com \"?\u00a0 This is another area where a tighter specification would help.",
        "type": "Discuss"
      },
      {
        "ad": "Richard Barnes",
        "end": "2013-04-17 09:11:29-07:00",
        "end_reason": "position_updated",
        "start": "2013-04-11 13:48:54-07:00",
        "text": "1. In general, this seems like more of a \"framework\" document than an actual protocol.\u00a0 It concerns me to put something like that on the Standards Track without some plan to add more specificity.\u00a0 As the document stands, it defines a generic system for mapping an octet string to a set of attribute/value pairs.\u00a0 While that level of generality can be useful for building applications, it makes it hard to evaluate the security and privacy implications.\u00a0 I think this is what's at the root of Stephen's DISCUSS points on the examples.\u00a0 If this were part of a working group that were chartered to define details, this would be fine as a first deliverable.\u00a0 But it doesn't really seem to stand on its own. Setting those concerns aside for the moment, I have some concerns about the interoperability of this protocol.\u00a0 While the JSON body returned from a query is well specified, the process of making a query is much less so. 2. Section 4.1. does not actually tell the implementor how to construct a WebFinger URI.\u00a0 A few issues/questions that need to be addressed: 2.1. What are the inputs to this process?\u00a0 An \"acct:\" URI and optional \"rel\" values? 2.2. How does one choose the host part of the WebFinger URI? 2.3. The section as it currently stands allows arbitrary octet strings to be placed in the \"resource\" and \"rel\" fields.\u00a0 Is that  really your intention?\u00a0 It seems like these should be constrained to something like the syntax of the \"source\" and \"rel\" fields in the JRD, namely, an ASCII token or URI. 2.4. The scheme and path paragraphs from 4.2. should be moved up to this section. 3. Section 4.2. I couldn't figure out what HTTP methods a client is allowed to use.\u00a0 It seems to me that it would be sensible to allow only GET, unless there is a concrete use case for something else.\u00a0  4. Section 4.5. says \"use of the \"acct\" URI scheme is recommended, since it explicitly identifies an account accessible via WebFinger\".\u00a0 This does not seem compatible with what is in  draft-ietf-appsawg-acct-uri , \"Therefore, any protocol that uses 'acct' URIs, such as the WebFinger protocol [ I-D.ietf-appsawg-webfinger ] or the Simple Web Discovery protocol [ I-D.jones-simple-web-discovery ],\"\u00a0 Suggest removing this text.  5. In general, the use of \"acct\" URIs do not seem all that useful.\u00a0 The only way they are used in the example use cases are (1) as a replacement for a \"mailto\" URI, and (2) as a \"dummy\" URI scheme for a \"user@host\" string lacking other context.\u00a0 In the former case, you might as well have just used the \"mailto\" URI.\u00a0 The latter case is kind of artificial, since the whole example is premised on the use of \"acct\".\u00a0  It might help motivate these URIs if Section 4.1. actually used part of the resource URI to derive part of the WebFinger URI, e.g., using the host part of the URI as\u00a0 the host for the WebFinger URI. 6. (moved to comment) 7. With regard to Section 8.2., I agree with Stephen that there should be some mechanism specified for users to control what information is accessible about them through WebFinger.\u00a0 What's even more concerning here is that it's not even clear which servers a user should contact to control his information.\u00a0 If my address is \"mailto: rlb@example.com \", do I just need to contact the WebFinger resources at \" example.com \"?\u00a0 Or is it possible that there's some other WebFinger server out there serving information about my address, say \" http://evil.com/.well-known/webfinger?resource=mailto%3Arlb%40example.com \"?\u00a0 This is another area where a tighter specification would help.",
        "type": "Discuss"
      },
      {
        "ad": "Richard Barnes",
        "end": "2013-08-27 09:50:16-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-04-17 09:11:29-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Sean Turner": [
      {
        "ad": "Sean Turner",
        "end": "2013-04-11 08:20:21-07:00",
        "end_reason": "new_position",
        "start": "2013-04-04 05:36:26-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Sean Turner",
        "end": "2013-08-27 09:50:16-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-04-11 08:20:21-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Spencer Dawkins": [
      {
        "ad": "Spencer Dawkins",
        "end": "2013-08-27 09:50:16-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-04-04 05:36:26-07:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Stephen Farrell": [
      {
        "ad": "Stephen Farrell",
        "end": "2013-04-08 17:58:11-07:00",
        "end_reason": "new_position",
        "start": "2013-04-04 05:36:26-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Stephen Farrell",
        "end": "2013-04-09 05:32:07-07:00",
        "end_reason": "discuss_updated",
        "start": "2013-04-08 17:58:11-07:00",
        "text": "As will be seen, I (still) have issues with the privacy aspects of this specification. Some of those are most apparent through the use-cases/examples so I've taken the unusal step of DISCUSSing those since they really seem to convey the real intent of this protocol. To an extent, some of the suggested changes there do represent personal preferences of mine but I believe that the DISCUSSion is still worth having between the authors and IESG and perhaps the WG.  (1) 3.1, having the MUA automatically do the webfinger thing is a privacy disaster and would cause MUAs to visit sources of spam continually and to expose the email addresses of their correspondents. Other references to having a UA automatically do webfinger also need to be deleted kind of behaviour needs to be the subject of a \"MUST NOT\" statement IMO. In fact, it already is, since 8.2 says: \"WebFinger MUST NOT be used to provide any personal data to any party unless explicitly authorized by the person whose information is being shared.\" Having a MUA automatically send out a WF request where the query target is the mail sender/from contradicts this requirement. The 3.1 example also fits the anti-pattern given in 8.3. Suggested fix, easy: say that a MUA MUST NOT do the automatic thing, as per 8.2, which would be a fine forward reference. (2) 3.3, this example is odd - why should Sue expose her username in this interaction - there's no occurrence of anything clearly user-dependent in the response except what was given in the request. Why should we expose user information unnecessarily in this manner? I think the fix here is for user Sue to send a request for \" anon@example.com \" and for the text to specifically say that making use of the real username isn't a good plan and making use of an invented non-existent string for username in this case is a fine plan and perhaps even specifying such a \"nonexistent\" username value that can be supported by and understood by all clients and servers and saying when it'd be sensible to use that. (3) 3.4, making devices discoverable like this, esp if device type and firmware revisions were to be exposed represents a significant increase in an existing risk.\u00a0 (We had a recent discussion related to vCard for a similar use case.) This section seems to be too speculative to be honest, so I'd suggest just deleting it. If not, maybe add text like that added in the vCard case.  (4) 4.2, can you explain the security consdiderations associated with re-directing a client from https://example.com  to  https://example.net?  Why don't you need to do that explicitly in the document? I think you might need to explicitly say that in re-direct cases, both sessions MUST be good TLS sessions or else clients might well accept 3xx from a MITM.\u00a0 Are there no requirements to compare the original request and final response? (I could buy that but want to check.) (5) 8.2 and 8.3, given the privacy and abuse considerations here why is there no definition for the DELETE method in order to provide a way for users to be able to at least ask that their information no longer be available? Or another .well-known URI could be used. Was that discussed?",
        "type": "Discuss"
      },
      {
        "ad": "Stephen Farrell",
        "end": "2013-04-17 05:49:33-07:00",
        "end_reason": "discuss_updated",
        "start": "2013-04-09 05:32:07-07:00",
        "text": "As will be seen, I (still) have issues with the privacy aspects of this specification. Some of those are most apparent through the use-cases/examples so I've taken the unusal step of DISCUSSing those since they really seem to convey the real intent of this protocol. To an extent, some of the suggested changes there do represent personal preferences of mine but I believe that the DISCUSSion is still worth having between the authors and IESG and perhaps the WG.  (1) 3.1, having the MUA automatically do the webfinger thing is a privacy disaster and would cause MUAs to visit sources of spam continually and to expose the email addresses of their correspondents. Other references to having a UA automatically do webfinger also need to be deleted kind of behaviour needs to be the subject of a \"MUST NOT\" statement IMO. In fact, it already is, since 8.2 says: \"WebFinger MUST NOT be used to provide any personal data to any party unless explicitly authorized by the person whose information is being shared.\" Having a MUA automatically send out a WF request where the query target is the mail sender/from contradicts this requirement. The 3.1 example also fits the anti-pattern given in 8.3. Suggested fix, easy: say that a MUA MUST NOT do the automatic thing, as per 8.2, which would be a fine forward reference. (2) 3.3, this example is odd - why should Sue expose her username in this interaction - there's no occurrence of anything clearly user-dependent in the response except what was given in the request. Why should we expose user information unnecessarily in this manner? I think the fix here is for user Sue to send a request for \" anon@example.com \" and for the text to specifically say that making use of the real username isn't a good plan and making use of an invented non-existent string for username in this case is a fine plan and perhaps even specifying such a \"nonexistent\" username value that can be supported by and understood by all clients and servers and saying when it'd be sensible to use that. (3) 3.4, making devices discoverable like this, esp if device type and firmware revisions were to be exposed represents a significant increase in an existing risk.\u00a0 (We had a recent discussion related to vCard for a similar use case.) This section seems to be too speculative to be honest, so I'd suggest just deleting it. If not, maybe add text like that added in the vCard case.  (4) 4.2, can you explain the security consdiderations associated with re-directing a client from https://example.com  to  https://example.net?  Why don't you need to do that explicitly in the document? I think you might need to explicitly say that in re-direct cases, both sessions MUST be good TLS sessions or else clients might well accept 3xx from a MITM.\u00a0 Are there no requirements to compare the original request and final response? (I could buy that but want to check.) (5) 8.2 and 8.3, given the privacy and abuse considerations here why is there no definition for the DELETE method in order to provide a way for users to be able to at least ask that their information no longer be available? Or another .well-known URI could be used. Was that discussed? (6) 8.3: A possible missing security consideration - I think it'd be good if this section said that WF servers SHOULD implement mitigations against harvesting or overuse of WF, perhaps via rate controls or other mechanisms.",
        "type": "Discuss"
      },
      {
        "ad": "Stephen Farrell",
        "end": "2013-07-10 09:15:40-07:00",
        "end_reason": "position_updated",
        "start": "2013-04-17 05:49:33-07:00",
        "text": "This is just a quick update to clear the discuss points that are obviously already handled in -13. Some  points are not yet ready to clear, but I need to update the discuss text as -13 does partially address point (1) in particular.  I'll get that done later, hopefully today/tomorrow. I've not touched the comments below so far except to make what was discuss point (5) a comment. ----  As will be seen, I (still) have issues with the privacy aspects of this specification. Some of those are most apparent through the use-cases/examples so I've taken the unusal step of DISCUSSing those since they really seem to convey the real intent of this protocol. To an extent, some of the suggested changes there do represent personal preferences of mine but I believe that the DISCUSSion is still worth having between the authors and IESG and perhaps the WG.  (1) 3.1, having the MUA automatically do the webfinger thing is a privacy disaster and would cause MUAs to visit sources of spam continually and to expose the email addresses of their correspondents. Other references to having a UA automatically do webfinger also need to be deleted kind of behaviour needs to be the subject of a \"MUST NOT\" statement IMO. In fact, it already is, since 8.2 says: \"WebFinger MUST NOT be used to provide any personal data to any party unless explicitly authorized by the person whose information is being shared.\" Having a MUA automatically send out a WF request where the query target is the mail sender/from contradicts this requirement. The 3.1 example also fits the anti-pattern given in 8.3. Suggested fix, easy: say that a MUA MUST NOT do the automatic thing, as per 8.2, which would be a fine forward reference. (2) 3.3, this example is odd - why should Sue expose her username in this interaction - there's no occurrence of anything clearly user-dependent in the response except what was given in the request. Why should we expose user information unnecessarily in this manner? I think the fix here is for user Sue to send a request for \" anon@example.com \" and for the text to specifically say that making use of the real username isn't a good plan and making use of an invented non-existent string for username in this case is a fine plan and perhaps even specifying such a \"nonexistent\" username value that can be supported by and understood by all clients and servers and saying when it'd be sensible to use that. (3) 3.4, making devices discoverable like this, esp if device type and firmware revisions were to be exposed represents a significant increase in an existing risk.\u00a0 (We had a recent discussion related to vCard for a similar use case.) This section seems to be too speculative to be honest, so I'd suggest just deleting it. If not, maybe add text like that added in the vCard case.  (4) cleared (5) made this a comment (6) cleared",
        "type": "Discuss"
      },
      {
        "ad": "Stephen Farrell",
        "end": "2013-08-27 09:50:16-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-07-10 09:15:40-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Stewart Bryant": [
      {
        "ad": "Stewart Bryant",
        "end": "2013-04-11 07:38:47-07:00",
        "end_reason": "new_position",
        "start": "2013-04-04 05:36:26-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Stewart Bryant",
        "end": "2013-08-27 09:50:16-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-04-11 07:38:47-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Ted Lemon": [
      {
        "ad": "Ted Lemon",
        "end": "2013-04-10 17:59:19-07:00",
        "end_reason": "new_position",
        "start": "2013-04-04 05:36:26-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Ted Lemon",
        "end": "2013-04-10 18:02:03-07:00",
        "end_reason": "discuss_updated",
        "start": "2013-04-10 17:59:19-07:00",
        "text": "This is a really neat idea, and while the protocol specification seems reasonably solid, it's still got some pieces missing. Specifically, the security model for this work is alluded to, but left as an exercise for the reader.\u00a0  Section 6, paragraph 1, talks about authentication, but doesn't require it, nor does it define any default access control mechanism.\u00a0  Paragraph 2 talks about revealing different amounts of information to different users, but doesn't explain how this would work, nor describe default behavior or a default model for deciding how such information might be filtered. There are some good ideas expressed in section 6; what this draft needs, arguably, is one of two things:\u00a0  First option, add substantial additional text describing the authentication model, the access control model and the data filtering model.\u00a0  Second option, write up a separate document describing a model for how this would be done, and then reference that document from this document.\u00a0  This would be preferable in my mind because such a model would be useful for more than just webfinger.\u00a0 Not being knowledgable in this space, perhaps such a document already exists and could be referenced. But without this, what we have is essentially what we had in 1977 with the finger protocol.\u00a0  The state of the art has evolved significantly since then; we have Google Plus, which supports public access to restricted data, plus various levels of sharing on the basis of circles.\u00a0  We have Facebook, with detailed privacy settings.\u00a0  These models evolved not in the abstract, but as a response to user demand.\u00a0  This document addresses much the same need that Facebook and G+ address, but in a distributed fashion.\u00a0  With a solid security model, I think it would be very beneficial.\u00a0  So the action for this DISCUSS, if it isn't clear, is to develop a security model.\u00a0  I realize that's a big ask, but without a security model I think this document is going to cause a lot of harm, or else not get used, neither of which is a desirable outcome.",
        "type": "Discuss"
      },
      {
        "ad": "Ted Lemon",
        "end": "2013-04-10 18:03:23-07:00",
        "end_reason": "discuss_updated",
        "start": "2013-04-10 18:02:03-07:00",
        "text": "This is a really neat idea, and while the protocol specification seems reasonably solid, it's still got some pieces missing. Specifically, the security model for this work is alluded to, but left as an exercise for the reader.\u00a0  Section 6, paragraph 1, talks about authentication, but doesn't require it, nor does it define any default access control mechanism.\u00a0  Paragraph 2 talks about revealing different amounts of information to different users, but doesn't explain how this would work, nor describe default behavior or a default model for deciding how such information might be filtered. There are some good ideas expressed in section 6; what this draft needs, arguably, is one of two things:\u00a0  First option, add substantial additional text describing the authentication model, the access control model and the data filtering model.\u00a0  Second option, write up a separate document describing a model for how this would be done, and then reference that document from this document.\u00a0  This would be preferable in my mind because such a model would be useful for more than just webfinger.\u00a0 Not being knowledgable in this space, perhaps such a document already exists and could be referenced. But without this, what we have is essentially what we had in 1977 with the finger protocol.\u00a0  The state of the art has evolved significantly since then; we have Google Plus, which supports public access to restricted data, plus various levels of sharing on the basis of circles, and we have Facebook, with detailed privacy settings. These models evolved not in the abstract, but as a response to user demand.\u00a0  This document addresses a similar need to that addressed by Facebook and G+ user profiles, but in a distributed fashion.\u00a0  With a solid security model, I think it would be very beneficial.\u00a0  So the action for this DISCUSS, if it isn't clear, is to develop a security model.\u00a0  I realize that's a big ask, but without a security model I think this document is going to cause a lot of harm, or else not get used, neither of which is a desirable outcome.",
        "type": "Discuss"
      },
      {
        "ad": "Ted Lemon",
        "end": "2013-04-11 19:54:07-07:00",
        "end_reason": "position_updated",
        "start": "2013-04-10 18:03:23-07:00",
        "text": "This is a really neat idea, and while the protocol specification seems reasonably solid, it's still got some pieces missing. Specifically, the security model for this work is alluded to, but left as an exercise for the reader.\u00a0  Section 6, paragraph 1, talks about authentication, but doesn't require it, nor does it define any default access control mechanism.\u00a0  Paragraph 2 talks about revealing different amounts of information to different users, but doesn't explain how this would work, nor describe default behavior or a default model for deciding how such information might be filtered. There are some good ideas expressed in section 6; what this draft needs, arguably, is one of two things:\u00a0  First option, add substantial additional text describing the authentication model, the access control model and the data filtering model.\u00a0  Second option, write up a separate document describing a model for how this would be done, and then reference that document from this document.\u00a0  This would be preferable in my mind because such a model would be useful for more than just webfinger.\u00a0 Not being knowledgable in this space, perhaps such a document already exists and could be referenced. But without this, what we have is essentially what we had in 1977 with the finger protocol.\u00a0  The state of the art has evolved significantly since then; we have Google Plus, which supports public access to restricted data, plus various levels of sharing on the basis of circles, and we have Facebook, with detailed privacy settings. These models evolved not in the abstract, but as a response to user demand. This document addresses a need similar to that addressed by Facebook and G+ user profiles, but in a distributed fashion.\u00a0  With a solid security model, I think it would be very beneficial.\u00a0  So the action for this DISCUSS, if it isn't clear, is to develop a security model.\u00a0  I realize that's a big ask, but without a security model I think this document is going to cause a lot of harm, or else not get used, neither of which is a desirable outcome.",
        "type": "Discuss"
      },
      {
        "ad": "Ted Lemon",
        "end": "2013-04-17 12:34:06-07:00",
        "end_reason": "position_updated",
        "start": "2013-04-11 19:54:07-07:00",
        "text": null,
        "type": "No Objection"
      },
      {
        "ad": "Ted Lemon",
        "end": "2013-04-17 12:34:32-07:00",
        "end_reason": "comment_updated",
        "start": "2013-04-17 12:34:06-07:00",
        "text": "Pete has rightly pointed out that my comments below are more consistent with \"Abstain\" than \"No Objection.\"\u00a0  In addition to the concern I've expressed below, I also agree with Pete's concern that the specification as to how to issue a query is to vague to promote interoperability. The more I try to come up with a helpful suggestion for how to make this document do what I think it should with respect to authentication and authorization, the more I feel like I've waded into quicksand. I think that what I originally asked in my DISCUSS is actually impossible, so I've cleared the DISCUSS, not because I feel it's been addressed, but because it's probably unreasonable to ask the authors to address it. For what it's worth, here's the most recent reply I crafted to Paul Jones on the topic.\u00a0  I don't think what I said in here is exactly right, so I don't propose that the authors do what I ask below, but I also don't think it's completely unreasonable: On Apr 11, 2013, at 9:46 PM, Paul E. Jones\u00a0 wrote: > For WebFinger, though, the access control mechanism is HTTP-based > authentication.\u00a0 It will either be: > - No authorization required (likely the norm for most queries to > /.well-known/webfinger) > - Basic authentication (OK since all requests are over HTTPS) > - OAuth tokens or similar (not fully explored, but potentially useful > for allowing trusted third parties to access one of your WF- > referenced resources) What I would like to see somewhere in this is first of all that the document explicitly says something like what you just said above\u2014I don't think it does at the moment. Secondly, that it goes into a little more detail about this. I'm thinking about no more than an additional page of text, and preferably less, not a dozen pages. The detail would include implications of \"no authorization.\" It would talk very generally about per-URI access control on the basis of authentication tokens appearing on access control lists. It would talk very generally about mapping provided authentication information, whether it's none, basic, or OAuth, to roles that appear on access control lists. And it would talk, again very generally, about how to return more or less complete results on the basis of those roles. You already have text in the document that alludes to this. I'm not asking for something that's hugely more detailed than what's in the document now; it's just that what's in the document now only implies any of this to someone who has already drunk the authentication/authorization kool-aid. As for why I think you ought to do this when http doesn't do it, it's because this is very clearly a protocol about sharing user-specific information, and the information you're talking about very clearly includes information the privacy of which many users would want to control to varying degrees. A simple binary private/authenticated flag is too coarse, and will lead to people being forced to make unsafe privacy choices. I don't think you have to define a new authentication protocol, or that you should flesh out a complete authorization and access control system. But I am deeply uncomfortable with the idea of saying nothing about this issue here.",
        "type": "Abstain"
      },
      {
        "ad": "Ted Lemon",
        "end": "2013-08-27 09:50:16-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-04-17 12:34:32-07:00",
        "text": "Pete has rightly pointed out that my comments below are more consistent with \"Abstain\" than \"No Objection.\"\u00a0  In addition to the concern I've expressed below, I also agree with Pete's concern that the specification as to how to issue a query is too vague to promote interoperability. The more I try to come up with a helpful suggestion for how to make this document do what I think it should with respect to authentication and authorization, the more I feel like I've waded into quicksand. I think that what I originally asked in my DISCUSS is actually impossible, so I've cleared the DISCUSS, not because I feel it's been addressed, but because it's probably unreasonable to ask the authors to address it. For what it's worth, here's the most recent reply I crafted to Paul Jones on the topic.\u00a0  I don't think what I said in here is exactly right, so I don't propose that the authors do what I ask below, but I also don't think it's completely unreasonable: On Apr 11, 2013, at 9:46 PM, Paul E. Jones\u00a0 wrote: > For WebFinger, though, the access control mechanism is HTTP-based > authentication.\u00a0 It will either be: > - No authorization required (likely the norm for most queries to > /.well-known/webfinger) > - Basic authentication (OK since all requests are over HTTPS) > - OAuth tokens or similar (not fully explored, but potentially useful > for allowing trusted third parties to access one of your WF- > referenced resources) What I would like to see somewhere in this is first of all that the document explicitly says something like what you just said above\u2014I don't think it does at the moment. Secondly, that it goes into a little more detail about this. I'm thinking about no more than an additional page of text, and preferably less, not a dozen pages. The detail would include implications of \"no authorization.\" It would talk very generally about per-URI access control on the basis of authentication tokens appearing on access control lists. It would talk very generally about mapping provided authentication information, whether it's none, basic, or OAuth, to roles that appear on access control lists. And it would talk, again very generally, about how to return more or less complete results on the basis of those roles. You already have text in the document that alludes to this. I'm not asking for something that's hugely more detailed than what's in the document now; it's just that what's in the document now only implies any of this to someone who has already drunk the authentication/authorization kool-aid. As for why I think you ought to do this when http doesn't do it, it's because this is very clearly a protocol about sharing user-specific information, and the information you're talking about very clearly includes information the privacy of which many users would want to control to varying degrees. A simple binary private/authenticated flag is too coarse, and will lead to people being forced to make unsafe privacy choices. I don't think you have to define a new authentication protocol, or that you should flesh out a complete authorization and access control system. But I am deeply uncomfortable with the idea of saying nothing about this issue here.",
        "type": "Abstain"
      }
    ]
  },
  "doc_name": "rfc7033",
  "evaluation_end": "2013-08-27 09:50:16-07:00",
  "evaluation_start": "2013-04-04 05:36:26-07:00"
}