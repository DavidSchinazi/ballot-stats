{
  "all_ballots": {
    "Adrian Farrel": [
      {
        "ad": "Adrian Farrel",
        "end": "2014-09-28 12:11:38-07:00",
        "end_reason": "new_position",
        "start": "2014-09-25 07:27:23-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Adrian Farrel",
        "end": "2015-01-16 12:47:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-09-28 12:11:38-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Alia Atlas": [
      {
        "ad": "Alia Atlas",
        "end": "2015-01-16 12:47:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-09-25 07:27:23-07:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Alissa Cooper": [
      {
        "ad": "Alissa Cooper",
        "end": "2014-10-01 11:22:25-07:00",
        "end_reason": "new_position",
        "start": "2014-09-25 07:27:23-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alissa Cooper",
        "end": "2015-01-16 12:47:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-10-01 11:22:25-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Barry Leiba": [
      {
        "ad": "Barry Leiba",
        "end": "2014-10-01 07:54:20-07:00",
        "end_reason": "new_position",
        "start": "2014-09-25 07:27:23-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Barry Leiba",
        "end": "2015-01-16 12:47:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-10-01 07:54:20-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Benoit Claise": [
      {
        "ad": "Benoit Claise",
        "end": "2015-01-16 12:47:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-09-25 07:27:23-07:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Brian Haberman": [
      {
        "ad": "Brian Haberman",
        "end": "2014-09-29 17:00:42-07:00",
        "end_reason": "new_position",
        "start": "2014-09-25 07:27:23-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Brian Haberman",
        "end": "2014-10-01 07:53:49-07:00",
        "end_reason": "position_updated",
        "start": "2014-09-29 17:00:42-07:00",
        "text": null,
        "type": "No Objection"
      },
      {
        "ad": "Brian Haberman",
        "end": "2014-10-02 04:49:18-07:00",
        "end_reason": "position_updated",
        "start": "2014-10-01 07:53:49-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Brian Haberman",
        "end": "2015-01-16 12:47:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-10-02 04:49:18-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Jari Arkko": [
      {
        "ad": "Jari Arkko",
        "end": "2014-10-01 13:43:39-07:00",
        "end_reason": "new_position",
        "start": "2014-09-25 07:27:23-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Jari Arkko",
        "end": "2015-01-16 12:47:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-10-01 13:43:39-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Joel Jaeggli": [
      {
        "ad": "Joel Jaeggli",
        "end": "2014-10-01 22:42:34-07:00",
        "end_reason": "new_position",
        "start": "2014-09-25 07:27:23-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Joel Jaeggli",
        "end": "2015-01-16 12:47:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-10-01 22:42:34-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Kathleen Moriarty": [
      {
        "ad": "Kathleen Moriarty",
        "end": "2014-09-25 07:27:23-07:00",
        "end_reason": "new_position",
        "start": "2014-09-25 07:27:23-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Kathleen Moriarty",
        "end": "2015-01-16 12:47:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-09-25 07:27:23-07:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Martin Stiemerling": [
      {
        "ad": "Martin Stiemerling",
        "end": "2014-09-30 13:12:37-07:00",
        "end_reason": "new_position",
        "start": "2014-09-25 07:27:23-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Martin Stiemerling",
        "end": "2015-01-16 12:47:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-09-30 13:12:37-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Pete Resnick": [
      {
        "ad": "Pete Resnick",
        "end": "2014-10-01 21:54:18-07:00",
        "end_reason": "new_position",
        "start": "2014-09-25 07:27:23-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Pete Resnick",
        "end": "2014-12-02 20:37:05-08:00",
        "end_reason": "comment_updated",
        "start": "2014-10-01 21:54:18-07:00",
        "text": "Given my concerns with the other documents in this series, I'm not yet willing to ballot No Objection on this document. So I will Abstain, at least for the moment. We'll see how the rest of the discussion goes. Comments directly on this document: 4/5: \u00a0  The member names within a JWK MUST be unique; recipients MUST either \u00a0  reject JWKs with duplicate member names or use a JSON parser that \u00a0  returns only the lexically last duplicate member name, as specified \u00a0  in Section 15.12 (The JSON Object) of ECMAScript 5.1 [ECMAScript]. That first MUST is bogus. You are allowing them not to be unique in the rest of the sentence. And it's not clear what you mean by \"recipients\" here. Sounds like you mean \"parsers\" or \"interpreters\". If it were me, I'd stick to the \"MUST be unique\" and be done with it, but either way this paragraph needs fixing. 4.1: The second paragraph is redundant given the first paragraph; I'd delete it. And why do you need \"use\" at all given that you've got \"key_ops\"? 4.5: \u00a0  The structure of the \"kid\" value is \u00a0  unspecified. You should at least mention that this is a string. \"The 'kid' value is a text string, but it's structure is otherwise unspecified.\" Or something like that. 4.6 (and 4.7-4.9): \u00a0  If other members \u00a0  are present, the contents of those members MUST be semantically \u00a0  consistent with the related fields in the first certificate. This is a pretty silly use of MUST. If the answer to the question, \"Why might someone do otherwise?\" is \"Because they're an idiot\", you probably don't need the MUST. 5: \u00a0  Implementations SHOULD ignore JWKs within a JWK Set that use \"kty\" \u00a0  (key type) values that are not understood by them, are missing \u00a0  required members, or for which values are out of the supported \u00a0  ranges. I don't understand that SHOULD. This is completely dependent on what the implementation is doing. Unknown key types might be ignorable, but they might be vitally important. Why is this not a MAY? 5.1: Strike the last sentence. It's silly. 7: The first two sentences of the first paragraph and the first sentence of the second paragraph should be moved under Security Considerations; that's what this is. I'd delete the rest, as the encryption of any JSON object is handled by JWE. You might mention the content type somewhere, but the way it is in the document now is way overdone, with the whole \"MUST...unless construction. Simply make it: \u00a0  The content type of \"jwk+json\" can be used for \"cty\" header of the JWE. if you must have something.",
        "type": "Abstain"
      },
      {
        "ad": "Pete Resnick",
        "end": "2015-01-16 12:47:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-12-02 20:37:05-08:00",
        "text": "I've got some suggestions for improvements below, but overall I cannot support this document, so I'm entering an ABSTAIN. I don't think this WG has actually fulfilled its charter with regard to this document set. The WG was supposed to produce a \"JSON syntax that can be used by applications to describe secure data objects\". I don't believe it did that. Instead, it produced a compact serialization for a particular purpose and then backed into a JSON syntax. The compact serialization drove the effort and produced IMO a substandard JSON serialization. I don't believe that (reliable) interoperable implementations of the JSON serialization will be possible using this document set. However, there is at least rough consensus that these documents are usable as-is, and I don't think there's anything to be gained by holding them up any further. I hope the WG will adopt some of the remaining comments, but my intention is not to discuss this any further. If you wish to address any of the comments and need clarification, I'm glad to help with that. ------ 4/5: There was a discussion about the \"The member names within a JWK MUST be unique\" paragraphs, and a proposal to fix them. No fixing was done. 4.1: The second paragraph is unnecessary and should be removed. Also, \"use\" is unnecessary given \"key_ops\" and should be removed. 4.6 (and 4.7-4.9): \u00a0  If other members \u00a0  are present, the contents of those members MUST be semantically \u00a0  consistent with the related fields in the first certificate. This is a pretty silly use of MUST. If the answer to the question, \"Why might someone do otherwise?\" is \"Because they're an idiot\", you probably don't need the MUST. 5: \u00a0  Implementations SHOULD ignore JWKs within a JWK Set that use \"kty\" \u00a0  (key type) values that are not understood by them, are missing \u00a0  required members, or for which values are out of the supported \u00a0  ranges. I don't understand that SHOULD. This is completely dependent on what the implementation is doing. Unknown key types might be ignorable, but they might be vitally important. Why is this not a MAY? 5.1: Strike the last sentence. It's silly. 7: The first two sentences of the first paragraph and the first sentence of the second paragraph should be moved under Security Considerations; that's what this is. I'd delete the rest, as the encryption of any JSON object is handled by JWE. You might mention the content type somewhere, but the way it is in the document now is way overdone, with the whole \"MUST...unless construction. Simply make it: \u00a0  The content type of \"jwk+json\" can be used for \"cty\" header of the JWE. if you must have something.",
        "type": "Abstain"
      }
    ],
    "Richard Barnes": [
      {
        "ad": "Richard Barnes",
        "end": "2014-10-01 19:33:44-07:00",
        "end_reason": "new_position",
        "start": "2014-09-25 07:27:23-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Richard Barnes",
        "end": "2014-11-03 19:14:17-08:00",
        "end_reason": "position_updated",
        "start": "2014-10-01 19:33:44-07:00",
        "text": "Section 4.3. \"The \"use\" and \"key_ops\" JWK members SHOULD NOT be used together.\" Did the WG discuss how these could combine?\u00a0 What was the outcome of that discussion?\u00a0 This could be an important point for interoperability.\u00a0 For example, WebCrypto enforces them both, so it will break if it gets a key with \"use\" and \"key_ops\" set to inconsistent values. https://dvcs.w3.org/hg/webcrypto-api/raw-file/tip/spec/Overview.html#rsa-pss-operations Section 8. \"[TBD]@ietf.org\" This needs to be populated before approval.\u00a0 I don't know what's customary here, but \" jose@ietf.org \" is an obvious candidate.",
        "type": "Discuss"
      },
      {
        "ad": "Richard Barnes",
        "end": "2015-01-16 12:47:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-11-03 19:14:17-08:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Spencer Dawkins": [
      {
        "ad": "Spencer Dawkins",
        "end": "2014-10-02 08:13:41-07:00",
        "end_reason": "new_position",
        "start": "2014-09-25 07:27:23-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Spencer Dawkins",
        "end": "2015-01-16 12:47:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-10-02 08:13:41-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Stephen Farrell": [
      {
        "ad": "Stephen Farrell",
        "end": "2014-10-02 04:14:50-07:00",
        "end_reason": "new_position",
        "start": "2014-09-25 07:27:23-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Stephen Farrell",
        "end": "2014-10-21 05:43:57-07:00",
        "end_reason": "position_updated",
        "start": "2014-10-02 04:14:50-07:00",
        "text": "nearly a nit, but would impact code so a discuss to make sure we get it right... 4.5: saying kid is case sensitive precludes use of DNS names there or introduces bugs if those are used.\u00a0 Since DNS names are the primary way we distinguish things on the Internet, that seems odd. I don't think that you need to say case-insensitive here but that you might want to say that DNS names SHOULD be [lower|upper]cased before being used in kid parameters.",
        "type": "Discuss"
      },
      {
        "ad": "Stephen Farrell",
        "end": "2015-01-16 12:47:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-10-21 05:43:57-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Ted Lemon": [
      {
        "ad": "Ted Lemon",
        "end": "2014-10-02 04:52:55-07:00",
        "end_reason": "new_position",
        "start": "2014-09-25 07:27:23-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Ted Lemon",
        "end": "2015-01-16 12:47:30-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-10-02 04:52:55-07:00",
        "text": null,
        "type": "No Objection"
      }
    ]
  },
  "doc_name": "rfc7517",
  "evaluation_end": "2015-01-16 12:47:30-08:00",
  "evaluation_start": "2014-09-25 07:27:23-07:00"
}