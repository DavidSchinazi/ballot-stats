{
  "all_ballots": {
    "Adrian Farrel": [
      {
        "ad": "Adrian Farrel",
        "end": "2014-02-05 01:37:40-08:00",
        "end_reason": "new_position",
        "start": "2014-01-21 07:20:58-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Adrian Farrel",
        "end": "2014-02-27 04:12:46-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-02-05 01:37:40-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Barry Leiba": [
      {
        "ad": "Barry Leiba",
        "end": "2014-02-05 13:29:03-08:00",
        "end_reason": "new_position",
        "start": "2014-01-21 07:20:58-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Barry Leiba",
        "end": "2014-02-27 04:12:46-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-02-05 13:29:03-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Benoit Claise": [
      {
        "ad": "Benoit Claise",
        "end": "2014-02-05 22:20:29-08:00",
        "end_reason": "new_position",
        "start": "2014-01-21 07:20:58-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Benoit Claise",
        "end": "2014-02-13 13:17:44-08:00",
        "end_reason": "position_updated",
        "start": "2014-02-05 22:20:29-08:00",
        "text": "The metric names in the registry are not specific enough: payload type, calculation identifier metric, segment type, and potentially MOS. I guess they should say something about RTP. Let me file this DISCUSS while I double-check with the performance metric directorate.",
        "type": "Discuss"
      },
      {
        "ad": "Benoit Claise",
        "end": "2014-02-27 04:12:46-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-02-13 13:17:44-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Brian Haberman": [
      {
        "ad": "Brian Haberman",
        "end": "2014-02-05 11:53:08-08:00",
        "end_reason": "new_position",
        "start": "2014-01-21 07:20:58-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Brian Haberman",
        "end": "2014-02-27 04:12:46-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-02-05 11:53:08-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Gonzalo Camarillo": [
      {
        "ad": "Gonzalo Camarillo",
        "end": "2014-01-21 07:20:58-08:00",
        "end_reason": "new_position",
        "start": "2014-01-21 07:20:58-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Gonzalo Camarillo",
        "end": "2014-02-27 04:12:46-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-01-21 07:20:58-08:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Jari Arkko": [
      {
        "ad": "Jari Arkko",
        "end": "2014-02-05 10:31:52-08:00",
        "end_reason": "new_position",
        "start": "2014-01-21 07:20:58-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Jari Arkko",
        "end": "2014-02-27 04:12:46-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-02-05 10:31:52-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Joel Jaeggli": [
      {
        "ad": "Joel Jaeggli",
        "end": "2014-02-05 21:15:34-08:00",
        "end_reason": "new_position",
        "start": "2014-01-21 07:20:58-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Joel Jaeggli",
        "end": "2014-02-27 04:12:46-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-02-05 21:15:34-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Martin Stiemerling": [
      {
        "ad": "Martin Stiemerling",
        "end": "2014-02-04 04:33:22-08:00",
        "end_reason": "new_position",
        "start": "2014-01-21 07:20:58-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Martin Stiemerling",
        "end": "2014-02-27 04:12:46-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-02-04 04:33:22-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Pete Resnick": [
      {
        "ad": "Pete Resnick",
        "end": "2014-02-05 11:17:15-08:00",
        "end_reason": "new_position",
        "start": "2014-01-21 07:20:58-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Pete Resnick",
        "end": "2014-02-13 07:53:23-08:00",
        "end_reason": "discuss_updated",
        "start": "2014-02-05 11:17:15-08:00",
        "text": "Also seem comments below regarding the fixed point representation description. But aside from that: 3.2.1 says: \u00a0 \u00a0 \u00a0 A 1-5 MOS score is multiplied by 10 and then represented in the \u00a0 \u00a0 \u00a0 8:8 format. 3.2.2 says: \u00a0 \u00a0 \u00a0 The estimated MOS value is multiplied by 10 and expressed in \u00a0 \u00a0 \u00a0 6:7 format. \u00a0 \u00a0  That seems like a recipe for an implementation mistake. If the values are limited to 1-5, why is the format not simply 3:13 in the 3.2.1 and 3:10 in 3.2.2? Or even better, but some padding in front of the one in 3.2.1 so that they can both be 3:10. Asking the implementation to multiply by 10 seems like something that will accidentally not get done by an implementation. Is this really what you want? Is there some reason I don't understand that you want it this way? 4.1: \u00a0  xr-mos-block = \"mos-metrics\" [\"=\" extmap *(\",\" calgextmap)] extmap is undefined.",
        "type": "Discuss"
      },
      {
        "ad": "Pete Resnick",
        "end": "2014-02-21 14:08:51-08:00",
        "end_reason": "discuss_updated",
        "start": "2014-02-13 07:53:23-08:00",
        "text": "[I'm still waiting for a reply on the discussion we've been having, but I am updating my ballot for the changes that occurred in the latest version; thanks for those.] 3.2.1 says: \u00a0 \u00a0 \u00a0 A 1-5 MOS score is multiplied by 10 and then represented in the \u00a0 \u00a0 \u00a0 7:9 format. 3.2.2 says: \u00a0 \u00a0 \u00a0 The estimated MOS value is multiplied by 10 and expressed in 7:6 \u00a0 \u00a0 \u00a0 format. \u00a0 \u00a0  That seems like a recipe for an implementation mistake. First, it seems like putting 3-bits of padding in front of the one in 3.2.1 so that they can both be 7:6 would make it so that people wouldn't accidentally screw up the values. But I also don't understand why you want 7 bits of integer if the values are limited to 1-5; why not use 3:10? The authors claim in discussion that integer portion is larger because other ranges might be used (e.g., 0-11 or 1-100), but that seems completely non-interoperable. Shouldn't everything be scaled to a range of 1-5? Asking the implementation to multiply by 10 also seems unnecessary and a potential for interoperability failure (i.e., something that will accidentally not get done by an implementation). I understand this was done in 3611, but I presume that's because it was putting fractional values into an integer field and wanted to get at least 1 decimal place into the integer portion. You've got fixed-point here, so no need to do the multiply.",
        "type": "Discuss"
      },
      {
        "ad": "Pete Resnick",
        "end": "2014-02-26 07:35:28-08:00",
        "end_reason": "position_updated",
        "start": "2014-02-21 14:08:51-08:00",
        "text": "It sounds like we've made progress in the discussion. Updating my ballot to suit: 3.2.1 says: \u00a0 \u00a0 \u00a0 A 1-5 MOS score is multiplied by 10 and then represented in the \u00a0 \u00a0 \u00a0 7:9 format. 3.2.2 says: \u00a0 \u00a0 \u00a0 The estimated MOS value is multiplied by 10 and expressed in 7:6 \u00a0 \u00a0 \u00a0 format. \u00a0 \u00a0  That seems like a recipe for an implementation mistake. First, it seems like putting 3-bits of padding in front of the one in 3.2.1 so that they can both be 7:6 would make it so that people wouldn't accidentally screw up the values if they transferred between. If the WG is agreed that this is not a problem, I will simply clear. Asking the implementation to multiply by 10 also seems unnecessary and a potential for interoperability failure (i.e., something that will accidentally not get done by an implementation). I understand this was done in 3611, but I presume that's because it was putting fractional values into an integer field and wanted to get at least 1 decimal place into the integer portion. You've got fixed-point here, so no need to do the multiply. (It was also not clear where the range was coming from, but the authors explained that this was from the Calculation Algorithm.) So, I suggest in both cases: \u00a0 \u00a0 \u00a0 The estimated Mean Opinion Score (MOS) for multimedia application \u00a0 \u00a0 \u00a0 performance is defined as including the effects of delay, loss, \u00a0 \u00a0 \u00a0 discard, jitter and other effects that would affect media quality. \u00a0 \u00a0 \u00a0 This is a unsigned fixed-point 7:6 value representing the MOS, \u00a0 \u00a0 \u00a0 allowing scores up to 127 in the integer part. MOS ranges are \u00a0 \u00a0 \u00a0 defined as part of the specification of the MOS estimation \u00a0 \u00a0 \u00a0 algorithm (Calculation Algorithm in this document), and are \u00a0 \u00a0 \u00a0 normally ranges like 1-5, 0-10, or 0-100. Two values are reserved: \u00a0 \u00a0 \u00a0 A value of 0x1FFE indicates out of range and a value of 0x1FFF \u00a0 \u00a0 \u00a0 indicates that the measurement is unavailable. Values outside of \u00a0 \u00a0 \u00a0 the range defined by the Calculation Algorithm, other than the two \u00a0 \u00a0 \u00a0 reserved values, MUST NOT be sent and MUST be ignored by the \u00a0 \u00a0 \u00a0 receiving system. If you want 7:9 for 3.2.1, then you also need to change the reserved values to 0xFFFE and 0xFFFF.",
        "type": "Discuss"
      },
      {
        "ad": "Pete Resnick",
        "end": "2014-02-27 04:12:46-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-02-26 07:35:28-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Richard Barnes": [
      {
        "ad": "Richard Barnes",
        "end": "2014-02-05 16:08:16-08:00",
        "end_reason": "new_position",
        "start": "2014-01-21 07:20:58-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Richard Barnes",
        "end": "2014-02-27 04:12:46-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-02-05 16:08:16-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Sean Turner": [
      {
        "ad": "Sean Turner",
        "end": "2014-02-05 16:43:55-08:00",
        "end_reason": "new_position",
        "start": "2014-01-21 07:20:58-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Sean Turner",
        "end": "2014-02-27 04:12:46-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-02-05 16:43:55-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Spencer Dawkins": [
      {
        "ad": "Spencer Dawkins",
        "end": "2014-02-04 15:55:06-08:00",
        "end_reason": "new_position",
        "start": "2014-01-21 07:20:58-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Spencer Dawkins",
        "end": "2014-02-27 04:12:46-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-02-04 15:55:06-08:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Stephen Farrell": [
      {
        "ad": "Stephen Farrell",
        "end": "2014-02-06 04:23:13-08:00",
        "end_reason": "new_position",
        "start": "2014-01-21 07:20:58-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Stephen Farrell",
        "end": "2014-02-27 04:12:46-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-02-06 04:23:13-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Stewart Bryant": [
      {
        "ad": "Stewart Bryant",
        "end": "2014-02-05 07:44:46-08:00",
        "end_reason": "new_position",
        "start": "2014-01-21 07:20:58-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Stewart Bryant",
        "end": "2014-02-27 04:12:46-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-02-05 07:44:46-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Ted Lemon": [
      {
        "ad": "Ted Lemon",
        "end": "2014-02-06 06:14:45-08:00",
        "end_reason": "new_position",
        "start": "2014-01-21 07:20:58-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Ted Lemon",
        "end": "2014-02-13 08:43:54-08:00",
        "end_reason": "position_updated",
        "start": "2014-02-06 06:14:45-08:00",
        "text": "In section 4.2, third paragraph (not counting bullet items above it): \u00a0  Segment extensions, with their directions, MAY be signaled for an \u00a0  \"inactive\" stream.\u00a0 It is an error to use an extension direction \u00a0  incompatible with the stream direction (e.g., a \"sendonly\" attribute \u00a0  for a \"recvonly\" stream). How is this error handled?\u00a0  You an address this DISCUSS point by adding text that says how, or pointing out why it isn't a problem.",
        "type": "Discuss"
      },
      {
        "ad": "Ted Lemon",
        "end": "2014-02-27 04:12:46-08:00",
        "end_reason": "evaluation_closed",
        "start": "2014-02-13 08:43:54-08:00",
        "text": null,
        "type": "No Objection"
      }
    ]
  },
  "doc_name": "rfc7266",
  "evaluation_end": "2014-02-27 04:12:46-08:00",
  "evaluation_start": "2014-01-21 07:20:58-08:00"
}