{
  "all_ballots": {
    "Adam Roach": [
      {
        "ad": "Adam Roach",
        "end": "2020-01-08 16:19:22-08:00",
        "end_reason": "new_position",
        "start": "2020-01-02 10:22:48-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Adam Roach",
        "end": "2020-03-19 11:45:26-07:00",
        "end_reason": "evaluation_closed",
        "start": "2020-01-08 16:19:22-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Alexey Melnikov": [
      {
        "ad": "Alexey Melnikov",
        "end": "2020-01-02 10:22:49-08:00",
        "end_reason": "new_position",
        "start": "2020-01-02 10:22:48-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alexey Melnikov",
        "end": "2020-03-19 11:45:26-07:00",
        "end_reason": "evaluation_closed",
        "start": "2020-01-02 10:22:49-08:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Alissa Cooper": [
      {
        "ad": "Alissa Cooper",
        "end": "2020-01-06 10:40:50-08:00",
        "end_reason": "new_position",
        "start": "2020-01-02 10:22:48-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alissa Cooper",
        "end": "2020-02-07 06:45:32-08:00",
        "end_reason": "position_updated",
        "start": "2020-01-06 10:40:50-08:00",
        "text": "If I understand correctly, in JMAP transport confidentiality is required to use for requests and in WebSocket it is required to implement but not required to use. Which set of requirements applies to the binding specified in this document?",
        "type": "Discuss"
      },
      {
        "ad": "Alissa Cooper",
        "end": "2020-03-19 11:45:26-07:00",
        "end_reason": "evaluation_closed",
        "start": "2020-02-07 06:45:32-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Alvaro Retana": [
      {
        "ad": "Alvaro Retana",
        "end": "2020-01-08 13:14:56-08:00",
        "end_reason": "new_position",
        "start": "2020-01-02 10:22:48-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alvaro Retana",
        "end": "2020-03-19 11:45:26-07:00",
        "end_reason": "evaluation_closed",
        "start": "2020-01-08 13:14:56-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Barry Leiba": [
      {
        "ad": "Barry Leiba",
        "end": "2020-01-07 20:50:43-08:00",
        "end_reason": "new_position",
        "start": "2020-01-02 10:22:48-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Barry Leiba",
        "end": "2020-03-19 11:45:26-07:00",
        "end_reason": "evaluation_closed",
        "start": "2020-01-07 20:50:43-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Benjamin Kaduk": [
      {
        "ad": "Benjamin Kaduk",
        "end": "2020-01-07 13:08:25-08:00",
        "end_reason": "new_position",
        "start": "2020-01-02 10:22:48-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Benjamin Kaduk",
        "end": "2020-02-17 16:23:48-08:00",
        "end_reason": "position_updated",
        "start": "2020-01-07 13:08:25-08:00",
        "text": "I support Alissa's Discuss and suggest an approach of making a definitive statement about \"wss://\" usage, akin to  RFC 8620 's \"All HTTP requests MUST use the 'https://' scheme\". I don't understand how adding a \"pushState\" value to the StateChange object (Section 4.2.4.1) that reflects the state of \"ALL of the data types in the account\" can work, if the regular StateChange and notification flows are not tied to a specific account (and in fact the example in Section 7.1.1 of  RFC 8620  includes state changes about multiple accounts in a single StateChange) but rather the authentication credentials.",
        "type": "Discuss"
      },
      {
        "ad": "Benjamin Kaduk",
        "end": "2020-03-19 11:45:26-07:00",
        "end_reason": "evaluation_closed",
        "start": "2020-02-17 16:23:48-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Deborah Brungard": [
      {
        "ad": "Deborah Brungard",
        "end": "2020-01-07 13:45:00-08:00",
        "end_reason": "new_position",
        "start": "2020-01-02 10:22:48-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Deborah Brungard",
        "end": "2020-03-19 11:45:26-07:00",
        "end_reason": "evaluation_closed",
        "start": "2020-01-07 13:45:00-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Eric Vyncke": [
      {
        "ad": "Eric Vyncke",
        "end": "2020-01-03 05:16:58-08:00",
        "end_reason": "new_position",
        "start": "2020-01-02 10:22:48-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Eric Vyncke",
        "end": "2020-03-19 11:45:26-07:00",
        "end_reason": "evaluation_closed",
        "start": "2020-01-03 05:16:58-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Ignas Bagdonas": [
      {
        "ad": "Ignas Bagdonas",
        "end": "2020-03-19 11:45:26-07:00",
        "end_reason": "evaluation_closed",
        "start": "2020-01-02 10:22:48-08:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Magnus Westerlund": [
      {
        "ad": "Magnus Westerlund",
        "end": "2020-03-19 11:45:26-07:00",
        "end_reason": "evaluation_closed",
        "start": "2020-01-02 10:22:48-08:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Martin Vigoureux": [
      {
        "ad": "Martin Vigoureux",
        "end": "2020-01-08 04:54:40-08:00",
        "end_reason": "new_position",
        "start": "2020-01-02 10:22:48-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Martin Vigoureux",
        "end": "2020-03-19 11:45:26-07:00",
        "end_reason": "evaluation_closed",
        "start": "2020-01-08 04:54:40-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Mirja Kuhlewind": [
      {
        "ad": "Mirja Kuhlewind",
        "end": "2020-01-06 09:14:18-08:00",
        "end_reason": "new_position",
        "start": "2020-01-02 10:22:48-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Mirja Kuhlewind",
        "end": "2020-03-19 11:45:26-07:00",
        "end_reason": "evaluation_closed",
        "start": "2020-01-06 09:14:18-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Roman Danyliw": [
      {
        "ad": "Roman Danyliw",
        "end": "2020-01-08 09:54:14-08:00",
        "end_reason": "new_position",
        "start": "2020-01-02 10:22:48-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Roman Danyliw",
        "end": "2020-03-19 11:45:26-07:00",
        "end_reason": "evaluation_closed",
        "start": "2020-01-08 09:54:14-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Suresh Krishnan": [
      {
        "ad": "Suresh Krishnan",
        "end": "2020-01-07 20:07:16-08:00",
        "end_reason": "new_position",
        "start": "2020-01-02 10:22:48-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Suresh Krishnan",
        "end": "2020-03-19 11:45:26-07:00",
        "end_reason": "evaluation_closed",
        "start": "2020-01-07 20:07:16-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Warren Kumari": [
      {
        "ad": "Warren Kumari",
        "end": "2020-03-19 11:45:26-07:00",
        "end_reason": "evaluation_closed",
        "start": "2020-01-02 10:22:48-08:00",
        "text": null,
        "type": "No Record"
      }
    ]
  },
  "doc_name": "rfc8887",
  "evaluation_end": "2020-03-19 11:45:26-07:00",
  "evaluation_start": "2020-01-02 10:22:48-08:00"
}