{
  "all_ballots": {
    "Alexey Melnikov": [
      {
        "ad": "Alexey Melnikov",
        "end": "2016-04-07 04:30:42-07:00",
        "end_reason": "new_position",
        "start": "2016-04-03 00:00:00+00:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alexey Melnikov",
        "end": "2016-05-25 11:37:43-07:00",
        "end_reason": "evaluation_closed",
        "start": "2016-04-07 04:30:42-07:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Alia Atlas": [
      {
        "ad": "Alia Atlas",
        "end": "2016-05-25 11:37:43-07:00",
        "end_reason": "evaluation_closed",
        "start": "2016-03-21 11:40:10-07:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Alissa Cooper": [
      {
        "ad": "Alissa Cooper",
        "end": "2016-04-19 10:50:25-07:00",
        "end_reason": "new_position",
        "start": "2016-03-21 11:40:10-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alissa Cooper",
        "end": "2016-05-25 11:37:43-07:00",
        "end_reason": "evaluation_closed",
        "start": "2016-04-19 10:50:25-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Alvaro Retana": [
      {
        "ad": "Alvaro Retana",
        "end": "2016-04-19 13:33:25-07:00",
        "end_reason": "new_position",
        "start": "2016-03-21 11:40:10-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alvaro Retana",
        "end": "2016-05-25 11:37:43-07:00",
        "end_reason": "evaluation_closed",
        "start": "2016-04-19 13:33:25-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Barry Leiba": [
      {
        "ad": "Barry Leiba",
        "end": "2016-03-21 11:40:12-07:00",
        "end_reason": "new_position",
        "start": "2016-03-21 11:40:10-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Barry Leiba",
        "end": "2016-04-08 00:00:00+00:00",
        "end_reason": "ad_term_ended",
        "start": "2016-03-21 11:40:12-07:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Ben Campbell": [
      {
        "ad": "Ben Campbell",
        "end": "2016-04-19 18:37:27-07:00",
        "end_reason": "new_position",
        "start": "2016-03-21 11:40:10-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Ben Campbell",
        "end": "2016-05-25 11:37:43-07:00",
        "end_reason": "evaluation_closed",
        "start": "2016-04-19 18:37:27-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Benoit Claise": [
      {
        "ad": "Benoit Claise",
        "end": "2016-04-21 03:10:05-07:00",
        "end_reason": "new_position",
        "start": "2016-03-21 11:40:10-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Benoit Claise",
        "end": "2016-05-25 11:37:43-07:00",
        "end_reason": "evaluation_closed",
        "start": "2016-04-21 03:10:05-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Brian Haberman": [
      {
        "ad": "Brian Haberman",
        "end": "2016-04-08 00:00:00+00:00",
        "end_reason": "ad_term_ended",
        "start": "2016-03-21 11:40:10-07:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Deborah Brungard": [
      {
        "ad": "Deborah Brungard",
        "end": "2016-04-20 09:45:46-07:00",
        "end_reason": "new_position",
        "start": "2016-03-21 11:40:10-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Deborah Brungard",
        "end": "2016-05-25 11:37:43-07:00",
        "end_reason": "evaluation_closed",
        "start": "2016-04-20 09:45:46-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Jari Arkko": [
      {
        "ad": "Jari Arkko",
        "end": "2016-04-20 22:07:02-07:00",
        "end_reason": "new_position",
        "start": "2016-03-21 11:40:10-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Jari Arkko",
        "end": "2016-05-25 11:37:43-07:00",
        "end_reason": "evaluation_closed",
        "start": "2016-04-20 22:07:02-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Joel Jaeggli": [
      {
        "ad": "Joel Jaeggli",
        "end": "2016-04-18 20:53:43-07:00",
        "end_reason": "new_position",
        "start": "2016-03-21 11:40:10-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Joel Jaeggli",
        "end": "2016-05-25 11:37:43-07:00",
        "end_reason": "evaluation_closed",
        "start": "2016-04-18 20:53:43-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Kathleen Moriarty": [
      {
        "ad": "Kathleen Moriarty",
        "end": "2016-04-20 11:06:16-07:00",
        "end_reason": "new_position",
        "start": "2016-03-21 11:40:10-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Kathleen Moriarty",
        "end": "2016-05-25 11:37:43-07:00",
        "end_reason": "evaluation_closed",
        "start": "2016-04-20 11:06:16-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Martin Stiemerling": [
      {
        "ad": "Martin Stiemerling",
        "end": "2016-04-08 00:00:00+00:00",
        "end_reason": "ad_term_ended",
        "start": "2016-03-21 11:40:10-07:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Mirja Kuhlewind": [
      {
        "ad": "Mirja Kuhlewind",
        "end": "2016-04-20 07:14:49-07:00",
        "end_reason": "new_position",
        "start": "2016-04-03 00:00:00+00:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Mirja Kuhlewind",
        "end": "2016-05-25 11:37:43-07:00",
        "end_reason": "evaluation_closed",
        "start": "2016-04-20 07:14:49-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Spencer Dawkins": [
      {
        "ad": "Spencer Dawkins",
        "end": "2016-05-25 11:37:43-07:00",
        "end_reason": "evaluation_closed",
        "start": "2016-03-21 11:40:10-07:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Stephen Farrell": [
      {
        "ad": "Stephen Farrell",
        "end": "2016-04-21 03:23:54-07:00",
        "end_reason": "new_position",
        "start": "2016-03-21 11:40:10-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Stephen Farrell",
        "end": "2016-05-16 05:31:24-07:00",
        "end_reason": "discuss_updated",
        "start": "2016-04-21 03:23:54-07:00",
        "text": "This spec is tackling a hard problem, (machines doing what humans do to classify identifiers), and as a result there are some tricky bits here. That inherently hard problem has thrown up a few things I'd like to discuss (though the 1st one is easy:-)... (1) section 5: this says code points MUST be 4 hex digits. What is s/w supposed to do if it sees only 2 hex digits? Should it ignore the range or char element or fail to process the entire LGR document? I think the same issue applies to other uses of 2119 language as well, (e.g. \"MUST be treated as an error at the end of p19), so I'd recommend you state some kind of general rule if you can. (2) 5.2: when and not-when etc seem to me to allow for infinitely baroque representations of useless things like:      \t\t200D             What is parsing s/w supposed to do with structures like that? For example, how would you handle the likes of this or more convoluted but equivalent structures which could be delivered by accident or deliberately?\u00a0 I think the response to this discuss point needs to either be a) all such constructs are automatically detectable and here's why, or else b) here's how s/w can handle that (without crashing or looping forever). Note that I don't think that the \"MUST be rejected\" at the end of 6.1 provides an answer to this point.\u00a0 (But if you do, please argue that.) (3) 6.3.4: While recursion is said to be disallowed, the \"for which the complete definition has not been seen\" is pretty odd for an XML specification, as it means that you need a full ordering for the elements in the document (or at least within the\u00a0 element).\u00a0 That means if some editor decodes from disk and then encodes to disk, you need to be sure that the order is preserved or else you break the \"has been seen\" constraint. (And if you do that, then you're allowing rules to mutually refer to one another, which brings us back to discuss point 2.) 7.4 maybe has a similar issue. I think for this you could simply state up front that these XML documents MUST NOT be re-ordered during editing. (Or else add some kind of attribute to help with ordering which seems ickky.) (4) section 12: I don't think this is at all sufficient. Missing aspects include: Imprecise LGRs could result in registration of identifiers that are unexpected in many other protocols, leading to new vulnerabilities; LGRs could be deliberately manipulated so as to create such imprecision, and if I could feed one such to a registry (e.g. via some nice friendly looking git repo) then I could exploit the vuln later for fun and profit - that seems to call for some interoperable form of data integrity and origin authentication (is the lager WG doing that?) and lastly (for now), the XML language defined here is very flexible as noted earlier - I would expect there to be many implementation bugs in new code that attempts to parse this language. So I think the security considerations needs to be re-done really.",
        "type": "Discuss"
      },
      {
        "ad": "Stephen Farrell",
        "end": "2016-05-23 12:46:27-07:00",
        "end_reason": "position_updated",
        "start": "2016-05-16 05:31:24-07:00",
        "text": "Thanks for the changes in -12. I think we're down to one remaining item to discuss. I'll follow up on the earlier email where you answered directly to this point. (4) section 12: I don't think this is at all sufficient. Missing aspects include: Imprecise LGRs could result in registration of identifiers that are unexpected in many other protocols, leading to new vulnerabilities; LGRs could be deliberately manipulated so as to create such imprecision, and if I could feed one such to a registry (e.g. via some nice friendly looking git repo) then I could exploit the vuln later for fun and profit - that seems to call for some interoperable form of data integrity and origin authentication (is the lager WG doing that?) and lastly (for now), the XML language defined here is very flexible as noted earlier - I would expect there to be many implementation bugs in new code that attempts to parse this language. So I think the security considerations needs to be re-done really.",
        "type": "Discuss"
      },
      {
        "ad": "Stephen Farrell",
        "end": "2016-05-25 11:37:43-07:00",
        "end_reason": "evaluation_closed",
        "start": "2016-05-23 12:46:27-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Suresh Krishnan": [
      {
        "ad": "Suresh Krishnan",
        "end": "2016-04-20 20:39:21-07:00",
        "end_reason": "new_position",
        "start": "2016-04-03 00:00:00+00:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Suresh Krishnan",
        "end": "2016-05-25 11:37:43-07:00",
        "end_reason": "evaluation_closed",
        "start": "2016-04-20 20:39:21-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Terry Manderson": [
      {
        "ad": "Terry Manderson",
        "end": "2016-04-19 17:58:05-07:00",
        "end_reason": "new_position",
        "start": "2016-03-21 11:40:10-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Terry Manderson",
        "end": "2016-05-25 11:37:43-07:00",
        "end_reason": "evaluation_closed",
        "start": "2016-04-19 17:58:05-07:00",
        "text": null,
        "type": "No Objection"
      }
    ]
  },
  "doc_name": "rfc7940",
  "evaluation_end": "2016-05-25 11:37:43-07:00",
  "evaluation_start": "2016-03-21 11:40:10-07:00"
}