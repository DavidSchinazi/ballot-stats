{
  "all_ballots": {
    "Adrian Farrel": [
      {
        "ad": "Adrian Farrel",
        "end": "2013-09-11 23:29:44-07:00",
        "end_reason": "new_position",
        "start": "2013-09-07 06:27:34-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Adrian Farrel",
        "end": "2013-09-30 10:41:32-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-09-11 23:29:44-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Barry Leiba": [
      {
        "ad": "Barry Leiba",
        "end": "2013-09-10 22:27:22-07:00",
        "end_reason": "new_position",
        "start": "2013-09-07 06:27:34-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Barry Leiba",
        "end": "2013-09-11 10:06:47-07:00",
        "end_reason": "discuss_updated",
        "start": "2013-09-10 22:27:22-07:00",
        "text": "Three points, if you please: 1. An extremely easy one: the media type registration uses an obsolete email addres for Murray's contact info. 2. A harder one:  RFC 4627  says that the names within a JSON object SHOULD be unique.\u00a0 Yet this explicitly defines a setup wherein a reputation object contains multiple reputons, all of which have the same name, \"reputon\".\u00a0 Why is that a good design? 3. You specify information to be included with a registration request, but not the information that will actually be in the registry table.\u00a0 As the policy for the registry is Specification required, I suggest that you make it clear that the information you're asking for has to be clearly documented in the specification, and that you limit the actual registry to a minimum of information -- a name and reference, and maybe a short description.\u00a0 That avoids an awkward and cluttered registry, and also avoids duplicatin of information in the registry that's already in the specification.\u00a0 The actual registry information needs to be specified in the document, so IANA knows what to do.",
        "type": "Discuss"
      },
      {
        "ad": "Barry Leiba",
        "end": "2013-09-11 10:09:40-07:00",
        "end_reason": "discuss_updated",
        "start": "2013-09-11 10:06:47-07:00",
        "text": "Three points, if you please (UPDATED): 1.  RFC 4627  says that the names within a JSON object SHOULD be unique.\u00a0 Yet this explicitly defines a setup wherein a reputation object contains multiple reputons, all of which have the same name, \"reputon\".\u00a0 Why is that a good design?\u00a0 Perhaps just make the reputation object be an array, where each reputon is an element of the array? 2. You specify information to be included with a registration request, but not the information that will actually be in the registry table.\u00a0 As the policy for the registry is Specification required, I suggest that you make it clear that the information you're asking for has to be clearly documented in the specification, and that you limit the actual registry to a minimum of information -- maybe the first four items: name, description, reference, status.\u00a0 That avoids an awkward and cluttered registry, and also avoids duplicatin of information in the registry that's already in the specification.\u00a0 The actual registry information needs to be specified in the document, so IANA knows what to do. 3. Specification Required implies Expert Review, so you need to give instructions to the designated expert.\u00a0 As part of that, you should say what the DE should consider when reviewing.\u00a0 You can also say that no DE review is necessary if the specification is in an IETF consensus RFC.\u00a0 (Alternatively on that last point, you can explicitly designate the policy as \"Specification Required or IETF Review.)\u00a0 If you want expert review *even* for IETF consensus documents, it would be good to say that explicitly.",
        "type": "Discuss"
      },
      {
        "ad": "Barry Leiba",
        "end": "2013-09-15 16:08:53-07:00",
        "end_reason": "position_updated",
        "start": "2013-09-11 10:09:40-07:00",
        "text": "Three points, if you please (UPDATED): 1.  RFC 4627  says that the names within a JSON object SHOULD be unique.\u00a0 Yet this explicitly defines a setup wherein a reputation object contains multiple reputons, all of which have the same name, \"reputon\".\u00a0 Why is that a good design?\u00a0 Perhaps just make the reputation object be an array, where each reputon is an element of the array? 2. You specify information to be included with a registration request, but not the information that will actually be in the registry table.\u00a0 As the policy for the registry is Specification required, I suggest that you make it clear that the information you're asking for has to be clearly documented in the specification, and that you limit the actual registry to a minimum of information -- maybe the first four items: name, description, reference, status.\u00a0 That avoids an awkward and cluttered registry, and also avoids duplicatin of information in the registry that's already in the specification.\u00a0 The actual registry information needs to be specified in the document, so IANA knows what to do. 3. Specification Required implies Expert Review, so you need to give instructions to the designated expert.\u00a0 As part of that, you should say what the DE should consider when reviewing.\u00a0 You can also say that no DE review is necessary if the specification is in an IETF consensus RFC.\u00a0 (Alternatively on that last point, you can explicitly designate the policy as \"Specification Required or IETF Review\".)\u00a0 If you want expert review *even* for IETF consensus documents, it would be good to say that explicitly.",
        "type": "Discuss"
      },
      {
        "ad": "Barry Leiba",
        "end": "2013-09-30 10:41:32-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-09-15 16:08:53-07:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Benoit Claise": [
      {
        "ad": "Benoit Claise",
        "end": "2013-09-09 13:38:28-07:00",
        "end_reason": "new_position",
        "start": "2013-09-07 06:27:34-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Benoit Claise",
        "end": "2013-09-30 10:41:32-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-09-09 13:38:28-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Brian Haberman": [
      {
        "ad": "Brian Haberman",
        "end": "2013-09-10 05:34:19-07:00",
        "end_reason": "new_position",
        "start": "2013-09-07 06:27:34-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Brian Haberman",
        "end": "2013-09-30 10:41:32-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-09-10 05:34:19-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Gonzalo Camarillo": [
      {
        "ad": "Gonzalo Camarillo",
        "end": "2013-09-12 05:00:18-07:00",
        "end_reason": "new_position",
        "start": "2013-09-07 06:27:34-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Gonzalo Camarillo",
        "end": "2013-09-30 10:41:32-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-09-12 05:00:18-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Jari Arkko": [
      {
        "ad": "Jari Arkko",
        "end": "2013-09-11 04:07:53-07:00",
        "end_reason": "new_position",
        "start": "2013-09-07 06:27:34-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Jari Arkko",
        "end": "2013-09-30 10:41:32-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-09-11 04:07:53-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Joel Jaeggli": [
      {
        "ad": "Joel Jaeggli",
        "end": "2013-09-08 22:53:01-07:00",
        "end_reason": "new_position",
        "start": "2013-09-07 06:27:34-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Joel Jaeggli",
        "end": "2013-09-30 10:41:32-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-09-08 22:53:01-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Martin Stiemerling": [
      {
        "ad": "Martin Stiemerling",
        "end": "2013-09-09 02:24:00-07:00",
        "end_reason": "new_position",
        "start": "2013-09-07 06:27:34-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Martin Stiemerling",
        "end": "2013-09-30 10:41:32-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-09-09 02:24:00-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Pete Resnick": [
      {
        "ad": "Pete Resnick",
        "end": "2013-09-07 06:27:34-07:00",
        "end_reason": "new_position",
        "start": "2013-09-07 06:27:34-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Pete Resnick",
        "end": "2013-09-30 10:41:32-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-09-07 06:27:34-07:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Richard Barnes": [
      {
        "ad": "Richard Barnes",
        "end": "2013-09-11 20:38:14-07:00",
        "end_reason": "new_position",
        "start": "2013-09-07 06:27:34-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Richard Barnes",
        "end": "2013-09-30 10:41:32-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-09-11 20:38:14-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Sean Turner": [
      {
        "ad": "Sean Turner",
        "end": "2013-09-11 10:42:58-07:00",
        "end_reason": "new_position",
        "start": "2013-09-07 06:27:34-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Sean Turner",
        "end": "2013-09-30 10:41:32-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-09-11 10:42:58-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Spencer Dawkins": [
      {
        "ad": "Spencer Dawkins",
        "end": "2013-09-07 12:31:20-07:00",
        "end_reason": "new_position",
        "start": "2013-09-07 06:27:34-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Spencer Dawkins",
        "end": "2013-09-30 10:41:32-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-09-07 12:31:20-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Stephen Farrell": [
      {
        "ad": "Stephen Farrell",
        "end": "2013-09-09 18:08:44-07:00",
        "end_reason": "new_position",
        "start": "2013-09-07 06:27:34-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Stephen Farrell",
        "end": "2013-09-30 10:41:32-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-09-09 18:08:44-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Stewart Bryant": [
      {
        "ad": "Stewart Bryant",
        "end": "2013-09-10 03:43:29-07:00",
        "end_reason": "new_position",
        "start": "2013-09-07 06:27:34-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Stewart Bryant",
        "end": "2013-09-30 10:41:32-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-09-10 03:43:29-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Ted Lemon": [
      {
        "ad": "Ted Lemon",
        "end": "2013-09-10 11:53:52-07:00",
        "end_reason": "new_position",
        "start": "2013-09-07 06:27:34-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Ted Lemon",
        "end": "2013-09-30 10:41:32-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-09-10 11:53:52-07:00",
        "text": null,
        "type": "No Objection"
      }
    ]
  },
  "doc_name": "rfc7071",
  "evaluation_end": "2013-09-30 10:41:32-07:00",
  "evaluation_start": "2013-09-07 06:27:34-07:00"
}