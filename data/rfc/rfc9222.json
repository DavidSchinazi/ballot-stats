{
  "all_ballots": {
    "Alvaro Retana": [
      {
        "ad": "Alvaro Retana",
        "end": "2022-01-17 11:36:59-08:00",
        "end_reason": "new_position",
        "start": "2022-01-07 03:14:17-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alvaro Retana",
        "end": "2022-02-07 07:49:57-08:00",
        "end_reason": "evaluation_closed",
        "start": "2022-01-17 11:36:59-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Benjamin Kaduk": [
      {
        "ad": "Benjamin Kaduk",
        "end": "2022-01-19 15:14:10-08:00",
        "end_reason": "new_position",
        "start": "2022-01-07 03:14:17-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Benjamin Kaduk",
        "end": "2022-01-19 15:14:35-08:00",
        "end_reason": "discuss_updated",
        "start": "2022-01-19 15:14:10-08:00",
        "text": "It looks like the indentation in the example MAIN PROGRAM in Appendix C is incorrect, or at least confusing, in the \"do forever\" loop therein. Specifically, assuming semantic whitespace as in Python, we never actually perform grasp negotiation for the \"good_peer in peers\" case. Additionally, I think we may have a risk of getting stuck in a loop making no progress so long as good_peer remains in the set of discovered peers but does not have enough resources available for our request/negotiation to succeed.\u00a0 I think we want to clear out good_peer if a negotiation fails to avoid that scenario.",
        "type": "Discuss"
      },
      {
        "ad": "Benjamin Kaduk",
        "end": "2022-01-26 19:48:07-08:00",
        "end_reason": "position_updated",
        "start": "2022-01-19 15:14:35-08:00",
        "text": "It looks like the indentation in the example MAIN PROGRAM in Appendix C is incorrect, or at least confusing, in the \"do forever\" loop therein. Specifically, assuming semantic whitespace as in Python, we never actually perform grasp negotiation for the \"good_peer in peers\" case. Additionally, I think we may have a risk of getting stuck in a loop making no progress so long as good_peer remains in the set of discovered peers but does not have enough resources available for our request/negotiation to succeed.\u00a0 I think we want to clear out good_peer if a negotiation fails, to avoid that scenario.",
        "type": "Discuss"
      },
      {
        "ad": "Benjamin Kaduk",
        "end": "2022-02-07 07:49:57-08:00",
        "end_reason": "evaluation_closed",
        "start": "2022-01-26 19:48:07-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Eric Vyncke": [
      {
        "ad": "Eric Vyncke",
        "end": "2022-01-18 09:02:03-08:00",
        "end_reason": "new_position",
        "start": "2022-01-07 03:14:17-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Eric Vyncke",
        "end": "2022-02-07 07:49:57-08:00",
        "end_reason": "evaluation_closed",
        "start": "2022-01-18 09:02:03-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Erik Kline": [
      {
        "ad": "Erik Kline",
        "end": "2022-01-17 20:27:48-08:00",
        "end_reason": "new_position",
        "start": "2022-01-07 03:14:17-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Erik Kline",
        "end": "2022-02-07 07:49:57-08:00",
        "end_reason": "evaluation_closed",
        "start": "2022-01-17 20:27:48-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Francesca Palombini": [
      {
        "ad": "Francesca Palombini",
        "end": "2022-01-19 15:13:44-08:00",
        "end_reason": "new_position",
        "start": "2022-01-07 03:14:17-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Francesca Palombini",
        "end": "2022-02-07 07:49:57-08:00",
        "end_reason": "evaluation_closed",
        "start": "2022-01-19 15:13:44-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "John Scudder": [
      {
        "ad": "John Scudder",
        "end": "2022-01-17 13:46:24-08:00",
        "end_reason": "new_position",
        "start": "2022-01-07 03:14:17-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "John Scudder",
        "end": "2022-02-07 07:49:57-08:00",
        "end_reason": "evaluation_closed",
        "start": "2022-01-17 13:46:24-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Lars Eggert": [
      {
        "ad": "Lars Eggert",
        "end": "2022-01-20 05:26:11-08:00",
        "end_reason": "new_position",
        "start": "2022-01-07 03:14:17-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Lars Eggert",
        "end": "2022-02-07 07:49:57-08:00",
        "end_reason": "evaluation_closed",
        "start": "2022-01-20 05:26:11-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Martin Duke": [
      {
        "ad": "Martin Duke",
        "end": "2022-01-18 10:51:17-08:00",
        "end_reason": "new_position",
        "start": "2022-01-07 03:14:17-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Martin Duke",
        "end": "2022-02-07 07:49:57-08:00",
        "end_reason": "evaluation_closed",
        "start": "2022-01-18 10:51:17-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Martin Vigoureux": [
      {
        "ad": "Martin Vigoureux",
        "end": "2022-02-07 07:49:57-08:00",
        "end_reason": "evaluation_closed",
        "start": "2022-01-07 03:14:17-08:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Murray Kucherawy": [
      {
        "ad": "Murray Kucherawy",
        "end": "2022-01-20 00:24:24-08:00",
        "end_reason": "new_position",
        "start": "2022-01-07 03:14:17-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Murray Kucherawy",
        "end": "2022-02-07 07:49:57-08:00",
        "end_reason": "evaluation_closed",
        "start": "2022-01-20 00:24:24-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Robert Wilton": [
      {
        "ad": "Robert Wilton",
        "end": "2022-01-07 03:14:18-08:00",
        "end_reason": "new_position",
        "start": "2022-01-07 03:14:17-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Robert Wilton",
        "end": "2022-02-07 07:49:57-08:00",
        "end_reason": "evaluation_closed",
        "start": "2022-01-07 03:14:18-08:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Roman Danyliw": [
      {
        "ad": "Roman Danyliw",
        "end": "2022-01-18 18:13:53-08:00",
        "end_reason": "new_position",
        "start": "2022-01-07 03:14:17-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Roman Danyliw",
        "end": "2022-01-27 05:05:26-08:00",
        "end_reason": "position_updated",
        "start": "2022-01-18 18:13:53-08:00",
        "text": "** Section 3.1 and 3.2.  (a) (Section 3.1) \u201c\u2026 the secure bootstrap process itself may include special-purpose ASAs that run in a constrained insecure mode.\u201d,  (b) (Section 3.2) \u201c \u2026 the ACP formation process itself may include special-purpose ASAs that run in a constrained insecure mode.\u201d What is meant by \u201cspecial-purpose\u201d (i.e., how is that different than an ASA that isn\u2019t special purpose) and what are the security properties of a \u201cconstrained insecure mode\u201d?\u00a0 Is this text saying that the secure bootstrapping and ACP formation might not always be done securely? (b) reads like it could be DULL-GRAP (Section 2.5.2 of  draft-ietf-anima-grasp ) but it isn\u2019t clear.",
        "type": "Discuss"
      },
      {
        "ad": "Roman Danyliw",
        "end": "2022-02-07 07:49:57-08:00",
        "end_reason": "evaluation_closed",
        "start": "2022-01-27 05:05:26-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Warren Kumari": [
      {
        "ad": "Warren Kumari",
        "end": "2022-01-17 07:15:47-08:00",
        "end_reason": "new_position",
        "start": "2022-01-07 03:14:17-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Warren Kumari",
        "end": "2022-02-07 07:49:57-08:00",
        "end_reason": "evaluation_closed",
        "start": "2022-01-17 07:15:47-08:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Zaheduzzaman Sarker": [
      {
        "ad": "Zaheduzzaman Sarker",
        "end": "2022-01-18 01:36:33-08:00",
        "end_reason": "new_position",
        "start": "2022-01-07 03:14:17-08:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Zaheduzzaman Sarker",
        "end": "2022-02-07 07:49:57-08:00",
        "end_reason": "evaluation_closed",
        "start": "2022-01-18 01:36:33-08:00",
        "text": null,
        "type": "No Objection"
      }
    ]
  },
  "doc_name": "rfc9222",
  "evaluation_end": "2022-02-07 07:49:57-08:00",
  "evaluation_start": "2022-01-07 03:14:17-08:00"
}