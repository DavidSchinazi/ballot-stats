{
  "all_ballots": {
    "Adrian Farrel": [
      {
        "ad": "Adrian Farrel",
        "end": "2013-08-14 08:32:48-07:00",
        "end_reason": "new_position",
        "start": "2013-08-12 06:30:10-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Adrian Farrel",
        "end": "2013-08-28 06:11:41-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-08-14 08:32:48-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Barry Leiba": [
      {
        "ad": "Barry Leiba",
        "end": "2013-08-12 06:30:10-07:00",
        "end_reason": "new_position",
        "start": "2013-08-12 06:30:10-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Barry Leiba",
        "end": "2013-08-28 06:11:41-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-08-12 06:30:10-07:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Benoit Claise": [
      {
        "ad": "Benoit Claise",
        "end": "2013-08-28 06:11:41-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-08-12 06:30:10-07:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Brian Haberman": [
      {
        "ad": "Brian Haberman",
        "end": "2013-08-12 07:16:45-07:00",
        "end_reason": "new_position",
        "start": "2013-08-12 06:30:10-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Brian Haberman",
        "end": "2013-08-28 06:11:41-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-08-12 07:16:45-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Gonzalo Camarillo": [
      {
        "ad": "Gonzalo Camarillo",
        "end": "2013-08-28 06:11:41-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-08-12 06:30:10-07:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Jari Arkko": [
      {
        "ad": "Jari Arkko",
        "end": "2013-08-13 12:52:31-07:00",
        "end_reason": "new_position",
        "start": "2013-08-12 06:30:10-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Jari Arkko",
        "end": "2013-08-28 06:11:41-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-08-13 12:52:31-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Joel Jaeggli": [
      {
        "ad": "Joel Jaeggli",
        "end": "2013-08-14 20:41:52-07:00",
        "end_reason": "new_position",
        "start": "2013-08-12 06:30:10-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Joel Jaeggli",
        "end": "2013-08-28 06:11:41-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-08-14 20:41:52-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Martin Stiemerling": [
      {
        "ad": "Martin Stiemerling",
        "end": "2013-08-28 06:11:41-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-08-12 06:30:10-07:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Pete Resnick": [
      {
        "ad": "Pete Resnick",
        "end": "2013-08-14 15:12:47-07:00",
        "end_reason": "new_position",
        "start": "2013-08-12 06:30:10-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Pete Resnick",
        "end": "2013-08-28 06:11:41-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-08-14 15:12:47-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Richard Barnes": [
      {
        "ad": "Richard Barnes",
        "end": "2013-08-14 18:39:49-07:00",
        "end_reason": "new_position",
        "start": "2013-08-12 06:30:10-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Richard Barnes",
        "end": "2013-08-19 06:49:56-07:00",
        "end_reason": "discuss_updated",
        "start": "2013-08-14 18:39:49-07:00",
        "text": "(D1) The privacy considerations make no sense to me.\u00a0 To whom is data being leaked?\u00a0 To the browser?\u00a0 To random people who send a request to a URI?\u00a0 Do you mean that X-Frame-Options leaks information about who the site authorizes?\u00a0 That's true, but also true of things like CORS.\u00a0 If this is the concern, you should recommend a mitigation that's basically the same as what CORS does, namely varying the value of X-Frame-Options based on the Referer or Origin header. (D2) It seems like this is a value that browsers might cache, to avoid unnecessary requests if the same page is framed in the future.\u00a0 If this is something browsers do today, please say so.\u00a0  (D3) Shouldn't ALLOW-FROM be followed by an origin, not a URI?\u00a0 In other words, what does it mean to send \"X-Frame-Options: ALLOW-FROM  https://example.com/this/is/a/path?query#fragment \"?\u00a0  (D3) In the ALLOW-FROM: what does \"top level context\" mean?\u00a0 Do you really mean the top level here, as opposed to the next one up?\u00a0 For example, suppose A loads B in an iframe, and B loads C, and then C sends an X-Frame-Options header with ALLOW-FROM.\u00a0 Is the ALLOW-FROM origin compared to B or A?\u00a0 In either case, you should also note the attacks that remain.\u00a0 For example, if the answer is B, then B needs to use X-Frame-Options as well, or else, A can maliciously frame A within B.\u00a0 Or if the answer is A, then C is trusting A not to load any malicious intermediate frames B.",
        "type": "Discuss"
      },
      {
        "ad": "Richard Barnes",
        "end": "2013-08-27 06:19:39-07:00",
        "end_reason": "position_updated",
        "start": "2013-08-19 06:49:56-07:00",
        "text": "(D1) The privacy considerations make no sense to me.\u00a0 To whom is data being leaked?\u00a0 To the browser?\u00a0 To random people who send a request to a URI?\u00a0 Do you mean that X-Frame-Options leaks information about who the site authorizes?\u00a0 That's true, but also true of things like CORS.\u00a0 If this is the concern, you should recommend a mitigation that's basically the same as what CORS does, namely varying the value of X-Frame-Options based on the Referer or Origin header. (D2) It seems like this is a value that browsers might cache, to avoid unnecessary requests if the same page is framed in the future.\u00a0 If this is something browsers do today, please say so.\u00a0  (D3) Shouldn't ALLOW-FROM be followed by an origin, not a URI?\u00a0 In other words, what does it mean to send \"X-Frame-Options: ALLOW-FROM  https://example.com/this/is/a/path?query#fragment \"?",
        "type": "Discuss"
      },
      {
        "ad": "Richard Barnes",
        "end": "2013-08-28 06:11:41-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-08-27 06:19:39-07:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Sean Turner": [
      {
        "ad": "Sean Turner",
        "end": "2013-08-14 09:14:40-07:00",
        "end_reason": "new_position",
        "start": "2013-08-12 06:30:10-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Sean Turner",
        "end": "2013-08-19 15:37:44-07:00",
        "end_reason": "position_updated",
        "start": "2013-08-14 09:14:40-07:00",
        "text": "It's interesting to note that this draft says there's a problem with folks not checking the origins of the entire ancestor tree of names of the framing resource - but then doesn't say that sounds like a good idea do it.\u00a0 I can see the argument that might be made that this draft is just documenting what's done now, but shouldn't we take the opportunity to do more and recommend something along the lines of \"The entire ancestor tree of names of the framing resource SHOULD be checked to mitigate the risk of attacks in multiple-nested scenarios\" or something like that?",
        "type": "Discuss"
      },
      {
        "ad": "Sean Turner",
        "end": "2013-08-28 06:11:41-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-08-19 15:37:44-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Spencer Dawkins": [
      {
        "ad": "Spencer Dawkins",
        "end": "2013-08-12 17:49:15-07:00",
        "end_reason": "new_position",
        "start": "2013-08-12 06:30:10-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Spencer Dawkins",
        "end": "2013-08-28 06:11:41-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-08-12 17:49:15-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Stephen Farrell": [
      {
        "ad": "Stephen Farrell",
        "end": "2013-08-14 15:47:58-07:00",
        "end_reason": "new_position",
        "start": "2013-08-12 06:30:10-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Stephen Farrell",
        "end": "2013-08-28 06:11:41-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-08-14 15:47:58-07:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Stewart Bryant": [
      {
        "ad": "Stewart Bryant",
        "end": "2013-08-28 06:11:41-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-08-12 06:30:10-07:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Ted Lemon": [
      {
        "ad": "Ted Lemon",
        "end": "2013-08-14 10:51:14-07:00",
        "end_reason": "new_position",
        "start": "2013-08-12 06:30:10-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Ted Lemon",
        "end": "2013-08-28 06:11:41-07:00",
        "end_reason": "evaluation_closed",
        "start": "2013-08-14 10:51:14-07:00",
        "text": null,
        "type": "No Objection"
      }
    ]
  },
  "doc_name": "rfc7034",
  "evaluation_end": "2013-08-28 06:11:41-07:00",
  "evaluation_start": "2013-08-12 06:30:10-07:00"
}