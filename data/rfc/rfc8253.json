{
  "all_ballots": {
    "Adam Roach": [
      {
        "ad": "Adam Roach",
        "end": "2017-09-05 11:22:44-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-07-24 10:46:38-07:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Alexey Melnikov": [
      {
        "ad": "Alexey Melnikov",
        "end": "2017-08-03 03:05:21-07:00",
        "end_reason": "new_position",
        "start": "2017-07-24 10:46:38-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alexey Melnikov",
        "end": "2017-08-07 03:46:13-07:00",
        "end_reason": "position_updated",
        "start": "2017-08-03 03:05:21-07:00",
        "text": "I am very glad to see this document and I will be switching to \"Yes\" once we discuss the following issues: 1) \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 +-+-+\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  +-+-+ \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 |PCC|\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  |PCE| \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 +-+-+\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  +-+-+ \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 |\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  | \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 | StartTLS\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 | \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 | msg\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  | \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 |-------\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 | \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 |\u00a0 \u00a0 \u00a0  \\\u00a0  StartTLS\u00a0 | \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 |\u00a0 \u00a0 \u00a0 \u00a0 \\\u00a0 msg\u00a0 \u00a0 \u00a0  | \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 |\u00a0 \u00a0 \u00a0 \u00a0  \\\u00a0 ---------| \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 |\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \\/\u00a0 \u00a0 \u00a0 \u00a0  | \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 |\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 /\\\u00a0 \u00a0 \u00a0 \u00a0  | \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 |\u00a0 \u00a0 \u00a0 \u00a0  /\u00a0 -------->| \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 |\u00a0 \u00a0 \u00a0 \u00a0 /\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 | \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 |<------\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 | \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 |:::::::::TLS:::::::::| TLS Establishment \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 |:::::Establishment:::| Failure \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 |\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  | \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 |<--------------------| Send Error-Type TBA2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 |\u00a0 \u00a0 \u00a0 PCErr\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 | Error-Value 3/4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 |\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  | \u00a0 \u00a0 \u00a0 Figure 2: Both PCEP Speaker supports PCEPS (strict), but cannot \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  establish TLS Firstly, I think you also need to demonstrate a case when the server end of TLS is refusing to startTLS before trying TLS negotiation (e.g. if it doesn't have certificate configured). In this case you need to send PCErr in the clear. I think earlier text suggest that this case is possible. Secondly, does the case depicted on this picture mean that TLS was negotiated successfully, but TLS identities were not successfully verified? (I.e. the PCErr is sent over the TLS layer). If TLS failed to negotiate, you don't have a channel to send data on, as the other end will get confused. I think you just have to close connection in such case. So maybe you need 3 figures describing the above 3 cases. 2) In Section 3.4: \u00a0 \u00a0 \u00a0 \u00a0 +\u00a0 Implementations MAY allow the configuration of a set of \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  additional properties of the certificate to check for a \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  peer's authorization to communicate (e.g., a set of allowed \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  values in subjectAltName:URI or a set of allowed X509v3 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  Certificate Policies) Can you give an example of what you expect to see in the subjectAltName:URI? Your current text doesn't seem sufficient for interoperability.",
        "type": "Discuss"
      },
      {
        "ad": "Alexey Melnikov",
        "end": "2017-09-05 11:22:44-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-08-07 03:46:13-07:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Alia Atlas": [
      {
        "ad": "Alia Atlas",
        "end": "2017-08-02 12:59:18-07:00",
        "end_reason": "new_position",
        "start": "2017-07-24 10:46:38-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Alia Atlas",
        "end": "2017-09-05 11:22:44-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-08-02 12:59:18-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Alissa Cooper": [
      {
        "ad": "Alissa Cooper",
        "end": "2017-09-05 11:22:44-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-07-24 10:46:38-07:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Alvaro Retana": [
      {
        "ad": "Alvaro Retana",
        "end": "2017-09-05 11:22:44-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-07-24 10:46:38-07:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Ben Campbell": [
      {
        "ad": "Ben Campbell",
        "end": "2017-08-02 15:49:06-07:00",
        "end_reason": "new_position",
        "start": "2017-07-24 10:46:38-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Ben Campbell",
        "end": "2017-08-07 14:40:07-07:00",
        "end_reason": "position_updated",
        "start": "2017-08-02 15:49:06-07:00",
        "text": "-3.4, step 2: \"Peer validation always SHOULD include a check on whether \u00a0  the locally configured expected DNS name or IP address of \u00a0  the peer that is contacted matches its presented \u00a0  certificate.\" Why is that not a MUST? As it is, this need to at least discuss the risks involved if you don't check the identity of the peer cert (here or in the security considerations.)",
        "type": "Discuss"
      },
      {
        "ad": "Ben Campbell",
        "end": "2017-09-05 11:22:44-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-08-07 14:40:07-07:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Benoit Claise": [
      {
        "ad": "Benoit Claise",
        "end": "2017-09-05 11:22:44-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-07-24 10:46:38-07:00",
        "text": null,
        "type": "No Record"
      }
    ],
    "Deborah Brungard": [
      {
        "ad": "Deborah Brungard",
        "end": "2017-07-24 10:46:38-07:00",
        "end_reason": "new_position",
        "start": "2017-07-24 10:46:38-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Deborah Brungard",
        "end": "2017-09-05 11:22:44-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-07-24 10:46:38-07:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Eric Rescorla": [
      {
        "ad": "Eric Rescorla",
        "end": "2017-08-01 09:38:43-07:00",
        "end_reason": "new_position",
        "start": "2017-07-24 10:46:38-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Eric Rescorla",
        "end": "2017-09-04 20:10:52-07:00",
        "end_reason": "position_updated",
        "start": "2017-08-01 09:38:43-07:00",
        "text": "1. This needs a cite to  RFC 6125  to define how to do name validation. 2. You require TLS_RSA_WITH_AES_128_GCM_SHA256, but this is not consistent with modern recommendations, which are for algorithms that provide forward secrecy. You should be recommending TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 with P-256, which is consistent with the recommendations for TLS 1.3 (and UTA, IIRC). 3, It's clear to me how authentication of the PCE works in that the PCC connects to it using a domain name or IP address and therefore can check the PCC's certificate against that, but it's not clear to me what the PCE does when the client connects? Is it supposed to have a list of valid peers? 4. The error reporting mechanism you describe in S 3.2 is unusual: \u00a0  After the exchange of StartTLS messages, if a PCEP speaker cannot \u00a0  establish a TLS connection for some reason (e.g. the required \u00a0  mechanisms for certificate revocation checking are not available), it \u00a0  MUST return a PCErr message (in clear) with Error-Type set to [TBA2 \u00a0  by IANA] (PCEP StartTLS failure) and Error-value set to: I am not aware of any other protocol that does this, and it's a bit problematic because you either need to (a) require that you always send a TLS alert so that the receiver knows that the next byte is a PCE message or (b) specify some mechanism for demuxing PCE and TLS. Even in the former category, many TLS stacks are greedy about their IO, so they will read the alert + the PCE message and then discard the message. Instead you should either: (a) specify that you always send TLS alerts and don't send PCE errors (TLS alerts are pretty rich) (b) send any post-handshake alerts over the TLS connection. Failing that, you need to provide detailed instructions about how to make this work. 5. It seems like it would be a good idea to specify a pinning mechanism so you could say \"always do TLS in future\". Is that something that was discussed? 6.\u00a0 \u00a0 \u00a0 \u00a0 *\u00a0 TLS with X.509 certificates using certificate fingerprints: \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Implementations MUST allow the configuration of a list of \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 trusted certificates, identified via fingerprint of the \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Distinguished Encoding Rules (DER) encoded certificate octets. \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Implementations MUST support SHA-256 as defined by [SHS] as \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 the hash algorithm for the fingerprint. What does \"trusted\" mean here? I think it means \"one I would accept as a counterparty\" rather than \"can sign other certs\". In any case, this must be clear. A bunch of other stuff is underspecified (see below).",
        "type": "Discuss"
      },
      {
        "ad": "Eric Rescorla",
        "end": "2017-09-05 11:22:44-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-09-04 20:10:52-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Kathleen Moriarty": [
      {
        "ad": "Kathleen Moriarty",
        "end": "2017-08-02 09:26:10-07:00",
        "end_reason": "new_position",
        "start": "2017-07-24 10:46:38-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Kathleen Moriarty",
        "end": "2017-09-05 11:22:44-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-08-02 09:26:10-07:00",
        "text": null,
        "type": "Yes"
      }
    ],
    "Mirja Kuhlewind": [
      {
        "ad": "Mirja Kuhlewind",
        "end": "2017-07-31 09:14:10-07:00",
        "end_reason": "new_position",
        "start": "2017-07-24 10:46:38-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Mirja Kuhlewind",
        "end": "2017-09-05 11:22:44-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-07-31 09:14:10-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Spencer Dawkins": [
      {
        "ad": "Spencer Dawkins",
        "end": "2017-08-01 18:40:47-07:00",
        "end_reason": "new_position",
        "start": "2017-07-24 10:46:38-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Spencer Dawkins",
        "end": "2017-09-05 11:22:44-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-08-01 18:40:47-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Suresh Krishnan": [
      {
        "ad": "Suresh Krishnan",
        "end": "2017-08-02 15:40:46-07:00",
        "end_reason": "new_position",
        "start": "2017-07-24 10:46:38-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Suresh Krishnan",
        "end": "2017-08-09 08:33:58-07:00",
        "end_reason": "position_updated",
        "start": "2017-08-02 15:40:46-07:00",
        "text": "* Section 3.2: This seems to be overly broad and directly contradicts to what is required by  RFC5440 . \u00a0  A PCEP speaker receiving any other message apart from StartTLS, Open, or \u00a0  PCErr as the first message, MUST treat it as an unexpected message \u00a0  and reply with a PCErr message with Error-Type set to [TBA2 by IANA] \u00a0  (PCEP StartTLS failure) and Error-value set to 2 (reception of any \u00a0  other message apart from StartTLS, Open, or PCErr message), and MUST \u00a0  close the TCP connection. According to  RFC5440 , when a non-Open message is received the PCEP speaker is required to send a PCErr message with Error-Type 1 (\"PCEP session establishment failure\") and Error-value 1 (\"reception of an invalid Open message or a non Open message\"). I think this text needs to be reworded to narrow down the scope of this error. * The fallback procedure after receiving the error code 4 needs to be clarified. Is the response 4 remembered for future connections or is it only limited to a single attempt immediately after the TLS connection establishment failure. i.e. After falling back, does the client ever try to establish a secure connection again?",
        "type": "Discuss"
      },
      {
        "ad": "Suresh Krishnan",
        "end": "2017-09-05 11:22:44-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-08-09 08:33:58-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Terry Manderson": [
      {
        "ad": "Terry Manderson",
        "end": "2017-08-01 16:31:26-07:00",
        "end_reason": "new_position",
        "start": "2017-07-24 10:46:38-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Terry Manderson",
        "end": "2017-09-05 11:22:44-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-08-01 16:31:26-07:00",
        "text": null,
        "type": "No Objection"
      }
    ],
    "Warren Kumari": [
      {
        "ad": "Warren Kumari",
        "end": "2017-08-01 16:22:10-07:00",
        "end_reason": "new_position",
        "start": "2017-07-24 10:46:38-07:00",
        "text": null,
        "type": "No Record"
      },
      {
        "ad": "Warren Kumari",
        "end": "2017-09-05 11:22:44-07:00",
        "end_reason": "evaluation_closed",
        "start": "2017-08-01 16:22:10-07:00",
        "text": null,
        "type": "No Objection"
      }
    ]
  },
  "doc_name": "rfc8253",
  "evaluation_end": "2017-09-05 11:22:44-07:00",
  "evaluation_start": "2017-07-24 10:46:38-07:00"
}